// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: svc/compute/securitygroup/securitygroup.proto

package securitygroup

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/type/decimal"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecurityGroup_Rule_Protocol int32

const (
	SecurityGroup_Rule_PROTOCOL_UNKNOWN SecurityGroup_Rule_Protocol = 0
	SecurityGroup_Rule_PROTOCOL_ALL     SecurityGroup_Rule_Protocol = 1
	SecurityGroup_Rule_PROTOCOL_TCP     SecurityGroup_Rule_Protocol = 2
	SecurityGroup_Rule_PROTOCOL_UDP     SecurityGroup_Rule_Protocol = 3
	SecurityGroup_Rule_PROTOCOL_ICMP    SecurityGroup_Rule_Protocol = 4
	SecurityGroup_Rule_PROTOCOL_ICMPv6  SecurityGroup_Rule_Protocol = 5
	SecurityGroup_Rule_PROTOCOL_IPSEC   SecurityGroup_Rule_Protocol = 6
)

// Enum value maps for SecurityGroup_Rule_Protocol.
var (
	SecurityGroup_Rule_Protocol_name = map[int32]string{
		0: "PROTOCOL_UNKNOWN",
		1: "PROTOCOL_ALL",
		2: "PROTOCOL_TCP",
		3: "PROTOCOL_UDP",
		4: "PROTOCOL_ICMP",
		5: "PROTOCOL_ICMPv6",
		6: "PROTOCOL_IPSEC",
	}
	SecurityGroup_Rule_Protocol_value = map[string]int32{
		"PROTOCOL_UNKNOWN": 0,
		"PROTOCOL_ALL":     1,
		"PROTOCOL_TCP":     2,
		"PROTOCOL_UDP":     3,
		"PROTOCOL_ICMP":    4,
		"PROTOCOL_ICMPv6":  5,
		"PROTOCOL_IPSEC":   6,
	}
)

func (x SecurityGroup_Rule_Protocol) Enum() *SecurityGroup_Rule_Protocol {
	p := new(SecurityGroup_Rule_Protocol)
	*p = x
	return p
}

func (x SecurityGroup_Rule_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityGroup_Rule_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_securitygroup_securitygroup_proto_enumTypes[0].Descriptor()
}

func (SecurityGroup_Rule_Protocol) Type() protoreflect.EnumType {
	return &file_svc_compute_securitygroup_securitygroup_proto_enumTypes[0]
}

func (x SecurityGroup_Rule_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityGroup_Rule_Protocol.Descriptor instead.
func (SecurityGroup_Rule_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_securitygroup_securitygroup_proto_rawDescGZIP(), []int{0, 0, 0}
}

type SecurityGroup_Rule_RuleType int32

const (
	SecurityGroup_Rule_RULE_TYPE_UNKNOWN  SecurityGroup_Rule_RuleType = 0
	SecurityGroup_Rule_RULE_TYPE_INBOUND  SecurityGroup_Rule_RuleType = 1
	SecurityGroup_Rule_RULE_TYPE_OUTBOUND SecurityGroup_Rule_RuleType = 2
)

// Enum value maps for SecurityGroup_Rule_RuleType.
var (
	SecurityGroup_Rule_RuleType_name = map[int32]string{
		0: "RULE_TYPE_UNKNOWN",
		1: "RULE_TYPE_INBOUND",
		2: "RULE_TYPE_OUTBOUND",
	}
	SecurityGroup_Rule_RuleType_value = map[string]int32{
		"RULE_TYPE_UNKNOWN":  0,
		"RULE_TYPE_INBOUND":  1,
		"RULE_TYPE_OUTBOUND": 2,
	}
)

func (x SecurityGroup_Rule_RuleType) Enum() *SecurityGroup_Rule_RuleType {
	p := new(SecurityGroup_Rule_RuleType)
	*p = x
	return p
}

func (x SecurityGroup_Rule_RuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityGroup_Rule_RuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_securitygroup_securitygroup_proto_enumTypes[1].Descriptor()
}

func (SecurityGroup_Rule_RuleType) Type() protoreflect.EnumType {
	return &file_svc_compute_securitygroup_securitygroup_proto_enumTypes[1]
}

func (x SecurityGroup_Rule_RuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityGroup_Rule_RuleType.Descriptor instead.
func (SecurityGroup_Rule_RuleType) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_securitygroup_securitygroup_proto_rawDescGZIP(), []int{0, 0, 1}
}

type SecurityGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DataCenterId  string                 `protobuf:"bytes,2,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Rules         []*SecurityGroup_Rule  `protobuf:"bytes,5,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityGroup) Reset() {
	*x = SecurityGroup{}
	mi := &file_svc_compute_securitygroup_securitygroup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityGroup) ProtoMessage() {}

func (x *SecurityGroup) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_securitygroup_securitygroup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityGroup.ProtoReflect.Descriptor instead.
func (*SecurityGroup) Descriptor() ([]byte, []int) {
	return file_svc_compute_securitygroup_securitygroup_proto_rawDescGZIP(), []int{0}
}

func (x *SecurityGroup) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SecurityGroup) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *SecurityGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SecurityGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SecurityGroup) GetRules() []*SecurityGroup_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type SecurityGroup_Rule struct {
	state    protoimpl.MessageState      `protogen:"open.v1"`
	Id       string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Protocol SecurityGroup_Rule_Protocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=org.cudo.compute.v1.SecurityGroup_Rule_Protocol" json:"protocol,omitempty"`
	Ports    string                      `protobuf:"bytes,3,opt,name=ports,proto3" json:"ports,omitempty"`
	RuleType SecurityGroup_Rule_RuleType `protobuf:"varint,4,opt,name=rule_type,json=ruleType,proto3,enum=org.cudo.compute.v1.SecurityGroup_Rule_RuleType" json:"rule_type,omitempty"`
	// single IP or CIDR format range to apply rule to
	IpRangeCidr   string `protobuf:"bytes,5,opt,name=ip_range_cidr,json=ipRangeCidr,proto3" json:"ip_range_cidr,omitempty"`
	IcmpType      string `protobuf:"bytes,6,opt,name=icmp_type,json=icmpType,proto3" json:"icmp_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityGroup_Rule) Reset() {
	*x = SecurityGroup_Rule{}
	mi := &file_svc_compute_securitygroup_securitygroup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityGroup_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityGroup_Rule) ProtoMessage() {}

func (x *SecurityGroup_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_securitygroup_securitygroup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityGroup_Rule.ProtoReflect.Descriptor instead.
func (*SecurityGroup_Rule) Descriptor() ([]byte, []int) {
	return file_svc_compute_securitygroup_securitygroup_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SecurityGroup_Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SecurityGroup_Rule) GetProtocol() SecurityGroup_Rule_Protocol {
	if x != nil {
		return x.Protocol
	}
	return SecurityGroup_Rule_PROTOCOL_UNKNOWN
}

func (x *SecurityGroup_Rule) GetPorts() string {
	if x != nil {
		return x.Ports
	}
	return ""
}

func (x *SecurityGroup_Rule) GetRuleType() SecurityGroup_Rule_RuleType {
	if x != nil {
		return x.RuleType
	}
	return SecurityGroup_Rule_RULE_TYPE_UNKNOWN
}

func (x *SecurityGroup_Rule) GetIpRangeCidr() string {
	if x != nil {
		return x.IpRangeCidr
	}
	return ""
}

func (x *SecurityGroup_Rule) GetIcmpType() string {
	if x != nil {
		return x.IcmpType
	}
	return ""
}

var File_svc_compute_securitygroup_securitygroup_proto protoreflect.FileDescriptor

const file_svc_compute_securitygroup_securitygroup_proto_rawDesc = "" +
	"\n" +
	"-svc/compute/securitygroup/securitygroup.proto\x12\x13org.cudo.compute.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/type/decimal.proto\"\xc3\x05\n" +
	"\rSecurityGroup\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12)\n" +
	"\x0edata_center_id\x18\x02 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12\x13\n" +
	"\x02id\x18\x03 \x01(\tB\x03\xe0A\x02R\x02id\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12=\n" +
	"\x05rules\x18\x05 \x03(\v2'.org.cudo.compute.v1.SecurityGroup.RuleR\x05rules\x1a\xf1\x03\n" +
	"\x04Rule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12L\n" +
	"\bprotocol\x18\x02 \x01(\x0e20.org.cudo.compute.v1.SecurityGroup.Rule.ProtocolR\bprotocol\x12\x14\n" +
	"\x05ports\x18\x03 \x01(\tR\x05ports\x12M\n" +
	"\trule_type\x18\x04 \x01(\x0e20.org.cudo.compute.v1.SecurityGroup.Rule.RuleTypeR\bruleType\x12\"\n" +
	"\rip_range_cidr\x18\x05 \x01(\tR\vipRangeCidr\x12\x1b\n" +
	"\ticmp_type\x18\x06 \x01(\tR\bicmpType\"\x92\x01\n" +
	"\bProtocol\x12\x14\n" +
	"\x10PROTOCOL_UNKNOWN\x10\x00\x12\x10\n" +
	"\fPROTOCOL_ALL\x10\x01\x12\x10\n" +
	"\fPROTOCOL_TCP\x10\x02\x12\x10\n" +
	"\fPROTOCOL_UDP\x10\x03\x12\x11\n" +
	"\rPROTOCOL_ICMP\x10\x04\x12\x13\n" +
	"\x0fPROTOCOL_ICMPv6\x10\x05\x12\x12\n" +
	"\x0ePROTOCOL_IPSEC\x10\x06\"P\n" +
	"\bRuleType\x12\x15\n" +
	"\x11RULE_TYPE_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11RULE_TYPE_INBOUND\x10\x01\x12\x16\n" +
	"\x12RULE_TYPE_OUTBOUND\x10\x02BGZEgithub.com/CudoVentures/cudo-compute-market/svc/compute/securitygroupb\x06proto3"

var (
	file_svc_compute_securitygroup_securitygroup_proto_rawDescOnce sync.Once
	file_svc_compute_securitygroup_securitygroup_proto_rawDescData []byte
)

func file_svc_compute_securitygroup_securitygroup_proto_rawDescGZIP() []byte {
	file_svc_compute_securitygroup_securitygroup_proto_rawDescOnce.Do(func() {
		file_svc_compute_securitygroup_securitygroup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_compute_securitygroup_securitygroup_proto_rawDesc), len(file_svc_compute_securitygroup_securitygroup_proto_rawDesc)))
	})
	return file_svc_compute_securitygroup_securitygroup_proto_rawDescData
}

var file_svc_compute_securitygroup_securitygroup_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_svc_compute_securitygroup_securitygroup_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_svc_compute_securitygroup_securitygroup_proto_goTypes = []any{
	(SecurityGroup_Rule_Protocol)(0), // 0: org.cudo.compute.v1.SecurityGroup.Rule.Protocol
	(SecurityGroup_Rule_RuleType)(0), // 1: org.cudo.compute.v1.SecurityGroup.Rule.RuleType
	(*SecurityGroup)(nil),            // 2: org.cudo.compute.v1.SecurityGroup
	(*SecurityGroup_Rule)(nil),       // 3: org.cudo.compute.v1.SecurityGroup.Rule
}
var file_svc_compute_securitygroup_securitygroup_proto_depIdxs = []int32{
	3, // 0: org.cudo.compute.v1.SecurityGroup.rules:type_name -> org.cudo.compute.v1.SecurityGroup.Rule
	0, // 1: org.cudo.compute.v1.SecurityGroup.Rule.protocol:type_name -> org.cudo.compute.v1.SecurityGroup.Rule.Protocol
	1, // 2: org.cudo.compute.v1.SecurityGroup.Rule.rule_type:type_name -> org.cudo.compute.v1.SecurityGroup.Rule.RuleType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_svc_compute_securitygroup_securitygroup_proto_init() }
func file_svc_compute_securitygroup_securitygroup_proto_init() {
	if File_svc_compute_securitygroup_securitygroup_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_compute_securitygroup_securitygroup_proto_rawDesc), len(file_svc_compute_securitygroup_securitygroup_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svc_compute_securitygroup_securitygroup_proto_goTypes,
		DependencyIndexes: file_svc_compute_securitygroup_securitygroup_proto_depIdxs,
		EnumInfos:         file_svc_compute_securitygroup_securitygroup_proto_enumTypes,
		MessageInfos:      file_svc_compute_securitygroup_securitygroup_proto_msgTypes,
	}.Build()
	File_svc_compute_securitygroup_securitygroup_proto = out.File
	file_svc_compute_securitygroup_securitygroup_proto_goTypes = nil
	file_svc_compute_securitygroup_securitygroup_proto_depIdxs = nil
}
