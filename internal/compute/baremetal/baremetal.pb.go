// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: svc/compute/baremetal/baremetal.proto

package baremetal

import (
	compute "github.com/CudoVentures/terraform-provider-cudo/internal/compute"
	vm "github.com/CudoVentures/terraform-provider-cudo/internal/compute/vm"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	decimal "google.golang.org/genproto/googleapis/type/decimal"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkType int32

const (
	NetworkType_NETWORK_TYPE_UNSPECIFIED NetworkType = 0
	NetworkType_ETHERNET                 NetworkType = 1
	NetworkType_INFINIBAND               NetworkType = 2
)

// Enum value maps for NetworkType.
var (
	NetworkType_name = map[int32]string{
		0: "NETWORK_TYPE_UNSPECIFIED",
		1: "ETHERNET",
		2: "INFINIBAND",
	}
	NetworkType_value = map[string]int32{
		"NETWORK_TYPE_UNSPECIFIED": 0,
		"ETHERNET":                 1,
		"INFINIBAND":               2,
	}
)

func (x NetworkType) Enum() *NetworkType {
	p := new(NetworkType)
	*p = x
	return p
}

func (x NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_baremetal_baremetal_proto_enumTypes[0].Descriptor()
}

func (NetworkType) Type() protoreflect.EnumType {
	return &file_svc_compute_baremetal_baremetal_proto_enumTypes[0]
}

func (x NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkType.Descriptor instead.
func (NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{0}
}

// TODO: Not all of these states are necessary; remove any that aren't relevant to customers.
type MachineState int32

const (
	MachineState_MACHINE_STATE_UNSPECIFIED MachineState = 0
	MachineState_NEW                       MachineState = 1
	MachineState_COMMISSIONING             MachineState = 2
	MachineState_FAILED                    MachineState = 3
	MachineState_MISSING                   MachineState = 4
	MachineState_READY                     MachineState = 5
	MachineState_RESERVED                  MachineState = 6
	MachineState_DEPLOYED                  MachineState = 7
	MachineState_RETIRED                   MachineState = 8
	MachineState_DEPLOYING                 MachineState = 9
	MachineState_ALLOCATED                 MachineState = 10
	MachineState_RELEASING                 MachineState = 11
	MachineState_ERASING                   MachineState = 12
	MachineState_RESCUE_MODE               MachineState = 13
	MachineState_TESTING                   MachineState = 14
)

// Enum value maps for MachineState.
var (
	MachineState_name = map[int32]string{
		0:  "MACHINE_STATE_UNSPECIFIED",
		1:  "NEW",
		2:  "COMMISSIONING",
		3:  "FAILED",
		4:  "MISSING",
		5:  "READY",
		6:  "RESERVED",
		7:  "DEPLOYED",
		8:  "RETIRED",
		9:  "DEPLOYING",
		10: "ALLOCATED",
		11: "RELEASING",
		12: "ERASING",
		13: "RESCUE_MODE",
		14: "TESTING",
	}
	MachineState_value = map[string]int32{
		"MACHINE_STATE_UNSPECIFIED": 0,
		"NEW":                       1,
		"COMMISSIONING":             2,
		"FAILED":                    3,
		"MISSING":                   4,
		"READY":                     5,
		"RESERVED":                  6,
		"DEPLOYED":                  7,
		"RETIRED":                   8,
		"DEPLOYING":                 9,
		"ALLOCATED":                 10,
		"RELEASING":                 11,
		"ERASING":                   12,
		"RESCUE_MODE":               13,
		"TESTING":                   14,
	}
)

func (x MachineState) Enum() *MachineState {
	p := new(MachineState)
	*p = x
	return p
}

func (x MachineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachineState) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_baremetal_baremetal_proto_enumTypes[1].Descriptor()
}

func (MachineState) Type() protoreflect.EnumType {
	return &file_svc_compute_baremetal_baremetal_proto_enumTypes[1]
}

func (x MachineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachineState.Descriptor instead.
func (MachineState) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{1}
}

type MachinePowerState int32

const (
	MachinePowerState_MACHINE_POWER_STATE_UNSPECIFIED MachinePowerState = 0
	MachinePowerState_ON                              MachinePowerState = 1
	MachinePowerState_OFF                             MachinePowerState = 2
	MachinePowerState_POWERING_ON                     MachinePowerState = 3
	MachinePowerState_POWERING_OFF                    MachinePowerState = 4
	MachinePowerState_REBOOTING                       MachinePowerState = 5
)

// Enum value maps for MachinePowerState.
var (
	MachinePowerState_name = map[int32]string{
		0: "MACHINE_POWER_STATE_UNSPECIFIED",
		1: "ON",
		2: "OFF",
		3: "POWERING_ON",
		4: "POWERING_OFF",
		5: "REBOOTING",
	}
	MachinePowerState_value = map[string]int32{
		"MACHINE_POWER_STATE_UNSPECIFIED": 0,
		"ON":                              1,
		"OFF":                             2,
		"POWERING_ON":                     3,
		"POWERING_OFF":                    4,
		"REBOOTING":                       5,
	}
)

func (x MachinePowerState) Enum() *MachinePowerState {
	p := new(MachinePowerState)
	*p = x
	return p
}

func (x MachinePowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MachinePowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_baremetal_baremetal_proto_enumTypes[2].Descriptor()
}

func (MachinePowerState) Type() protoreflect.EnumType {
	return &file_svc_compute_baremetal_baremetal_proto_enumTypes[2]
}

func (x MachinePowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MachinePowerState.Descriptor instead.
func (MachinePowerState) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{2}
}

type Cluster_State int32

const (
	Cluster_STATE_UNSPECIFIED Cluster_State = 0
	Cluster_CREATING          Cluster_State = 1
	Cluster_ACTIVE            Cluster_State = 2
	Cluster_UPDATING          Cluster_State = 3
	Cluster_DELETING          Cluster_State = 4
	Cluster_FAILED            Cluster_State = 5
)

// Enum value maps for Cluster_State.
var (
	Cluster_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "CREATING",
		2: "ACTIVE",
		3: "UPDATING",
		4: "DELETING",
		5: "FAILED",
	}
	Cluster_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"CREATING":          1,
		"ACTIVE":            2,
		"UPDATING":          3,
		"DELETING":          4,
		"FAILED":            5,
	}
)

func (x Cluster_State) Enum() *Cluster_State {
	p := new(Cluster_State)
	*p = x
	return p
}

func (x Cluster_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_State) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_baremetal_baremetal_proto_enumTypes[3].Descriptor()
}

func (Cluster_State) Type() protoreflect.EnumType {
	return &file_svc_compute_baremetal_baremetal_proto_enumTypes[3]
}

func (x Cluster_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_State.Descriptor instead.
func (Cluster_State) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{8, 0}
}

type ClusterMachine_State int32

const (
	ClusterMachine_STATE_UNSPECIFIED ClusterMachine_State = 0
	ClusterMachine_CREATING          ClusterMachine_State = 1
	ClusterMachine_ACTIVE            ClusterMachine_State = 2
	ClusterMachine_DELETING          ClusterMachine_State = 3
	ClusterMachine_FAILED            ClusterMachine_State = 4
)

// Enum value maps for ClusterMachine_State.
var (
	ClusterMachine_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "CREATING",
		2: "ACTIVE",
		3: "DELETING",
		4: "FAILED",
	}
	ClusterMachine_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"CREATING":          1,
		"ACTIVE":            2,
		"DELETING":          3,
		"FAILED":            4,
	}
)

func (x ClusterMachine_State) Enum() *ClusterMachine_State {
	p := new(ClusterMachine_State)
	*p = x
	return p
}

func (x ClusterMachine_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterMachine_State) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_baremetal_baremetal_proto_enumTypes[4].Descriptor()
}

func (ClusterMachine_State) Type() protoreflect.EnumType {
	return &file_svc_compute_baremetal_baremetal_proto_enumTypes[4]
}

func (x ClusterMachine_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterMachine_State.Descriptor instead.
func (ClusterMachine_State) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{9, 0}
}

type MachineType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The data center in which this machine type is available.
	DataCenterId string `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	// The unique identifier for this machine type within the data center.
	Id           string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Architecture string `protobuf:"bytes,3,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CpuCores     int32  `protobuf:"varint,4,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	CpuSpeedMhz  int32  `protobuf:"varint,5,opt,name=cpu_speed_mhz,json=cpuSpeedMhz,proto3" json:"cpu_speed_mhz,omitempty"`
	CpuModel     string `protobuf:"bytes,6,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model,omitempty"`
	MemoryGib    int32  `protobuf:"varint,7,opt,name=memory_gib,json=memoryGib,proto3" json:"memory_gib,omitempty"`
	Disks        int32  `protobuf:"varint,8,opt,name=disks,proto3" json:"disks,omitempty"`
	DiskSizeGib  int32  `protobuf:"varint,9,opt,name=disk_size_gib,json=diskSizeGib,proto3" json:"disk_size_gib,omitempty"`
	Gpus         int32  `protobuf:"varint,10,opt,name=gpus,proto3" json:"gpus,omitempty"`
	GpuModelId   string `protobuf:"bytes,11,opt,name=gpu_model_id,json=gpuModelId,proto3" json:"gpu_model_id,omitempty"`
	// The list of prices available for this machine type for varying commitment terms.
	Prices []*MachineTypePrice `protobuf:"bytes,12,rep,name=prices,proto3" json:"prices,omitempty"`
	// The number of machines available for deployment.
	MachinesFree  int32       `protobuf:"varint,13,opt,name=machines_free,json=machinesFree,proto3" json:"machines_free,omitempty"`
	NetworkType   NetworkType `protobuf:"varint,14,opt,name=network_type,json=networkType,proto3,enum=org.cudo.compute.v1.NetworkType" json:"network_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineType) Reset() {
	*x = MachineType{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineType) ProtoMessage() {}

func (x *MachineType) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineType.ProtoReflect.Descriptor instead.
func (*MachineType) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{0}
}

func (x *MachineType) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *MachineType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineType) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *MachineType) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *MachineType) GetCpuSpeedMhz() int32 {
	if x != nil {
		return x.CpuSpeedMhz
	}
	return 0
}

func (x *MachineType) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *MachineType) GetMemoryGib() int32 {
	if x != nil {
		return x.MemoryGib
	}
	return 0
}

func (x *MachineType) GetDisks() int32 {
	if x != nil {
		return x.Disks
	}
	return 0
}

func (x *MachineType) GetDiskSizeGib() int32 {
	if x != nil {
		return x.DiskSizeGib
	}
	return 0
}

func (x *MachineType) GetGpus() int32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *MachineType) GetGpuModelId() string {
	if x != nil {
		return x.GpuModelId
	}
	return ""
}

func (x *MachineType) GetPrices() []*MachineTypePrice {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *MachineType) GetMachinesFree() int32 {
	if x != nil {
		return x.MachinesFree
	}
	return 0
}

func (x *MachineType) GetNetworkType() NetworkType {
	if x != nil {
		return x.NetworkType
	}
	return NetworkType_NETWORK_TYPE_UNSPECIFIED
}

type MachineTypePrice struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DataCenterId   string                 `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineTypeId  string                 `protobuf:"bytes,2,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	CommitmentTerm compute.CommitmentTerm `protobuf:"varint,3,opt,name=commitment_term,json=commitmentTerm,proto3,enum=org.cudo.compute.v1.CommitmentTerm" json:"commitment_term,omitempty"`
	PriceHr        *decimal.Decimal       `protobuf:"bytes,4,opt,name=price_hr,json=priceHr,proto3" json:"price_hr,omitempty"`
	Ipv4PriceHr    *decimal.Decimal       `protobuf:"bytes,5,opt,name=ipv4_price_hr,json=ipv4PriceHr,proto3" json:"ipv4_price_hr,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MachineTypePrice) Reset() {
	*x = MachineTypePrice{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineTypePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineTypePrice) ProtoMessage() {}

func (x *MachineTypePrice) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineTypePrice.ProtoReflect.Descriptor instead.
func (*MachineTypePrice) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{1}
}

func (x *MachineTypePrice) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *MachineTypePrice) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

func (x *MachineTypePrice) GetCommitmentTerm() compute.CommitmentTerm {
	if x != nil {
		return x.CommitmentTerm
	}
	return compute.CommitmentTerm(0)
}

func (x *MachineTypePrice) GetPriceHr() *decimal.Decimal {
	if x != nil {
		return x.PriceHr
	}
	return nil
}

func (x *MachineTypePrice) GetIpv4PriceHr() *decimal.Decimal {
	if x != nil {
		return x.Ipv4PriceHr
	}
	return nil
}

type Machine struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DataCenterId        string                 `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	Id                  string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	MachineTypeId       string                 `protobuf:"bytes,3,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	Architecture        string                 `protobuf:"bytes,4,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CpuCores            int32                  `protobuf:"varint,5,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	CpuSpeedMhz         int32                  `protobuf:"varint,6,opt,name=cpu_speed_mhz,json=cpuSpeedMhz,proto3" json:"cpu_speed_mhz,omitempty"`
	CpuModel            string                 `protobuf:"bytes,7,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model,omitempty"`
	MemoryGib           int32                  `protobuf:"varint,8,opt,name=memory_gib,json=memoryGib,proto3" json:"memory_gib,omitempty"`
	Disks               int32                  `protobuf:"varint,9,opt,name=disks,proto3" json:"disks,omitempty"`
	DiskSizeGib         int32                  `protobuf:"varint,10,opt,name=disk_size_gib,json=diskSizeGib,proto3" json:"disk_size_gib,omitempty"`
	Gpus                int32                  `protobuf:"varint,11,opt,name=gpus,proto3" json:"gpus,omitempty"`
	GpuModelId          string                 `protobuf:"bytes,12,opt,name=gpu_model_id,json=gpuModelId,proto3" json:"gpu_model_id,omitempty"`
	State               MachineState           `protobuf:"varint,13,opt,name=state,proto3,enum=org.cudo.compute.v1.MachineState" json:"state,omitempty"`
	PowerState          MachinePowerState      `protobuf:"varint,14,opt,name=power_state,json=powerState,proto3,enum=org.cudo.compute.v1.MachinePowerState" json:"power_state,omitempty"`
	Os                  string                 `protobuf:"bytes,15,opt,name=os,proto3" json:"os,omitempty"`
	Hostname            string                 `protobuf:"bytes,16,opt,name=hostname,proto3" json:"hostname,omitempty"`
	ExternalIpAddresses []string               `protobuf:"bytes,17,rep,name=external_ip_addresses,json=externalIpAddresses,proto3" json:"external_ip_addresses,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Machine) Reset() {
	*x = Machine{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{2}
}

func (x *Machine) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

func (x *Machine) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Machine) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *Machine) GetCpuSpeedMhz() int32 {
	if x != nil {
		return x.CpuSpeedMhz
	}
	return 0
}

func (x *Machine) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *Machine) GetMemoryGib() int32 {
	if x != nil {
		return x.MemoryGib
	}
	return 0
}

func (x *Machine) GetDisks() int32 {
	if x != nil {
		return x.Disks
	}
	return 0
}

func (x *Machine) GetDiskSizeGib() int32 {
	if x != nil {
		return x.DiskSizeGib
	}
	return 0
}

func (x *Machine) GetGpus() int32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *Machine) GetGpuModelId() string {
	if x != nil {
		return x.GpuModelId
	}
	return ""
}

func (x *Machine) GetState() MachineState {
	if x != nil {
		return x.State
	}
	return MachineState_MACHINE_STATE_UNSPECIFIED
}

func (x *Machine) GetPowerState() MachinePowerState {
	if x != nil {
		return x.PowerState
	}
	return MachinePowerState_MACHINE_POWER_STATE_UNSPECIFIED
}

func (x *Machine) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Machine) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Machine) GetExternalIpAddresses() []string {
	if x != nil {
		return x.ExternalIpAddresses
	}
	return nil
}

type MachineInstance struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectId      string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id             string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataCenterId   string                 `protobuf:"bytes,3,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineTypeId  string                 `protobuf:"bytes,4,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	Machine        *Machine               `protobuf:"bytes,5,opt,name=machine,proto3" json:"machine,omitempty"`
	CreateTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	CreateBy       string                 `protobuf:"bytes,7,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	PowerState     MachinePowerState      `protobuf:"varint,8,opt,name=power_state,json=powerState,proto3,enum=org.cudo.compute.v1.MachinePowerState" json:"power_state,omitempty"`
	CommitmentTerm compute.CommitmentTerm `protobuf:"varint,9,opt,name=commitment_term,json=commitmentTerm,proto3,enum=org.cudo.compute.v1.CommitmentTerm" json:"commitment_term,omitempty"`
	PriceHr        *decimal.Decimal       `protobuf:"bytes,10,opt,name=price_hr,json=priceHr,proto3" json:"price_hr,omitempty"`
	Ipv4Addresses  int32                  `protobuf:"varint,11,opt,name=ipv4_addresses,json=ipv4Addresses,proto3" json:"ipv4_addresses,omitempty"`
	Ipv4PriceHr    *decimal.Decimal       `protobuf:"bytes,12,opt,name=ipv4_price_hr,json=ipv4PriceHr,proto3" json:"ipv4_price_hr,omitempty"`
	TotalPriceHr   *decimal.Decimal       `protobuf:"bytes,13,opt,name=total_price_hr,json=totalPriceHr,proto3" json:"total_price_hr,omitempty"`
	Os             string                 `protobuf:"bytes,14,opt,name=os,proto3" json:"os,omitempty"`
	UserData       string                 `protobuf:"bytes,15,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MachineInstance) Reset() {
	*x = MachineInstance{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineInstance) ProtoMessage() {}

func (x *MachineInstance) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineInstance.ProtoReflect.Descriptor instead.
func (*MachineInstance) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{3}
}

func (x *MachineInstance) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *MachineInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineInstance) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *MachineInstance) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

func (x *MachineInstance) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *MachineInstance) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *MachineInstance) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MachineInstance) GetPowerState() MachinePowerState {
	if x != nil {
		return x.PowerState
	}
	return MachinePowerState_MACHINE_POWER_STATE_UNSPECIFIED
}

func (x *MachineInstance) GetCommitmentTerm() compute.CommitmentTerm {
	if x != nil {
		return x.CommitmentTerm
	}
	return compute.CommitmentTerm(0)
}

func (x *MachineInstance) GetPriceHr() *decimal.Decimal {
	if x != nil {
		return x.PriceHr
	}
	return nil
}

func (x *MachineInstance) GetIpv4Addresses() int32 {
	if x != nil {
		return x.Ipv4Addresses
	}
	return 0
}

func (x *MachineInstance) GetIpv4PriceHr() *decimal.Decimal {
	if x != nil {
		return x.Ipv4PriceHr
	}
	return nil
}

func (x *MachineInstance) GetTotalPriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalPriceHr
	}
	return nil
}

func (x *MachineInstance) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *MachineInstance) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

type ListClusterMachineTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterMachineTypesRequest) Reset() {
	*x = ListClusterMachineTypesRequest{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterMachineTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMachineTypesRequest) ProtoMessage() {}

func (x *ListClusterMachineTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMachineTypesRequest.ProtoReflect.Descriptor instead.
func (*ListClusterMachineTypesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{4}
}

func (x *ListClusterMachineTypesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClusterMachineTypesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListClusterMachineTypesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineTypes  []*MachineType         `protobuf:"bytes,1,rep,name=machine_types,json=machineTypes,proto3" json:"machine_types,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterMachineTypesResponse) Reset() {
	*x = ListClusterMachineTypesResponse{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterMachineTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMachineTypesResponse) ProtoMessage() {}

func (x *ListClusterMachineTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMachineTypesResponse.ProtoReflect.Descriptor instead.
func (*ListClusterMachineTypesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{5}
}

func (x *ListClusterMachineTypesResponse) GetMachineTypes() []*MachineType {
	if x != nil {
		return x.MachineTypes
	}
	return nil
}

func (x *ListClusterMachineTypesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListClusterMachineTypesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClusterMachineTypesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetClusterMachineTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataCenterId  string                 `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineTypeId string                 `protobuf:"bytes,2,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterMachineTypeRequest) Reset() {
	*x = GetClusterMachineTypeRequest{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMachineTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMachineTypeRequest) ProtoMessage() {}

func (x *GetClusterMachineTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMachineTypeRequest.ProtoReflect.Descriptor instead.
func (*GetClusterMachineTypeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{6}
}

func (x *GetClusterMachineTypeRequest) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *GetClusterMachineTypeRequest) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

type GetClusterMachineTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineType   *MachineType           `protobuf:"bytes,1,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterMachineTypeResponse) Reset() {
	*x = GetClusterMachineTypeResponse{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMachineTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMachineTypeResponse) ProtoMessage() {}

func (x *GetClusterMachineTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMachineTypeResponse.ProtoReflect.Descriptor instead.
func (*GetClusterMachineTypeResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{7}
}

func (x *GetClusterMachineTypeResponse) GetMachineType() *MachineType {
	if x != nil {
		return x.MachineType
	}
	return nil
}

type Cluster struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ProjectId           string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id                  string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataCenterId        string                 `protobuf:"bytes,3,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineTypeId       string                 `protobuf:"bytes,4,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	MachineCount        int32                  `protobuf:"varint,5,opt,name=machine_count,json=machineCount,proto3" json:"machine_count,omitempty"`
	CommitmentTerm      compute.CommitmentTerm `protobuf:"varint,6,opt,name=commitment_term,json=commitmentTerm,proto3,enum=org.cudo.compute.v1.CommitmentTerm" json:"commitment_term,omitempty"`
	CommitmentEndTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=commitment_end_time,json=commitmentEndTime,proto3" json:"commitment_end_time,omitempty"`
	SshKeySource        vm.SshKeySource        `protobuf:"varint,8,opt,name=ssh_key_source,json=sshKeySource,proto3,enum=org.cudo.compute.v1.SshKeySource" json:"ssh_key_source,omitempty"`
	CustomSshKeys       []string               `protobuf:"bytes,9,rep,name=custom_ssh_keys,json=customSshKeys,proto3" json:"custom_ssh_keys,omitempty"`
	StartScript         string                 `protobuf:"bytes,10,opt,name=start_script,json=startScript,proto3" json:"start_script,omitempty"`
	State               Cluster_State          `protobuf:"varint,11,opt,name=state,proto3,enum=org.cudo.compute.v1.Cluster_State" json:"state,omitempty"`
	Architecture        string                 `protobuf:"bytes,12,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CpuModel            string                 `protobuf:"bytes,13,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model,omitempty"`
	CpuSpeedMhz         int32                  `protobuf:"varint,14,opt,name=cpu_speed_mhz,json=cpuSpeedMhz,proto3" json:"cpu_speed_mhz,omitempty"`
	GpuModelId          string                 `protobuf:"bytes,15,opt,name=gpu_model_id,json=gpuModelId,proto3" json:"gpu_model_id,omitempty"`
	NetworkType         NetworkType            `protobuf:"varint,16,opt,name=network_type,json=networkType,proto3,enum=org.cudo.compute.v1.NetworkType" json:"network_type,omitempty"`
	TotalCpuCores       int32                  `protobuf:"varint,17,opt,name=total_cpu_cores,json=totalCpuCores,proto3" json:"total_cpu_cores,omitempty"`
	TotalDiskSizeGib    int32                  `protobuf:"varint,18,opt,name=total_disk_size_gib,json=totalDiskSizeGib,proto3" json:"total_disk_size_gib,omitempty"`
	TotalGpus           int32                  `protobuf:"varint,19,opt,name=total_gpus,json=totalGpus,proto3" json:"total_gpus,omitempty"`
	TotalMemoryGib      int32                  `protobuf:"varint,20,opt,name=total_memory_gib,json=totalMemoryGib,proto3" json:"total_memory_gib,omitempty"`
	MachinePriceHr      *decimal.Decimal       `protobuf:"bytes,21,opt,name=machine_price_hr,json=machinePriceHr,proto3" json:"machine_price_hr,omitempty"`
	TotalMachinePriceHr *decimal.Decimal       `protobuf:"bytes,22,opt,name=total_machine_price_hr,json=totalMachinePriceHr,proto3" json:"total_machine_price_hr,omitempty"`
	TotalPriceHr        *decimal.Decimal       `protobuf:"bytes,23,opt,name=total_price_hr,json=totalPriceHr,proto3" json:"total_price_hr,omitempty"`
	Machines            []*ClusterMachine      `protobuf:"bytes,24,rep,name=machines,proto3" json:"machines,omitempty"`
	CreateTime          *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	CreateBy            string                 `protobuf:"bytes,26,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{8}
}

func (x *Cluster) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Cluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cluster) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *Cluster) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

func (x *Cluster) GetMachineCount() int32 {
	if x != nil {
		return x.MachineCount
	}
	return 0
}

func (x *Cluster) GetCommitmentTerm() compute.CommitmentTerm {
	if x != nil {
		return x.CommitmentTerm
	}
	return compute.CommitmentTerm(0)
}

func (x *Cluster) GetCommitmentEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CommitmentEndTime
	}
	return nil
}

func (x *Cluster) GetSshKeySource() vm.SshKeySource {
	if x != nil {
		return x.SshKeySource
	}
	return vm.SshKeySource(0)
}

func (x *Cluster) GetCustomSshKeys() []string {
	if x != nil {
		return x.CustomSshKeys
	}
	return nil
}

func (x *Cluster) GetStartScript() string {
	if x != nil {
		return x.StartScript
	}
	return ""
}

func (x *Cluster) GetState() Cluster_State {
	if x != nil {
		return x.State
	}
	return Cluster_STATE_UNSPECIFIED
}

func (x *Cluster) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Cluster) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *Cluster) GetCpuSpeedMhz() int32 {
	if x != nil {
		return x.CpuSpeedMhz
	}
	return 0
}

func (x *Cluster) GetGpuModelId() string {
	if x != nil {
		return x.GpuModelId
	}
	return ""
}

func (x *Cluster) GetNetworkType() NetworkType {
	if x != nil {
		return x.NetworkType
	}
	return NetworkType_NETWORK_TYPE_UNSPECIFIED
}

func (x *Cluster) GetTotalCpuCores() int32 {
	if x != nil {
		return x.TotalCpuCores
	}
	return 0
}

func (x *Cluster) GetTotalDiskSizeGib() int32 {
	if x != nil {
		return x.TotalDiskSizeGib
	}
	return 0
}

func (x *Cluster) GetTotalGpus() int32 {
	if x != nil {
		return x.TotalGpus
	}
	return 0
}

func (x *Cluster) GetTotalMemoryGib() int32 {
	if x != nil {
		return x.TotalMemoryGib
	}
	return 0
}

func (x *Cluster) GetMachinePriceHr() *decimal.Decimal {
	if x != nil {
		return x.MachinePriceHr
	}
	return nil
}

func (x *Cluster) GetTotalMachinePriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalMachinePriceHr
	}
	return nil
}

func (x *Cluster) GetTotalPriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalPriceHr
	}
	return nil
}

func (x *Cluster) GetMachines() []*ClusterMachine {
	if x != nil {
		return x.Machines
	}
	return nil
}

func (x *Cluster) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Cluster) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type ClusterMachine struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ProjectId         string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id                string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataCenterId      string                 `protobuf:"bytes,3,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineTypeId     string                 `protobuf:"bytes,4,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	Architecture      string                 `protobuf:"bytes,5,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CpuCores          int32                  `protobuf:"varint,6,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	CpuSpeedMhz       int32                  `protobuf:"varint,7,opt,name=cpu_speed_mhz,json=cpuSpeedMhz,proto3" json:"cpu_speed_mhz,omitempty"`
	CpuModel          string                 `protobuf:"bytes,8,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model,omitempty"`
	MemoryGib         int32                  `protobuf:"varint,9,opt,name=memory_gib,json=memoryGib,proto3" json:"memory_gib,omitempty"`
	Disks             int32                  `protobuf:"varint,10,opt,name=disks,proto3" json:"disks,omitempty"`
	DiskSizeGib       int32                  `protobuf:"varint,11,opt,name=disk_size_gib,json=diskSizeGib,proto3" json:"disk_size_gib,omitempty"`
	Gpus              int32                  `protobuf:"varint,12,opt,name=gpus,proto3" json:"gpus,omitempty"`
	GpuModelId        string                 `protobuf:"bytes,13,opt,name=gpu_model_id,json=gpuModelId,proto3" json:"gpu_model_id,omitempty"`
	ExternalIpAddress string                 `protobuf:"bytes,17,opt,name=external_ip_address,json=externalIpAddress,proto3" json:"external_ip_address,omitempty"`
	InternalIpAddress string                 `protobuf:"bytes,18,opt,name=internal_ip_address,json=internalIpAddress,proto3" json:"internal_ip_address,omitempty"`
	PowerState        MachinePowerState      `protobuf:"varint,19,opt,name=power_state,json=powerState,proto3,enum=org.cudo.compute.v1.MachinePowerState" json:"power_state,omitempty"`
	State             ClusterMachine_State   `protobuf:"varint,20,opt,name=state,proto3,enum=org.cudo.compute.v1.ClusterMachine_State" json:"state,omitempty"`
	PriceHr           *decimal.Decimal       `protobuf:"bytes,21,opt,name=price_hr,json=priceHr,proto3" json:"price_hr,omitempty"`
	CreateTime        *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	CreateBy          string                 `protobuf:"bytes,23,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	VolumeIds         []string               `protobuf:"bytes,24,rep,name=volume_ids,json=volumeIds,proto3" json:"volume_ids,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterMachine) Reset() {
	*x = ClusterMachine{}
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMachine) ProtoMessage() {}

func (x *ClusterMachine) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMachine.ProtoReflect.Descriptor instead.
func (*ClusterMachine) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_proto_rawDescGZIP(), []int{9}
}

func (x *ClusterMachine) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ClusterMachine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClusterMachine) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *ClusterMachine) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

func (x *ClusterMachine) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ClusterMachine) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *ClusterMachine) GetCpuSpeedMhz() int32 {
	if x != nil {
		return x.CpuSpeedMhz
	}
	return 0
}

func (x *ClusterMachine) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *ClusterMachine) GetMemoryGib() int32 {
	if x != nil {
		return x.MemoryGib
	}
	return 0
}

func (x *ClusterMachine) GetDisks() int32 {
	if x != nil {
		return x.Disks
	}
	return 0
}

func (x *ClusterMachine) GetDiskSizeGib() int32 {
	if x != nil {
		return x.DiskSizeGib
	}
	return 0
}

func (x *ClusterMachine) GetGpus() int32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *ClusterMachine) GetGpuModelId() string {
	if x != nil {
		return x.GpuModelId
	}
	return ""
}

func (x *ClusterMachine) GetExternalIpAddress() string {
	if x != nil {
		return x.ExternalIpAddress
	}
	return ""
}

func (x *ClusterMachine) GetInternalIpAddress() string {
	if x != nil {
		return x.InternalIpAddress
	}
	return ""
}

func (x *ClusterMachine) GetPowerState() MachinePowerState {
	if x != nil {
		return x.PowerState
	}
	return MachinePowerState_MACHINE_POWER_STATE_UNSPECIFIED
}

func (x *ClusterMachine) GetState() ClusterMachine_State {
	if x != nil {
		return x.State
	}
	return ClusterMachine_STATE_UNSPECIFIED
}

func (x *ClusterMachine) GetPriceHr() *decimal.Decimal {
	if x != nil {
		return x.PriceHr
	}
	return nil
}

func (x *ClusterMachine) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ClusterMachine) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ClusterMachine) GetVolumeIds() []string {
	if x != nil {
		return x.VolumeIds
	}
	return nil
}

var File_svc_compute_baremetal_baremetal_proto protoreflect.FileDescriptor

const file_svc_compute_baremetal_baremetal_proto_rawDesc = "" +
	"\n" +
	"%svc/compute/baremetal/baremetal.proto\x12\x13org.cudo.compute.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/type/decimal.proto\x1a\x17svc/compute/types.proto\x1a\x17svc/compute/vm/vm.proto\"\xbe\x04\n" +
	"\vMachineType\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12'\n" +
	"\farchitecture\x18\x03 \x01(\tB\x03\xe0A\x02R\farchitecture\x12 \n" +
	"\tcpu_cores\x18\x04 \x01(\x05B\x03\xe0A\x02R\bcpuCores\x12'\n" +
	"\rcpu_speed_mhz\x18\x05 \x01(\x05B\x03\xe0A\x02R\vcpuSpeedMhz\x12 \n" +
	"\tcpu_model\x18\x06 \x01(\tB\x03\xe0A\x02R\bcpuModel\x12\"\n" +
	"\n" +
	"memory_gib\x18\a \x01(\x05B\x03\xe0A\x02R\tmemoryGib\x12\x19\n" +
	"\x05disks\x18\b \x01(\x05B\x03\xe0A\x02R\x05disks\x12'\n" +
	"\rdisk_size_gib\x18\t \x01(\x05B\x03\xe0A\x02R\vdiskSizeGib\x12\x17\n" +
	"\x04gpus\x18\n" +
	" \x01(\x05B\x03\xe0A\x02R\x04gpus\x12 \n" +
	"\fgpu_model_id\x18\v \x01(\tR\n" +
	"gpuModelId\x12B\n" +
	"\x06prices\x18\f \x03(\v2%.org.cudo.compute.v1.MachineTypePriceB\x03\xe0A\x03R\x06prices\x12(\n" +
	"\rmachines_free\x18\r \x01(\x05B\x03\xe0A\x03R\fmachinesFree\x12H\n" +
	"\fnetwork_type\x18\x0e \x01(\x0e2 .org.cudo.compute.v1.NetworkTypeB\x03\xe0A\x02R\vnetworkType\"\xb2\x02\n" +
	"\x10MachineTypePrice\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12+\n" +
	"\x0fmachine_type_id\x18\x02 \x01(\tB\x03\xe0A\x02R\rmachineTypeId\x12Q\n" +
	"\x0fcommitment_term\x18\x03 \x01(\x0e2#.org.cudo.compute.v1.CommitmentTermB\x03\xe0A\x02R\x0ecommitmentTerm\x124\n" +
	"\bprice_hr\x18\x04 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\apriceHr\x12=\n" +
	"\ripv4_price_hr\x18\x05 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vipv4PriceHr\"\xaf\x05\n" +
	"\aMachine\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12+\n" +
	"\x0fmachine_type_id\x18\x03 \x01(\tB\x03\xe0A\x02R\rmachineTypeId\x12'\n" +
	"\farchitecture\x18\x04 \x01(\tB\x03\xe0A\x03R\farchitecture\x12 \n" +
	"\tcpu_cores\x18\x05 \x01(\x05B\x03\xe0A\x03R\bcpuCores\x12'\n" +
	"\rcpu_speed_mhz\x18\x06 \x01(\x05B\x03\xe0A\x03R\vcpuSpeedMhz\x12 \n" +
	"\tcpu_model\x18\a \x01(\tB\x03\xe0A\x03R\bcpuModel\x12\"\n" +
	"\n" +
	"memory_gib\x18\b \x01(\x05B\x03\xe0A\x03R\tmemoryGib\x12\x19\n" +
	"\x05disks\x18\t \x01(\x05B\x03\xe0A\x03R\x05disks\x12'\n" +
	"\rdisk_size_gib\x18\n" +
	" \x01(\x05B\x03\xe0A\x03R\vdiskSizeGib\x12\x17\n" +
	"\x04gpus\x18\v \x01(\x05B\x03\xe0A\x03R\x04gpus\x12%\n" +
	"\fgpu_model_id\x18\f \x01(\tB\x03\xe0A\x03R\n" +
	"gpuModelId\x12<\n" +
	"\x05state\x18\r \x01(\x0e2!.org.cudo.compute.v1.MachineStateB\x03\xe0A\x03R\x05state\x12L\n" +
	"\vpower_state\x18\x0e \x01(\x0e2&.org.cudo.compute.v1.MachinePowerStateB\x03\xe0A\x03R\n" +
	"powerState\x12\x13\n" +
	"\x02os\x18\x0f \x01(\tB\x03\xe0A\x03R\x02os\x12\x1f\n" +
	"\bhostname\x18\x10 \x01(\tB\x03\xe0A\x03R\bhostname\x127\n" +
	"\x15external_ip_addresses\x18\x11 \x03(\tB\x03\xe0A\x03R\x13externalIpAddresses\"\xfd\x05\n" +
	"\x0fMachineInstance\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12)\n" +
	"\x0edata_center_id\x18\x03 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12+\n" +
	"\x0fmachine_type_id\x18\x04 \x01(\tB\x03\xe0A\x02R\rmachineTypeId\x12;\n" +
	"\amachine\x18\x05 \x01(\v2\x1c.org.cudo.compute.v1.MachineB\x03\xe0A\x03R\amachine\x12@\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12 \n" +
	"\tcreate_by\x18\a \x01(\tB\x03\xe0A\x03R\bcreateBy\x12L\n" +
	"\vpower_state\x18\b \x01(\x0e2&.org.cudo.compute.v1.MachinePowerStateB\x03\xe0A\x01R\n" +
	"powerState\x12Q\n" +
	"\x0fcommitment_term\x18\t \x01(\x0e2#.org.cudo.compute.v1.CommitmentTermB\x03\xe0A\x01R\x0ecommitmentTerm\x124\n" +
	"\bprice_hr\x18\n" +
	" \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\apriceHr\x12*\n" +
	"\x0eipv4_addresses\x18\v \x01(\x05B\x03\xe0A\x03R\ripv4Addresses\x12=\n" +
	"\ripv4_price_hr\x18\f \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\vipv4PriceHr\x12?\n" +
	"\x0etotal_price_hr\x18\r \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\ftotalPriceHr\x12\x13\n" +
	"\x02os\x18\x0e \x01(\tB\x03\xe0A\x02R\x02os\x12 \n" +
	"\tuser_data\x18\x0f \x01(\tB\x03\xe0A\x04R\buserData\"^\n" +
	"\x1eListClusterMachineTypesRequest\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\"\xd6\x01\n" +
	"\x1fListClusterMachineTypesResponse\x12E\n" +
	"\rmachine_types\x18\x01 \x03(\v2 .org.cudo.compute.v1.MachineTypeR\fmachineTypes\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"v\n" +
	"\x1cGetClusterMachineTypeRequest\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12+\n" +
	"\x0fmachine_type_id\x18\x02 \x01(\tB\x03\xe0A\x02R\rmachineTypeId\"i\n" +
	"\x1dGetClusterMachineTypeResponse\x12H\n" +
	"\fmachine_type\x18\x01 \x01(\v2 .org.cudo.compute.v1.MachineTypeB\x03\xe0A\x02R\vmachineType\"\xc5\v\n" +
	"\aCluster\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12)\n" +
	"\x0edata_center_id\x18\x03 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12+\n" +
	"\x0fmachine_type_id\x18\x04 \x01(\tB\x03\xe0A\x02R\rmachineTypeId\x12(\n" +
	"\rmachine_count\x18\x05 \x01(\x05B\x03\xe0A\x02R\fmachineCount\x12Q\n" +
	"\x0fcommitment_term\x18\x06 \x01(\x0e2#.org.cudo.compute.v1.CommitmentTermB\x03\xe0A\x01R\x0ecommitmentTerm\x12O\n" +
	"\x13commitment_end_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x01R\x11commitmentEndTime\x12L\n" +
	"\x0essh_key_source\x18\b \x01(\x0e2!.org.cudo.compute.v1.SshKeySourceB\x03\xe0A\x01R\fsshKeySource\x12+\n" +
	"\x0fcustom_ssh_keys\x18\t \x03(\tB\x03\xe0A\x01R\rcustomSshKeys\x12&\n" +
	"\fstart_script\x18\n" +
	" \x01(\tB\x03\xe0A\x01R\vstartScript\x12=\n" +
	"\x05state\x18\v \x01(\x0e2\".org.cudo.compute.v1.Cluster.StateB\x03\xe0A\x03R\x05state\x12'\n" +
	"\farchitecture\x18\f \x01(\tB\x03\xe0A\x03R\farchitecture\x12 \n" +
	"\tcpu_model\x18\r \x01(\tB\x03\xe0A\x03R\bcpuModel\x12'\n" +
	"\rcpu_speed_mhz\x18\x0e \x01(\x05B\x03\xe0A\x03R\vcpuSpeedMhz\x12%\n" +
	"\fgpu_model_id\x18\x0f \x01(\tB\x03\xe0A\x03R\n" +
	"gpuModelId\x12H\n" +
	"\fnetwork_type\x18\x10 \x01(\x0e2 .org.cudo.compute.v1.NetworkTypeB\x03\xe0A\x03R\vnetworkType\x12+\n" +
	"\x0ftotal_cpu_cores\x18\x11 \x01(\x05B\x03\xe0A\x03R\rtotalCpuCores\x122\n" +
	"\x13total_disk_size_gib\x18\x12 \x01(\x05B\x03\xe0A\x03R\x10totalDiskSizeGib\x12\"\n" +
	"\n" +
	"total_gpus\x18\x13 \x01(\x05B\x03\xe0A\x03R\ttotalGpus\x12-\n" +
	"\x10total_memory_gib\x18\x14 \x01(\x05B\x03\xe0A\x03R\x0etotalMemoryGib\x12C\n" +
	"\x10machine_price_hr\x18\x15 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\x0emachinePriceHr\x12N\n" +
	"\x16total_machine_price_hr\x18\x16 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\x13totalMachinePriceHr\x12?\n" +
	"\x0etotal_price_hr\x18\x17 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\ftotalPriceHr\x12D\n" +
	"\bmachines\x18\x18 \x03(\v2#.org.cudo.compute.v1.ClusterMachineB\x03\xe0A\x03R\bmachines\x12@\n" +
	"\vcreate_time\x18\x19 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12 \n" +
	"\tcreate_by\x18\x1a \x01(\tB\x03\xe0A\x03R\bcreateBy\"`\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x02\x12\f\n" +
	"\bUPDATING\x10\x03\x12\f\n" +
	"\bDELETING\x10\x04\x12\n" +
	"\n" +
	"\x06FAILED\x10\x05\"\xef\a\n" +
	"\x0eClusterMachine\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x03R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x03R\x02id\x12)\n" +
	"\x0edata_center_id\x18\x03 \x01(\tB\x03\xe0A\x03R\fdataCenterId\x12+\n" +
	"\x0fmachine_type_id\x18\x04 \x01(\tB\x03\xe0A\x03R\rmachineTypeId\x12'\n" +
	"\farchitecture\x18\x05 \x01(\tB\x03\xe0A\x03R\farchitecture\x12 \n" +
	"\tcpu_cores\x18\x06 \x01(\x05B\x03\xe0A\x03R\bcpuCores\x12'\n" +
	"\rcpu_speed_mhz\x18\a \x01(\x05B\x03\xe0A\x03R\vcpuSpeedMhz\x12 \n" +
	"\tcpu_model\x18\b \x01(\tB\x03\xe0A\x03R\bcpuModel\x12\"\n" +
	"\n" +
	"memory_gib\x18\t \x01(\x05B\x03\xe0A\x03R\tmemoryGib\x12\x19\n" +
	"\x05disks\x18\n" +
	" \x01(\x05B\x03\xe0A\x03R\x05disks\x12'\n" +
	"\rdisk_size_gib\x18\v \x01(\x05B\x03\xe0A\x03R\vdiskSizeGib\x12\x17\n" +
	"\x04gpus\x18\f \x01(\x05B\x03\xe0A\x03R\x04gpus\x12%\n" +
	"\fgpu_model_id\x18\r \x01(\tB\x03\xe0A\x03R\n" +
	"gpuModelId\x123\n" +
	"\x13external_ip_address\x18\x11 \x01(\tB\x03\xe0A\x03R\x11externalIpAddress\x123\n" +
	"\x13internal_ip_address\x18\x12 \x01(\tB\x03\xe0A\x03R\x11internalIpAddress\x12L\n" +
	"\vpower_state\x18\x13 \x01(\x0e2&.org.cudo.compute.v1.MachinePowerStateB\x03\xe0A\x01R\n" +
	"powerState\x12D\n" +
	"\x05state\x18\x14 \x01(\x0e2).org.cudo.compute.v1.ClusterMachine.StateB\x03\xe0A\x03R\x05state\x124\n" +
	"\bprice_hr\x18\x15 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\apriceHr\x12@\n" +
	"\vcreate_time\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12 \n" +
	"\tcreate_by\x18\x17 \x01(\tB\x03\xe0A\x03R\bcreateBy\x12\"\n" +
	"\n" +
	"volume_ids\x18\x18 \x03(\tB\x03\xe0A\x01R\tvolumeIds\"R\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x02\x12\f\n" +
	"\bDELETING\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04*I\n" +
	"\vNetworkType\x12\x1c\n" +
	"\x18NETWORK_TYPE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bETHERNET\x10\x01\x12\x0e\n" +
	"\n" +
	"INFINIBAND\x10\x02*\xee\x01\n" +
	"\fMachineState\x12\x1d\n" +
	"\x19MACHINE_STATE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03NEW\x10\x01\x12\x11\n" +
	"\rCOMMISSIONING\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03\x12\v\n" +
	"\aMISSING\x10\x04\x12\t\n" +
	"\x05READY\x10\x05\x12\f\n" +
	"\bRESERVED\x10\x06\x12\f\n" +
	"\bDEPLOYED\x10\a\x12\v\n" +
	"\aRETIRED\x10\b\x12\r\n" +
	"\tDEPLOYING\x10\t\x12\r\n" +
	"\tALLOCATED\x10\n" +
	"\x12\r\n" +
	"\tRELEASING\x10\v\x12\v\n" +
	"\aERASING\x10\f\x12\x0f\n" +
	"\vRESCUE_MODE\x10\r\x12\v\n" +
	"\aTESTING\x10\x0e*{\n" +
	"\x11MachinePowerState\x12#\n" +
	"\x1fMACHINE_POWER_STATE_UNSPECIFIED\x10\x00\x12\x06\n" +
	"\x02ON\x10\x01\x12\a\n" +
	"\x03OFF\x10\x02\x12\x0f\n" +
	"\vPOWERING_ON\x10\x03\x12\x10\n" +
	"\fPOWERING_OFF\x10\x04\x12\r\n" +
	"\tREBOOTING\x10\x05BLZJgithub.com/CudoVentures/terraform-provider-cudo/internal/compute/baremetalb\x06proto3"

var (
	file_svc_compute_baremetal_baremetal_proto_rawDescOnce sync.Once
	file_svc_compute_baremetal_baremetal_proto_rawDescData []byte
)

func file_svc_compute_baremetal_baremetal_proto_rawDescGZIP() []byte {
	file_svc_compute_baremetal_baremetal_proto_rawDescOnce.Do(func() {
		file_svc_compute_baremetal_baremetal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_compute_baremetal_baremetal_proto_rawDesc), len(file_svc_compute_baremetal_baremetal_proto_rawDesc)))
	})
	return file_svc_compute_baremetal_baremetal_proto_rawDescData
}

var file_svc_compute_baremetal_baremetal_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_svc_compute_baremetal_baremetal_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_svc_compute_baremetal_baremetal_proto_goTypes = []any{
	(NetworkType)(0),                        // 0: org.cudo.compute.v1.NetworkType
	(MachineState)(0),                       // 1: org.cudo.compute.v1.MachineState
	(MachinePowerState)(0),                  // 2: org.cudo.compute.v1.MachinePowerState
	(Cluster_State)(0),                      // 3: org.cudo.compute.v1.Cluster.State
	(ClusterMachine_State)(0),               // 4: org.cudo.compute.v1.ClusterMachine.State
	(*MachineType)(nil),                     // 5: org.cudo.compute.v1.MachineType
	(*MachineTypePrice)(nil),                // 6: org.cudo.compute.v1.MachineTypePrice
	(*Machine)(nil),                         // 7: org.cudo.compute.v1.Machine
	(*MachineInstance)(nil),                 // 8: org.cudo.compute.v1.MachineInstance
	(*ListClusterMachineTypesRequest)(nil),  // 9: org.cudo.compute.v1.ListClusterMachineTypesRequest
	(*ListClusterMachineTypesResponse)(nil), // 10: org.cudo.compute.v1.ListClusterMachineTypesResponse
	(*GetClusterMachineTypeRequest)(nil),    // 11: org.cudo.compute.v1.GetClusterMachineTypeRequest
	(*GetClusterMachineTypeResponse)(nil),   // 12: org.cudo.compute.v1.GetClusterMachineTypeResponse
	(*Cluster)(nil),                         // 13: org.cudo.compute.v1.Cluster
	(*ClusterMachine)(nil),                  // 14: org.cudo.compute.v1.ClusterMachine
	(compute.CommitmentTerm)(0),             // 15: org.cudo.compute.v1.CommitmentTerm
	(*decimal.Decimal)(nil),                 // 16: google.type.Decimal
	(*timestamppb.Timestamp)(nil),           // 17: google.protobuf.Timestamp
	(vm.SshKeySource)(0),                    // 18: org.cudo.compute.v1.SshKeySource
}
var file_svc_compute_baremetal_baremetal_proto_depIdxs = []int32{
	6,  // 0: org.cudo.compute.v1.MachineType.prices:type_name -> org.cudo.compute.v1.MachineTypePrice
	0,  // 1: org.cudo.compute.v1.MachineType.network_type:type_name -> org.cudo.compute.v1.NetworkType
	15, // 2: org.cudo.compute.v1.MachineTypePrice.commitment_term:type_name -> org.cudo.compute.v1.CommitmentTerm
	16, // 3: org.cudo.compute.v1.MachineTypePrice.price_hr:type_name -> google.type.Decimal
	16, // 4: org.cudo.compute.v1.MachineTypePrice.ipv4_price_hr:type_name -> google.type.Decimal
	1,  // 5: org.cudo.compute.v1.Machine.state:type_name -> org.cudo.compute.v1.MachineState
	2,  // 6: org.cudo.compute.v1.Machine.power_state:type_name -> org.cudo.compute.v1.MachinePowerState
	7,  // 7: org.cudo.compute.v1.MachineInstance.machine:type_name -> org.cudo.compute.v1.Machine
	17, // 8: org.cudo.compute.v1.MachineInstance.create_time:type_name -> google.protobuf.Timestamp
	2,  // 9: org.cudo.compute.v1.MachineInstance.power_state:type_name -> org.cudo.compute.v1.MachinePowerState
	15, // 10: org.cudo.compute.v1.MachineInstance.commitment_term:type_name -> org.cudo.compute.v1.CommitmentTerm
	16, // 11: org.cudo.compute.v1.MachineInstance.price_hr:type_name -> google.type.Decimal
	16, // 12: org.cudo.compute.v1.MachineInstance.ipv4_price_hr:type_name -> google.type.Decimal
	16, // 13: org.cudo.compute.v1.MachineInstance.total_price_hr:type_name -> google.type.Decimal
	5,  // 14: org.cudo.compute.v1.ListClusterMachineTypesResponse.machine_types:type_name -> org.cudo.compute.v1.MachineType
	5,  // 15: org.cudo.compute.v1.GetClusterMachineTypeResponse.machine_type:type_name -> org.cudo.compute.v1.MachineType
	15, // 16: org.cudo.compute.v1.Cluster.commitment_term:type_name -> org.cudo.compute.v1.CommitmentTerm
	17, // 17: org.cudo.compute.v1.Cluster.commitment_end_time:type_name -> google.protobuf.Timestamp
	18, // 18: org.cudo.compute.v1.Cluster.ssh_key_source:type_name -> org.cudo.compute.v1.SshKeySource
	3,  // 19: org.cudo.compute.v1.Cluster.state:type_name -> org.cudo.compute.v1.Cluster.State
	0,  // 20: org.cudo.compute.v1.Cluster.network_type:type_name -> org.cudo.compute.v1.NetworkType
	16, // 21: org.cudo.compute.v1.Cluster.machine_price_hr:type_name -> google.type.Decimal
	16, // 22: org.cudo.compute.v1.Cluster.total_machine_price_hr:type_name -> google.type.Decimal
	16, // 23: org.cudo.compute.v1.Cluster.total_price_hr:type_name -> google.type.Decimal
	14, // 24: org.cudo.compute.v1.Cluster.machines:type_name -> org.cudo.compute.v1.ClusterMachine
	17, // 25: org.cudo.compute.v1.Cluster.create_time:type_name -> google.protobuf.Timestamp
	2,  // 26: org.cudo.compute.v1.ClusterMachine.power_state:type_name -> org.cudo.compute.v1.MachinePowerState
	4,  // 27: org.cudo.compute.v1.ClusterMachine.state:type_name -> org.cudo.compute.v1.ClusterMachine.State
	16, // 28: org.cudo.compute.v1.ClusterMachine.price_hr:type_name -> google.type.Decimal
	17, // 29: org.cudo.compute.v1.ClusterMachine.create_time:type_name -> google.protobuf.Timestamp
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_svc_compute_baremetal_baremetal_proto_init() }
func file_svc_compute_baremetal_baremetal_proto_init() {
	if File_svc_compute_baremetal_baremetal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_compute_baremetal_baremetal_proto_rawDesc), len(file_svc_compute_baremetal_baremetal_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svc_compute_baremetal_baremetal_proto_goTypes,
		DependencyIndexes: file_svc_compute_baremetal_baremetal_proto_depIdxs,
		EnumInfos:         file_svc_compute_baremetal_baremetal_proto_enumTypes,
		MessageInfos:      file_svc_compute_baremetal_baremetal_proto_msgTypes,
	}.Build()
	File_svc_compute_baremetal_baremetal_proto = out.File
	file_svc_compute_baremetal_baremetal_proto_goTypes = nil
	file_svc_compute_baremetal_baremetal_proto_depIdxs = nil
}
