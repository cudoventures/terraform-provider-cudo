// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: svc/compute/baremetal/baremetal_svc.proto

package baremetal

import (
	compute "github.com/CudoVentures/terraform-provider-cudo/internal/compute"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/type/decimal"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Machine       *Machine               `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMachineRequest) Reset() {
	*x = CreateMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMachineRequest) ProtoMessage() {}

func (x *CreateMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMachineRequest.ProtoReflect.Descriptor instead.
func (*CreateMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMachineRequest) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type DeleteMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMachineRequest) Reset() {
	*x = DeleteMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMachineRequest) ProtoMessage() {}

func (x *DeleteMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMachineRequest.ProtoReflect.Descriptor instead.
func (*DeleteMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteMachineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMachineRequest) Reset() {
	*x = GetMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineRequest) ProtoMessage() {}

func (x *GetMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineRequest.ProtoReflect.Descriptor instead.
func (*GetMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{2}
}

func (x *GetMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetMachineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListMachinesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PageNumber    int32                  `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesRequest.ProtoReflect.Descriptor instead.
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{3}
}

func (x *ListMachinesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListMachinesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMachinesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListMachinesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Machines      []*Machine             `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachinesResponse) Reset() {
	*x = ListMachinesResponse{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesResponse) ProtoMessage() {}

func (x *ListMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesResponse.ProtoReflect.Descriptor instead.
func (*ListMachinesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{4}
}

func (x *ListMachinesResponse) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

func (x *ListMachinesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListMachinesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMachinesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdateMachineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The machine instance to update.
	//
	// The machine instance's `project_id` and `id` fields are used to identify the machine instance to update.
	Machine *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMachineRequest) Reset() {
	*x = UpdateMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineRequest) ProtoMessage() {}

func (x *UpdateMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineRequest.ProtoReflect.Descriptor instead.
func (*UpdateMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMachineRequest) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *UpdateMachineRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeployMachineOSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Os            string                 `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	UserData      string                 `protobuf:"bytes,4,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployMachineOSRequest) Reset() {
	*x = DeployMachineOSRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployMachineOSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployMachineOSRequest) ProtoMessage() {}

func (x *DeployMachineOSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployMachineOSRequest.ProtoReflect.Descriptor instead.
func (*DeployMachineOSRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{6}
}

func (x *DeployMachineOSRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeployMachineOSRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeployMachineOSRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DeployMachineOSRequest) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

type UndeployMachineOSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UndeployMachineOSRequest) Reset() {
	*x = UndeployMachineOSRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndeployMachineOSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployMachineOSRequest) ProtoMessage() {}

func (x *UndeployMachineOSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployMachineOSRequest.ProtoReflect.Descriptor instead.
func (*UndeployMachineOSRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{7}
}

func (x *UndeployMachineOSRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UndeployMachineOSRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PowerOnMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UserData      string                 `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PowerOnMachineRequest) Reset() {
	*x = PowerOnMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOnMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOnMachineRequest) ProtoMessage() {}

func (x *PowerOnMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerOnMachineRequest.ProtoReflect.Descriptor instead.
func (*PowerOnMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{8}
}

func (x *PowerOnMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PowerOnMachineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PowerOnMachineRequest) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

type PowerOffMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PowerOffMachineRequest) Reset() {
	*x = PowerOffMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOffMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOffMachineRequest) ProtoMessage() {}

func (x *PowerOffMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerOffMachineRequest.ProtoReflect.Descriptor instead.
func (*PowerOffMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{9}
}

func (x *PowerOffMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PowerOffMachineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PowerOffMachineRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type ListMachineTypesRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	PageNumber int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Return custom prices for a specific project.
	ProjectId     string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachineTypesRequest) Reset() {
	*x = ListMachineTypesRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachineTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineTypesRequest) ProtoMessage() {}

func (x *ListMachineTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineTypesRequest.ProtoReflect.Descriptor instead.
func (*ListMachineTypesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{10}
}

func (x *ListMachineTypesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMachineTypesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMachineTypesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListMachineTypesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineTypes  []*MachineType         `protobuf:"bytes,1,rep,name=machine_types,json=machineTypes,proto3" json:"machine_types,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachineTypesResponse) Reset() {
	*x = ListMachineTypesResponse{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachineTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineTypesResponse) ProtoMessage() {}

func (x *ListMachineTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineTypesResponse.ProtoReflect.Descriptor instead.
func (*ListMachineTypesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{11}
}

func (x *ListMachineTypesResponse) GetMachineTypes() []*MachineType {
	if x != nil {
		return x.MachineTypes
	}
	return nil
}

func (x *ListMachineTypesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListMachineTypesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMachineTypesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListMachineOperatingSystemsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachineOperatingSystemsRequest) Reset() {
	*x = ListMachineOperatingSystemsRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachineOperatingSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineOperatingSystemsRequest) ProtoMessage() {}

func (x *ListMachineOperatingSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineOperatingSystemsRequest.ProtoReflect.Descriptor instead.
func (*ListMachineOperatingSystemsRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{12}
}

type ListMachineOperatingSystemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*compute.Image       `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachineOperatingSystemsResponse) Reset() {
	*x = ListMachineOperatingSystemsResponse{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachineOperatingSystemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineOperatingSystemsResponse) ProtoMessage() {}

func (x *ListMachineOperatingSystemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineOperatingSystemsResponse.ProtoReflect.Descriptor instead.
func (*ListMachineOperatingSystemsResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{13}
}

func (x *ListMachineOperatingSystemsResponse) GetImages() []*compute.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       *Cluster               `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{14}
}

func (x *CreateClusterRequest) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type DeleteClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterRequest) Reset() {
	*x = DeleteClusterRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRequest) ProtoMessage() {}

func (x *DeleteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteClusterRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteClusterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetClusterMachineTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataCenterId  string                 `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineTypeId string                 `protobuf:"bytes,2,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	// Return custom prices for a specific project.
	ProjectId     string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterMachineTypeRequest) Reset() {
	*x = GetClusterMachineTypeRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMachineTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMachineTypeRequest) ProtoMessage() {}

func (x *GetClusterMachineTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMachineTypeRequest.ProtoReflect.Descriptor instead.
func (*GetClusterMachineTypeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{16}
}

func (x *GetClusterMachineTypeRequest) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *GetClusterMachineTypeRequest) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

func (x *GetClusterMachineTypeRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetClusterMachineTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineType   *MachineType           `protobuf:"bytes,1,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterMachineTypeResponse) Reset() {
	*x = GetClusterMachineTypeResponse{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMachineTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMachineTypeResponse) ProtoMessage() {}

func (x *GetClusterMachineTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMachineTypeResponse.ProtoReflect.Descriptor instead.
func (*GetClusterMachineTypeResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{17}
}

func (x *GetClusterMachineTypeResponse) GetMachineType() *MachineType {
	if x != nil {
		return x.MachineType
	}
	return nil
}

type GetClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{18}
}

func (x *GetClusterRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetClusterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListClusterMachineTypesRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	PageNumber int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Return custom prices for a specific project.
	ProjectId     string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterMachineTypesRequest) Reset() {
	*x = ListClusterMachineTypesRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterMachineTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMachineTypesRequest) ProtoMessage() {}

func (x *ListClusterMachineTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMachineTypesRequest.ProtoReflect.Descriptor instead.
func (*ListClusterMachineTypesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{19}
}

func (x *ListClusterMachineTypesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClusterMachineTypesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterMachineTypesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListClusterMachineTypesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineTypes  []*MachineType         `protobuf:"bytes,1,rep,name=machine_types,json=machineTypes,proto3" json:"machine_types,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterMachineTypesResponse) Reset() {
	*x = ListClusterMachineTypesResponse{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterMachineTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMachineTypesResponse) ProtoMessage() {}

func (x *ListClusterMachineTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMachineTypesResponse.ProtoReflect.Descriptor instead.
func (*ListClusterMachineTypesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{20}
}

func (x *ListClusterMachineTypesResponse) GetMachineTypes() []*MachineType {
	if x != nil {
		return x.MachineTypes
	}
	return nil
}

func (x *ListClusterMachineTypesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListClusterMachineTypesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClusterMachineTypesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListClustersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PageNumber    int32                  `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{21}
}

func (x *ListClustersRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListClustersRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClustersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListClustersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clusters      []*Cluster             `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{22}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListClustersResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClustersResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The cluster to update.
	//
	// The cluster's `project_id` and `id` fields are used to identify the cluster to update.
	Cluster *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterRequest) Reset() {
	*x = UpdateClusterRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterRequest) ProtoMessage() {}

func (x *UpdateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateClusterRequest) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *UpdateClusterRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateClusterMachineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The cluster machine to update.
	//
	// The cluster machine's `project_id` and `id` fields are used to identify the cluster machine to update.
	ClusterMachine *ClusterMachine `protobuf:"bytes,1,opt,name=cluster_machine,json=clusterMachine,proto3" json:"cluster_machine,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterMachineRequest) Reset() {
	*x = UpdateClusterMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterMachineRequest) ProtoMessage() {}

func (x *UpdateClusterMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterMachineRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateClusterMachineRequest) GetClusterMachine() *ClusterMachine {
	if x != nil {
		return x.ClusterMachine
	}
	return nil
}

func (x *UpdateClusterMachineRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type RebootClusterMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootClusterMachineRequest) Reset() {
	*x = RebootClusterMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootClusterMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootClusterMachineRequest) ProtoMessage() {}

func (x *RebootClusterMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootClusterMachineRequest.ProtoReflect.Descriptor instead.
func (*RebootClusterMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{25}
}

func (x *RebootClusterMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RebootClusterMachineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RenameClusterMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	NewId         string                 `protobuf:"bytes,3,opt,name=new_id,json=newId,proto3" json:"new_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameClusterMachineRequest) Reset() {
	*x = RenameClusterMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameClusterMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameClusterMachineRequest) ProtoMessage() {}

func (x *RenameClusterMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameClusterMachineRequest.ProtoReflect.Descriptor instead.
func (*RenameClusterMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{26}
}

func (x *RenameClusterMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RenameClusterMachineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RenameClusterMachineRequest) GetNewId() string {
	if x != nil {
		return x.NewId
	}
	return ""
}

type DeleteClusterMachineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterMachineRequest) Reset() {
	*x = DeleteClusterMachineRequest{}
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterMachineRequest) ProtoMessage() {}

func (x *DeleteClusterMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_baremetal_baremetal_svc_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterMachineRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterMachineRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteClusterMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteClusterMachineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_svc_compute_baremetal_baremetal_svc_proto protoreflect.FileDescriptor

const file_svc_compute_baremetal_baremetal_svc_proto_rawDesc = "" +
	"\n" +
	")svc/compute/baremetal/baremetal_svc.proto\x12\x13org.cudo.compute.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x19google/type/decimal.proto\x1a$gnostic/openapi/v3/annotations.proto\x1a\x17svc/compute/types.proto\x1a%svc/compute/baremetal/baremetal.proto\"S\n" +
	"\x14CreateMachineRequest\x12;\n" +
	"\amachine\x18\x01 \x01(\v2\x1c.org.cudo.compute.v1.MachineB\x03\xe0A\x02R\amachine\"O\n" +
	"\x14DeleteMachineRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"L\n" +
	"\x11GetMachineRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"w\n" +
	"\x13ListMachinesRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x1f\n" +
	"\vpage_number\x18\x02 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"\xbe\x01\n" +
	"\x14ListMachinesResponse\x128\n" +
	"\bmachines\x18\x01 \x03(\v2\x1c.org.cudo.compute.v1.MachineR\bmachines\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"\x90\x01\n" +
	"\x14UpdateMachineRequest\x12;\n" +
	"\amachine\x18\x01 \x01(\v2\x1c.org.cudo.compute.v1.MachineB\x03\xe0A\x02R\amachine\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x83\x01\n" +
	"\x16DeployMachineOSRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12\x13\n" +
	"\x02os\x18\x03 \x01(\tB\x03\xe0A\x02R\x02os\x12\x1b\n" +
	"\tuser_data\x18\x04 \x01(\tR\buserData\"S\n" +
	"\x18UndeployMachineOSRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"m\n" +
	"\x15PowerOnMachineRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12\x1b\n" +
	"\tuser_data\x18\x03 \x01(\tR\buserData\"g\n" +
	"\x16PowerOffMachineRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"\x85\x01\n" +
	"\x17ListMachineTypesRequest\x12$\n" +
	"\vpage_number\x18\x01 \x01(\x05B\x03\xe0A\x01R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x02 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tB\x03\xe0A\x01R\tprojectId\"\xcf\x01\n" +
	"\x18ListMachineTypesResponse\x12E\n" +
	"\rmachine_types\x18\x01 \x03(\v2 .org.cudo.compute.v1.MachineTypeR\fmachineTypes\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"$\n" +
	"\"ListMachineOperatingSystemsRequest\"^\n" +
	"#ListMachineOperatingSystemsResponse\x127\n" +
	"\x06images\x18\x01 \x03(\v2\x1a.org.cudo.compute.v1.ImageB\x03\xe0A\x02R\x06images\"S\n" +
	"\x14CreateClusterRequest\x12;\n" +
	"\acluster\x18\x01 \x01(\v2\x1c.org.cudo.compute.v1.ClusterB\x03\xe0A\x02R\acluster\"O\n" +
	"\x14DeleteClusterRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"\x9a\x01\n" +
	"\x1cGetClusterMachineTypeRequest\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12+\n" +
	"\x0fmachine_type_id\x18\x02 \x01(\tB\x03\xe0A\x02R\rmachineTypeId\x12\"\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tB\x03\xe0A\x01R\tprojectId\"i\n" +
	"\x1dGetClusterMachineTypeResponse\x12H\n" +
	"\fmachine_type\x18\x01 \x01(\v2 .org.cudo.compute.v1.MachineTypeB\x03\xe0A\x02R\vmachineType\"L\n" +
	"\x11GetClusterRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"\x8c\x01\n" +
	"\x1eListClusterMachineTypesRequest\x12$\n" +
	"\vpage_number\x18\x01 \x01(\x05B\x03\xe0A\x01R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x02 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tB\x03\xe0A\x01R\tprojectId\"\xd6\x01\n" +
	"\x1fListClusterMachineTypesResponse\x12E\n" +
	"\rmachine_types\x18\x01 \x03(\v2 .org.cudo.compute.v1.MachineTypeR\fmachineTypes\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"w\n" +
	"\x13ListClustersRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x1f\n" +
	"\vpage_number\x18\x02 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"\xbe\x01\n" +
	"\x14ListClustersResponse\x128\n" +
	"\bclusters\x18\x01 \x03(\v2\x1c.org.cudo.compute.v1.ClusterR\bclusters\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"\x90\x01\n" +
	"\x14UpdateClusterRequest\x12;\n" +
	"\acluster\x18\x01 \x01(\v2\x1c.org.cudo.compute.v1.ClusterB\x03\xe0A\x02R\acluster\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\xad\x01\n" +
	"\x1bUpdateClusterMachineRequest\x12Q\n" +
	"\x0fcluster_machine\x18\x01 \x01(\v2#.org.cudo.compute.v1.ClusterMachineB\x03\xe0A\x02R\x0eclusterMachine\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"V\n" +
	"\x1bRebootClusterMachineRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"r\n" +
	"\x1bRenameClusterMachineRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12\x1a\n" +
	"\x06new_id\x18\x03 \x01(\tB\x03\xe0A\x02R\x05newId\"V\n" +
	"\x1bDeleteClusterMachineRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id2\xd3*\n" +
	"\x10BareMetalService\x12\xe5\x01\n" +
	"\rCreateMachine\x12).org.cudo.compute.v1.CreateMachineRequest\x1a\x1c.org.cudo.compute.v1.Machine\"\x8a\x01\xbaGL\n" +
	"\n" +
	"Bare metal\x12\x10Create a machine\x1a\x1dOrder a machine for a project*\rCreateMachine\x82\xd3\xe4\x93\x025:\amachine\"*/v1/projects/{machine.project_id}/machines\x12\x9b\x02\n" +
	"\rDeleteMachine\x12).org.cudo.compute.v1.DeleteMachineRequest\x1a\x16.google.protobuf.Empty\"\xc6\x01\xbaG\x93\x01\n" +
	"\n" +
	"Bare metal\x12\x10Delete a machine\x1adDelete a machine from a project. Machines that are still within a commitment term cannot be deleted.*\rDeleteMachine\x82\xd3\xe4\x93\x02)*'/v1/projects/{project_id}/machines/{id}\x12\xcb\x01\n" +
	"\n" +
	"GetMachine\x12&.org.cudo.compute.v1.GetMachineRequest\x1a\x1c.org.cudo.compute.v1.Machine\"w\xbaGE\n" +
	"\n" +
	"Bare metal\x12\rGet a machine\x1a\x1cGet the details of a machine*\n" +
	"GetMachine\x82\xd3\xe4\x93\x02)\x12'/v1/projects/{project_id}/machines/{id}\x12\xd7\x01\n" +
	"\fListMachines\x12(.org.cudo.compute.v1.ListMachinesRequest\x1a).org.cudo.compute.v1.ListMachinesResponse\"r\xbaGE\n" +
	"\n" +
	"Bare metal\x12\rList machines\x1a\x1aList machines in a project*\fListMachines\x82\xd3\xe4\x93\x02$\x12\"/v1/projects/{project_id}/machines\x12\xf2\x01\n" +
	"\rUpdateMachine\x12).org.cudo.compute.v1.UpdateMachineRequest\x1a\x1c.org.cudo.compute.v1.Machine\"\x97\x01\xbaGL\n" +
	"\n" +
	"Bare metal\x12\x10Update a machine\x1a\x1dUpdate a machine in a project*\rUpdateMachine\x82\xd3\xe4\x93\x02B:\amachine27/v1/projects/{machine.project_id}/machines/{machine.id}\x12\xea\x01\n" +
	"\x0fPowerOffMachine\x12+.org.cudo.compute.v1.PowerOffMachineRequest\x1a\x16.google.protobuf.Empty\"\x91\x01\xbaGU\n" +
	"\n" +
	"Bare metal\x12\x14Power off a machine \x1a Power off a machine in a project*\x0fPowerOffMachine\x82\xd3\xe4\x93\x023\"1/v1/projects/{project_id}/machines/{id}/power-off\x12\xe3\x01\n" +
	"\x0ePowerOnMachine\x12*.org.cudo.compute.v1.PowerOnMachineRequest\x1a\x16.google.protobuf.Empty\"\x8c\x01\xbaGQ\n" +
	"\n" +
	"Bare metal\x12\x12Power on a machine\x1a\x1fPower on a machine in a project*\x0ePowerOnMachine\x82\xd3\xe4\x93\x022\"0/v1/projects/{project_id}/machines/{id}/power-on\x12\xf3\x01\n" +
	"\x0fDeployMachineOS\x12+.org.cudo.compute.v1.DeployMachineOSRequest\x1a\x16.google.protobuf.Empty\"\x9a\x01\xbaGa\n" +
	"\n" +
	"Bare metal\x12\x17Deploy operating system\x1a)Deploy an operating system onto a machine*\x0fDeployMachineOS\x82\xd3\xe4\x93\x020\"./v1/projects/{project_id}/machines/{id}/deploy\x12\x87\x02\n" +
	"\x11UndeployMachineOS\x12-.org.cudo.compute.v1.UndeployMachineOSRequest\x1a\x16.google.protobuf.Empty\"\xaa\x01\xbaGo\n" +
	"\n" +
	"Bare metal\x12\x0fRelease machine\x1a=Releases a machine allowing subsequent deployment of a new OS*\x11UndeployMachineOS\x82\xd3\xe4\x93\x022\"0/v1/projects/{project_id}/machines/{id}/undeploy\x12\xc0\x02\n" +
	"\x1bListMachineOperatingSystems\x127.org.cudo.compute.v1.ListMachineOperatingSystemsRequest\x1a8.org.cudo.compute.v1.ListMachineOperatingSystemsResponse\"\xad\x01\xbaG\x83\x01\n" +
	"\n" +
	"Bare metal\x12\x16List operating systems\x1a@List operating systems that can be deployed to machine instances*\x1bListMachineOperatingSystems\x82\xd3\xe4\x93\x02 \x12\x1e/v1/machines/operating-systems\x12\xe8\x01\n" +
	"\x10ListMachineTypes\x12,.org.cudo.compute.v1.ListMachineTypesRequest\x1a-.org.cudo.compute.v1.ListMachineTypesResponse\"w\xbaGZ\n" +
	"\n" +
	"Bare metal\x12\x12List machine types\x1a&List machine types that can be ordered*\x10ListMachineTypes\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/machines-types\x12\xec\x01\n" +
	"\x17ListClusterMachineTypes\x123.org.cudo.compute.v1.ListClusterMachineTypesRequest\x1a4.org.cudo.compute.v1.ListClusterMachineTypesResponse\"f\xbaGA\n" +
	"\n" +
	"Bare Metal\x12\x1aList cluster machine types*\x17ListClusterMachineTypes\x82\xd3\xe4\x93\x02\x1c\x12\x1a/v1/clusters/machine-types\x12\x93\x02\n" +
	"\x15GetClusterMachineType\x121.org.cudo.compute.v1.GetClusterMachineTypeRequest\x1a2.org.cudo.compute.v1.GetClusterMachineTypeResponse\"\x92\x01\xbaG=\n" +
	"\n" +
	"Bare Metal\x12\x18Get cluster machine type*\x15GetClusterMachineType\x82\xd3\xe4\x93\x02L\x12J/v1/clusters/data-centers/{data_center_id}/machine-types/{machine_type_id}\x12\xe5\x01\n" +
	"\rCreateCluster\x12).org.cudo.compute.v1.CreateClusterRequest\x1a\x1c.org.cudo.compute.v1.Cluster\"\x8a\x01\xbaGL\n" +
	"\n" +
	"Bare Metal\x12\x10Create a cluster\x1a\x1dOrder a cluster for a project*\rCreateCluster\x82\xd3\xe4\x93\x025:\acluster\"*/v1/projects/{cluster.project_id}/clusters\x12\xd6\x01\n" +
	"\rDeleteCluster\x12).org.cudo.compute.v1.DeleteClusterRequest\x1a\x16.google.protobuf.Empty\"\x81\x01\xbaGO\n" +
	"\n" +
	"Bare Metal\x12\x10Delete a cluster\x1a Delete a cluster from a project.*\rDeleteCluster\x82\xd3\xe4\x93\x02)*'/v1/projects/{project_id}/clusters/{id}\x12\xcb\x01\n" +
	"\n" +
	"GetCluster\x12&.org.cudo.compute.v1.GetClusterRequest\x1a\x1c.org.cudo.compute.v1.Cluster\"w\xbaGE\n" +
	"\n" +
	"Bare Metal\x12\rGet a cluster\x1a\x1cGet the details of a cluster*\n" +
	"GetCluster\x82\xd3\xe4\x93\x02)\x12'/v1/projects/{project_id}/clusters/{id}\x12\xd7\x01\n" +
	"\fListClusters\x12(.org.cudo.compute.v1.ListClustersRequest\x1a).org.cudo.compute.v1.ListClustersResponse\"r\xbaGE\n" +
	"\n" +
	"Bare Metal\x12\rList clusters\x1a\x1aList clusters in a project*\fListClusters\x82\xd3\xe4\x93\x02$\x12\"/v1/projects/{project_id}/clusters\x12\xf2\x01\n" +
	"\rUpdateCluster\x12).org.cudo.compute.v1.UpdateClusterRequest\x1a\x1c.org.cudo.compute.v1.Cluster\"\x97\x01\xbaGL\n" +
	"\n" +
	"Bare Metal\x12\x10Update a cluster\x1a\x1dUpdate a cluster in a project*\rUpdateCluster\x82\xd3\xe4\x93\x02B:\acluster27/v1/projects/{cluster.project_id}/clusters/{cluster.id}\x12\xfa\x01\n" +
	"\x14DeleteClusterMachine\x120.org.cudo.compute.v1.DeleteClusterMachineRequest\x1a\x16.google.protobuf.Empty\"\x97\x01\xbaG]\n" +
	"\n" +
	"Bare Metal\x12\x18Delete a cluster machine\x1a\x1fDelete a machine from a cluster*\x14DeleteClusterMachine\x82\xd3\xe4\x93\x021*//v1/projects/{project_id}/cluster-machines/{id}\x12\xff\x01\n" +
	"\x14RebootClusterMachine\x120.org.cudo.compute.v1.RebootClusterMachineRequest\x1a\x16.google.protobuf.Empty\"\x9c\x01\xbaG[\n" +
	"\n" +
	"Bare Metal\x12\x18Reboot a cluster machine\x1a\x1dReboot a machine in a cluster*\x14RebootClusterMachine\x82\xd3\xe4\x93\x028\"6/v1/projects/{project_id}/cluster-machines/{id}:reboot\x12\xff\x01\n" +
	"\x14RenameClusterMachine\x120.org.cudo.compute.v1.RenameClusterMachineRequest\x1a\x16.google.protobuf.Empty\"\x9c\x01\xbaG[\n" +
	"\n" +
	"Bare Metal\x12\x18Rename a cluster machine\x1a\x1dRename a machine in a cluster*\x14RenameClusterMachine\x82\xd3\xe4\x93\x028\"6/v1/projects/{project_id}/cluster-machines/{id}:rename\x12\xb6\x02\n" +
	"\x14UpdateClusterMachine\x120.org.cudo.compute.v1.UpdateClusterMachineRequest\x1a#.org.cudo.compute.v1.ClusterMachine\"\xc6\x01\xbaG[\n" +
	"\n" +
	"Bare Metal\x12\x18Update a cluster machine\x1a\x1dUpdate a machine in a cluster*\x14UpdateClusterMachine\x82\xd3\xe4\x93\x02b:\x0fcluster_machine2O/v1/projects/{cluster_machine.project_id}/cluster-machines/{cluster_machine.id}BLZJgithub.com/CudoVentures/terraform-provider-cudo/internal/compute/baremetalb\x06proto3"

var (
	file_svc_compute_baremetal_baremetal_svc_proto_rawDescOnce sync.Once
	file_svc_compute_baremetal_baremetal_svc_proto_rawDescData []byte
)

func file_svc_compute_baremetal_baremetal_svc_proto_rawDescGZIP() []byte {
	file_svc_compute_baremetal_baremetal_svc_proto_rawDescOnce.Do(func() {
		file_svc_compute_baremetal_baremetal_svc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_compute_baremetal_baremetal_svc_proto_rawDesc), len(file_svc_compute_baremetal_baremetal_svc_proto_rawDesc)))
	})
	return file_svc_compute_baremetal_baremetal_svc_proto_rawDescData
}

var file_svc_compute_baremetal_baremetal_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_svc_compute_baremetal_baremetal_svc_proto_goTypes = []any{
	(*CreateMachineRequest)(nil),                // 0: org.cudo.compute.v1.CreateMachineRequest
	(*DeleteMachineRequest)(nil),                // 1: org.cudo.compute.v1.DeleteMachineRequest
	(*GetMachineRequest)(nil),                   // 2: org.cudo.compute.v1.GetMachineRequest
	(*ListMachinesRequest)(nil),                 // 3: org.cudo.compute.v1.ListMachinesRequest
	(*ListMachinesResponse)(nil),                // 4: org.cudo.compute.v1.ListMachinesResponse
	(*UpdateMachineRequest)(nil),                // 5: org.cudo.compute.v1.UpdateMachineRequest
	(*DeployMachineOSRequest)(nil),              // 6: org.cudo.compute.v1.DeployMachineOSRequest
	(*UndeployMachineOSRequest)(nil),            // 7: org.cudo.compute.v1.UndeployMachineOSRequest
	(*PowerOnMachineRequest)(nil),               // 8: org.cudo.compute.v1.PowerOnMachineRequest
	(*PowerOffMachineRequest)(nil),              // 9: org.cudo.compute.v1.PowerOffMachineRequest
	(*ListMachineTypesRequest)(nil),             // 10: org.cudo.compute.v1.ListMachineTypesRequest
	(*ListMachineTypesResponse)(nil),            // 11: org.cudo.compute.v1.ListMachineTypesResponse
	(*ListMachineOperatingSystemsRequest)(nil),  // 12: org.cudo.compute.v1.ListMachineOperatingSystemsRequest
	(*ListMachineOperatingSystemsResponse)(nil), // 13: org.cudo.compute.v1.ListMachineOperatingSystemsResponse
	(*CreateClusterRequest)(nil),                // 14: org.cudo.compute.v1.CreateClusterRequest
	(*DeleteClusterRequest)(nil),                // 15: org.cudo.compute.v1.DeleteClusterRequest
	(*GetClusterMachineTypeRequest)(nil),        // 16: org.cudo.compute.v1.GetClusterMachineTypeRequest
	(*GetClusterMachineTypeResponse)(nil),       // 17: org.cudo.compute.v1.GetClusterMachineTypeResponse
	(*GetClusterRequest)(nil),                   // 18: org.cudo.compute.v1.GetClusterRequest
	(*ListClusterMachineTypesRequest)(nil),      // 19: org.cudo.compute.v1.ListClusterMachineTypesRequest
	(*ListClusterMachineTypesResponse)(nil),     // 20: org.cudo.compute.v1.ListClusterMachineTypesResponse
	(*ListClustersRequest)(nil),                 // 21: org.cudo.compute.v1.ListClustersRequest
	(*ListClustersResponse)(nil),                // 22: org.cudo.compute.v1.ListClustersResponse
	(*UpdateClusterRequest)(nil),                // 23: org.cudo.compute.v1.UpdateClusterRequest
	(*UpdateClusterMachineRequest)(nil),         // 24: org.cudo.compute.v1.UpdateClusterMachineRequest
	(*RebootClusterMachineRequest)(nil),         // 25: org.cudo.compute.v1.RebootClusterMachineRequest
	(*RenameClusterMachineRequest)(nil),         // 26: org.cudo.compute.v1.RenameClusterMachineRequest
	(*DeleteClusterMachineRequest)(nil),         // 27: org.cudo.compute.v1.DeleteClusterMachineRequest
	(*Machine)(nil),                             // 28: org.cudo.compute.v1.Machine
	(*fieldmaskpb.FieldMask)(nil),               // 29: google.protobuf.FieldMask
	(*MachineType)(nil),                         // 30: org.cudo.compute.v1.MachineType
	(*compute.Image)(nil),                       // 31: org.cudo.compute.v1.Image
	(*Cluster)(nil),                             // 32: org.cudo.compute.v1.Cluster
	(*ClusterMachine)(nil),                      // 33: org.cudo.compute.v1.ClusterMachine
	(*emptypb.Empty)(nil),                       // 34: google.protobuf.Empty
}
var file_svc_compute_baremetal_baremetal_svc_proto_depIdxs = []int32{
	28, // 0: org.cudo.compute.v1.CreateMachineRequest.machine:type_name -> org.cudo.compute.v1.Machine
	28, // 1: org.cudo.compute.v1.ListMachinesResponse.machines:type_name -> org.cudo.compute.v1.Machine
	28, // 2: org.cudo.compute.v1.UpdateMachineRequest.machine:type_name -> org.cudo.compute.v1.Machine
	29, // 3: org.cudo.compute.v1.UpdateMachineRequest.update_mask:type_name -> google.protobuf.FieldMask
	30, // 4: org.cudo.compute.v1.ListMachineTypesResponse.machine_types:type_name -> org.cudo.compute.v1.MachineType
	31, // 5: org.cudo.compute.v1.ListMachineOperatingSystemsResponse.images:type_name -> org.cudo.compute.v1.Image
	32, // 6: org.cudo.compute.v1.CreateClusterRequest.cluster:type_name -> org.cudo.compute.v1.Cluster
	30, // 7: org.cudo.compute.v1.GetClusterMachineTypeResponse.machine_type:type_name -> org.cudo.compute.v1.MachineType
	30, // 8: org.cudo.compute.v1.ListClusterMachineTypesResponse.machine_types:type_name -> org.cudo.compute.v1.MachineType
	32, // 9: org.cudo.compute.v1.ListClustersResponse.clusters:type_name -> org.cudo.compute.v1.Cluster
	32, // 10: org.cudo.compute.v1.UpdateClusterRequest.cluster:type_name -> org.cudo.compute.v1.Cluster
	29, // 11: org.cudo.compute.v1.UpdateClusterRequest.update_mask:type_name -> google.protobuf.FieldMask
	33, // 12: org.cudo.compute.v1.UpdateClusterMachineRequest.cluster_machine:type_name -> org.cudo.compute.v1.ClusterMachine
	29, // 13: org.cudo.compute.v1.UpdateClusterMachineRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 14: org.cudo.compute.v1.BareMetalService.CreateMachine:input_type -> org.cudo.compute.v1.CreateMachineRequest
	1,  // 15: org.cudo.compute.v1.BareMetalService.DeleteMachine:input_type -> org.cudo.compute.v1.DeleteMachineRequest
	2,  // 16: org.cudo.compute.v1.BareMetalService.GetMachine:input_type -> org.cudo.compute.v1.GetMachineRequest
	3,  // 17: org.cudo.compute.v1.BareMetalService.ListMachines:input_type -> org.cudo.compute.v1.ListMachinesRequest
	5,  // 18: org.cudo.compute.v1.BareMetalService.UpdateMachine:input_type -> org.cudo.compute.v1.UpdateMachineRequest
	9,  // 19: org.cudo.compute.v1.BareMetalService.PowerOffMachine:input_type -> org.cudo.compute.v1.PowerOffMachineRequest
	8,  // 20: org.cudo.compute.v1.BareMetalService.PowerOnMachine:input_type -> org.cudo.compute.v1.PowerOnMachineRequest
	6,  // 21: org.cudo.compute.v1.BareMetalService.DeployMachineOS:input_type -> org.cudo.compute.v1.DeployMachineOSRequest
	7,  // 22: org.cudo.compute.v1.BareMetalService.UndeployMachineOS:input_type -> org.cudo.compute.v1.UndeployMachineOSRequest
	12, // 23: org.cudo.compute.v1.BareMetalService.ListMachineOperatingSystems:input_type -> org.cudo.compute.v1.ListMachineOperatingSystemsRequest
	10, // 24: org.cudo.compute.v1.BareMetalService.ListMachineTypes:input_type -> org.cudo.compute.v1.ListMachineTypesRequest
	19, // 25: org.cudo.compute.v1.BareMetalService.ListClusterMachineTypes:input_type -> org.cudo.compute.v1.ListClusterMachineTypesRequest
	16, // 26: org.cudo.compute.v1.BareMetalService.GetClusterMachineType:input_type -> org.cudo.compute.v1.GetClusterMachineTypeRequest
	14, // 27: org.cudo.compute.v1.BareMetalService.CreateCluster:input_type -> org.cudo.compute.v1.CreateClusterRequest
	15, // 28: org.cudo.compute.v1.BareMetalService.DeleteCluster:input_type -> org.cudo.compute.v1.DeleteClusterRequest
	18, // 29: org.cudo.compute.v1.BareMetalService.GetCluster:input_type -> org.cudo.compute.v1.GetClusterRequest
	21, // 30: org.cudo.compute.v1.BareMetalService.ListClusters:input_type -> org.cudo.compute.v1.ListClustersRequest
	23, // 31: org.cudo.compute.v1.BareMetalService.UpdateCluster:input_type -> org.cudo.compute.v1.UpdateClusterRequest
	27, // 32: org.cudo.compute.v1.BareMetalService.DeleteClusterMachine:input_type -> org.cudo.compute.v1.DeleteClusterMachineRequest
	25, // 33: org.cudo.compute.v1.BareMetalService.RebootClusterMachine:input_type -> org.cudo.compute.v1.RebootClusterMachineRequest
	26, // 34: org.cudo.compute.v1.BareMetalService.RenameClusterMachine:input_type -> org.cudo.compute.v1.RenameClusterMachineRequest
	24, // 35: org.cudo.compute.v1.BareMetalService.UpdateClusterMachine:input_type -> org.cudo.compute.v1.UpdateClusterMachineRequest
	28, // 36: org.cudo.compute.v1.BareMetalService.CreateMachine:output_type -> org.cudo.compute.v1.Machine
	34, // 37: org.cudo.compute.v1.BareMetalService.DeleteMachine:output_type -> google.protobuf.Empty
	28, // 38: org.cudo.compute.v1.BareMetalService.GetMachine:output_type -> org.cudo.compute.v1.Machine
	4,  // 39: org.cudo.compute.v1.BareMetalService.ListMachines:output_type -> org.cudo.compute.v1.ListMachinesResponse
	28, // 40: org.cudo.compute.v1.BareMetalService.UpdateMachine:output_type -> org.cudo.compute.v1.Machine
	34, // 41: org.cudo.compute.v1.BareMetalService.PowerOffMachine:output_type -> google.protobuf.Empty
	34, // 42: org.cudo.compute.v1.BareMetalService.PowerOnMachine:output_type -> google.protobuf.Empty
	34, // 43: org.cudo.compute.v1.BareMetalService.DeployMachineOS:output_type -> google.protobuf.Empty
	34, // 44: org.cudo.compute.v1.BareMetalService.UndeployMachineOS:output_type -> google.protobuf.Empty
	13, // 45: org.cudo.compute.v1.BareMetalService.ListMachineOperatingSystems:output_type -> org.cudo.compute.v1.ListMachineOperatingSystemsResponse
	11, // 46: org.cudo.compute.v1.BareMetalService.ListMachineTypes:output_type -> org.cudo.compute.v1.ListMachineTypesResponse
	20, // 47: org.cudo.compute.v1.BareMetalService.ListClusterMachineTypes:output_type -> org.cudo.compute.v1.ListClusterMachineTypesResponse
	17, // 48: org.cudo.compute.v1.BareMetalService.GetClusterMachineType:output_type -> org.cudo.compute.v1.GetClusterMachineTypeResponse
	32, // 49: org.cudo.compute.v1.BareMetalService.CreateCluster:output_type -> org.cudo.compute.v1.Cluster
	34, // 50: org.cudo.compute.v1.BareMetalService.DeleteCluster:output_type -> google.protobuf.Empty
	32, // 51: org.cudo.compute.v1.BareMetalService.GetCluster:output_type -> org.cudo.compute.v1.Cluster
	22, // 52: org.cudo.compute.v1.BareMetalService.ListClusters:output_type -> org.cudo.compute.v1.ListClustersResponse
	32, // 53: org.cudo.compute.v1.BareMetalService.UpdateCluster:output_type -> org.cudo.compute.v1.Cluster
	34, // 54: org.cudo.compute.v1.BareMetalService.DeleteClusterMachine:output_type -> google.protobuf.Empty
	34, // 55: org.cudo.compute.v1.BareMetalService.RebootClusterMachine:output_type -> google.protobuf.Empty
	34, // 56: org.cudo.compute.v1.BareMetalService.RenameClusterMachine:output_type -> google.protobuf.Empty
	33, // 57: org.cudo.compute.v1.BareMetalService.UpdateClusterMachine:output_type -> org.cudo.compute.v1.ClusterMachine
	36, // [36:58] is the sub-list for method output_type
	14, // [14:36] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_svc_compute_baremetal_baremetal_svc_proto_init() }
func file_svc_compute_baremetal_baremetal_svc_proto_init() {
	if File_svc_compute_baremetal_baremetal_svc_proto != nil {
		return
	}
	file_svc_compute_baremetal_baremetal_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_compute_baremetal_baremetal_svc_proto_rawDesc), len(file_svc_compute_baremetal_baremetal_svc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_compute_baremetal_baremetal_svc_proto_goTypes,
		DependencyIndexes: file_svc_compute_baremetal_baremetal_svc_proto_depIdxs,
		MessageInfos:      file_svc_compute_baremetal_baremetal_svc_proto_msgTypes,
	}.Build()
	File_svc_compute_baremetal_baremetal_svc_proto = out.File
	file_svc_compute_baremetal_baremetal_svc_proto_goTypes = nil
	file_svc_compute_baremetal_baremetal_svc_proto_depIdxs = nil
}
