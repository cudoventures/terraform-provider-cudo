// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: svc/compute/volume/volume_svc.proto

package volume

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVolumeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Create volume params
	Volume        *Volume `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVolumeRequest) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type DeleteVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVolumeRequest) Reset() {
	*x = DeleteVolumeRequest{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeRequest) ProtoMessage() {}

func (x *DeleteVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteVolumeRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteVolumeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolumeRequest) Reset() {
	*x = GetVolumeRequest{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolumeRequest) ProtoMessage() {}

func (x *GetVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolumeRequest.ProtoReflect.Descriptor instead.
func (*GetVolumeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{2}
}

func (x *GetVolumeRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetVolumeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListVolumePricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumePricesRequest) Reset() {
	*x = ListVolumePricesRequest{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumePricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumePricesRequest) ProtoMessage() {}

func (x *ListVolumePricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumePricesRequest.ProtoReflect.Descriptor instead.
func (*ListVolumePricesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{3}
}

func (x *ListVolumePricesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListVolumePricesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListVolumePricesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prices        []*VolumePrice         `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumePricesResponse) Reset() {
	*x = ListVolumePricesResponse{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumePricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumePricesResponse) ProtoMessage() {}

func (x *ListVolumePricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumePricesResponse.ProtoReflect.Descriptor instead.
func (*ListVolumePricesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{4}
}

func (x *ListVolumePricesResponse) GetPrices() []*VolumePrice {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *ListVolumePricesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListVolumePricesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListVolumePricesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListVolumesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PageNumber    int32                  `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumesRequest) Reset() {
	*x = ListVolumesRequest{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesRequest) ProtoMessage() {}

func (x *ListVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesRequest.ProtoReflect.Descriptor instead.
func (*ListVolumesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{5}
}

func (x *ListVolumesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListVolumesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListVolumesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListVolumesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volumes       []*Volume              `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumesResponse) Reset() {
	*x = ListVolumesResponse{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesResponse) ProtoMessage() {}

func (x *ListVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesResponse.ProtoReflect.Descriptor instead.
func (*ListVolumesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{6}
}

func (x *ListVolumesResponse) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ListVolumesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListVolumesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListVolumesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdateVolumeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Update volume params
	Volume *Volume `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVolumeRequest) Reset() {
	*x = UpdateVolumeRequest{}
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVolumeRequest) ProtoMessage() {}

func (x *UpdateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_volume_volume_svc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVolumeRequest.ProtoReflect.Descriptor instead.
func (*UpdateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_volume_volume_svc_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateVolumeRequest) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *UpdateVolumeRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

var File_svc_compute_volume_volume_svc_proto protoreflect.FileDescriptor

const file_svc_compute_volume_volume_svc_proto_rawDesc = "" +
	"\n" +
	"#svc/compute/volume/volume_svc.proto\x12\x13org.cudo.compute.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1fsvc/compute/volume/volume.proto\"J\n" +
	"\x13CreateVolumeRequest\x123\n" +
	"\x06volume\x18\x01 \x01(\v2\x1b.org.cudo.compute.v1.VolumeR\x06volume\"N\n" +
	"\x13DeleteVolumeRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"K\n" +
	"\x10GetVolumeRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\"W\n" +
	"\x17ListVolumePricesRequest\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\"\xb3\x01\n" +
	"\x18ListVolumePricesResponse\x128\n" +
	"\x06prices\x18\x01 \x03(\v2 .org.cudo.compute.v1.VolumePriceR\x06prices\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vpage_number\x18\x03 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"v\n" +
	"\x12ListVolumesRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x1f\n" +
	"\vpage_number\x18\x02 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"\xba\x01\n" +
	"\x13ListVolumesResponse\x125\n" +
	"\avolumes\x18\x01 \x03(\v2\x1b.org.cudo.compute.v1.VolumeR\avolumes\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"\x87\x01\n" +
	"\x13UpdateVolumeRequest\x123\n" +
	"\x06volume\x18\x01 \x01(\v2\x1b.org.cudo.compute.v1.VolumeR\x06volume\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask2\x8e\n" +
	"\n" +
	"\rVolumeService\x12\xd8\x01\n" +
	"\fCreateVolume\x12(.org.cudo.compute.v1.CreateVolumeRequest\x1a\x1b.org.cudo.compute.v1.Volume\"\x80\x01\xbaGE\n" +
	"\x06Volume\x12\x0fCreate a volume\x1a\x1cOrder a volume for a project*\fCreateVolume\x82\xd3\xe4\x93\x022:\x06volume\"(/v1/projects/{volume.project_id}/volumes\x12\xcb\x01\n" +
	"\fDeleteVolume\x12(.org.cudo.compute.v1.DeleteVolumeRequest\x1a\x16.google.protobuf.Empty\"y\xbaGH\n" +
	"\x06Volume\x12\x0fDelete a volume\x1a\x1fDelete a volume from a project.*\fDeleteVolume\x82\xd3\xe4\x93\x02(*&/v1/projects/{project_id}/volumes/{id}\x12\xc0\x01\n" +
	"\tGetVolume\x12%.org.cudo.compute.v1.GetVolumeRequest\x1a\x1b.org.cudo.compute.v1.Volume\"o\xbaG>\n" +
	"\x06Volume\x12\fGet a volume\x1a\x1bGet the details of a volume*\tGetVolume\x82\xd3\xe4\x93\x02(\x12&/v1/projects/{project_id}/volumes/{id}\x12\xda\x01\n" +
	"\x10ListVolumePrices\x12,.org.cudo.compute.v1.ListVolumePricesRequest\x1a-.org.cudo.compute.v1.ListVolumePricesResponse\"i\xbaGL\n" +
	"\x06Volume\x12\x12List volume prices\x1a\x1cList available volume prices*\x10ListVolumePrices\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/volumes/prices\x12\xcc\x01\n" +
	"\vListVolumes\x12'.org.cudo.compute.v1.ListVolumesRequest\x1a(.org.cudo.compute.v1.ListVolumesResponse\"j\xbaG>\n" +
	"\x06Volume\x12\fList volumes\x1a\x19List volumes in a project*\vListVolumes\x82\xd3\xe4\x93\x02#\x12!/v1/projects/{project_id}/volumes\x12\xe4\x01\n" +
	"\fUpdateVolume\x12(.org.cudo.compute.v1.UpdateVolumeRequest\x1a\x1b.org.cudo.compute.v1.Volume\"\x8c\x01\xbaGE\n" +
	"\x06Volume\x12\x0fUpdate a volume\x1a\x1cUpdate a volume in a project*\fUpdateVolume\x82\xd3\xe4\x93\x02>:\x06volume24/v1/projects/{volume.project_id}/volumes/{volume.id}BIZGgithub.com/CudoVentures/terraform-provider-cudo/internal/compute/volumeb\x06proto3"

var (
	file_svc_compute_volume_volume_svc_proto_rawDescOnce sync.Once
	file_svc_compute_volume_volume_svc_proto_rawDescData []byte
)

func file_svc_compute_volume_volume_svc_proto_rawDescGZIP() []byte {
	file_svc_compute_volume_volume_svc_proto_rawDescOnce.Do(func() {
		file_svc_compute_volume_volume_svc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_compute_volume_volume_svc_proto_rawDesc), len(file_svc_compute_volume_volume_svc_proto_rawDesc)))
	})
	return file_svc_compute_volume_volume_svc_proto_rawDescData
}

var file_svc_compute_volume_volume_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_svc_compute_volume_volume_svc_proto_goTypes = []any{
	(*CreateVolumeRequest)(nil),      // 0: org.cudo.compute.v1.CreateVolumeRequest
	(*DeleteVolumeRequest)(nil),      // 1: org.cudo.compute.v1.DeleteVolumeRequest
	(*GetVolumeRequest)(nil),         // 2: org.cudo.compute.v1.GetVolumeRequest
	(*ListVolumePricesRequest)(nil),  // 3: org.cudo.compute.v1.ListVolumePricesRequest
	(*ListVolumePricesResponse)(nil), // 4: org.cudo.compute.v1.ListVolumePricesResponse
	(*ListVolumesRequest)(nil),       // 5: org.cudo.compute.v1.ListVolumesRequest
	(*ListVolumesResponse)(nil),      // 6: org.cudo.compute.v1.ListVolumesResponse
	(*UpdateVolumeRequest)(nil),      // 7: org.cudo.compute.v1.UpdateVolumeRequest
	(*Volume)(nil),                   // 8: org.cudo.compute.v1.Volume
	(*VolumePrice)(nil),              // 9: org.cudo.compute.v1.VolumePrice
	(*fieldmaskpb.FieldMask)(nil),    // 10: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),            // 11: google.protobuf.Empty
}
var file_svc_compute_volume_volume_svc_proto_depIdxs = []int32{
	8,  // 0: org.cudo.compute.v1.CreateVolumeRequest.volume:type_name -> org.cudo.compute.v1.Volume
	9,  // 1: org.cudo.compute.v1.ListVolumePricesResponse.prices:type_name -> org.cudo.compute.v1.VolumePrice
	8,  // 2: org.cudo.compute.v1.ListVolumesResponse.volumes:type_name -> org.cudo.compute.v1.Volume
	8,  // 3: org.cudo.compute.v1.UpdateVolumeRequest.volume:type_name -> org.cudo.compute.v1.Volume
	10, // 4: org.cudo.compute.v1.UpdateVolumeRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 5: org.cudo.compute.v1.VolumeService.CreateVolume:input_type -> org.cudo.compute.v1.CreateVolumeRequest
	1,  // 6: org.cudo.compute.v1.VolumeService.DeleteVolume:input_type -> org.cudo.compute.v1.DeleteVolumeRequest
	2,  // 7: org.cudo.compute.v1.VolumeService.GetVolume:input_type -> org.cudo.compute.v1.GetVolumeRequest
	3,  // 8: org.cudo.compute.v1.VolumeService.ListVolumePrices:input_type -> org.cudo.compute.v1.ListVolumePricesRequest
	5,  // 9: org.cudo.compute.v1.VolumeService.ListVolumes:input_type -> org.cudo.compute.v1.ListVolumesRequest
	7,  // 10: org.cudo.compute.v1.VolumeService.UpdateVolume:input_type -> org.cudo.compute.v1.UpdateVolumeRequest
	8,  // 11: org.cudo.compute.v1.VolumeService.CreateVolume:output_type -> org.cudo.compute.v1.Volume
	11, // 12: org.cudo.compute.v1.VolumeService.DeleteVolume:output_type -> google.protobuf.Empty
	8,  // 13: org.cudo.compute.v1.VolumeService.GetVolume:output_type -> org.cudo.compute.v1.Volume
	4,  // 14: org.cudo.compute.v1.VolumeService.ListVolumePrices:output_type -> org.cudo.compute.v1.ListVolumePricesResponse
	6,  // 15: org.cudo.compute.v1.VolumeService.ListVolumes:output_type -> org.cudo.compute.v1.ListVolumesResponse
	8,  // 16: org.cudo.compute.v1.VolumeService.UpdateVolume:output_type -> org.cudo.compute.v1.Volume
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_svc_compute_volume_volume_svc_proto_init() }
func file_svc_compute_volume_volume_svc_proto_init() {
	if File_svc_compute_volume_volume_svc_proto != nil {
		return
	}
	file_svc_compute_volume_volume_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_compute_volume_volume_svc_proto_rawDesc), len(file_svc_compute_volume_volume_svc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_compute_volume_volume_svc_proto_goTypes,
		DependencyIndexes: file_svc_compute_volume_volume_svc_proto_depIdxs,
		MessageInfos:      file_svc_compute_volume_volume_svc_proto_msgTypes,
	}.Build()
	File_svc_compute_volume_volume_svc_proto = out.File
	file_svc_compute_volume_volume_svc_proto_goTypes = nil
	file_svc_compute_volume_volume_svc_proto_depIdxs = nil
}
