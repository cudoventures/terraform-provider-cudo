// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: svc/compute/types.proto

package compute

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommitmentTerm int32

const (
	CommitmentTerm_COMMITMENT_TERM_NONE      CommitmentTerm = 0
	CommitmentTerm_COMMITMENT_TERM_1_MONTH   CommitmentTerm = 1
	CommitmentTerm_COMMITMENT_TERM_3_MONTHS  CommitmentTerm = 2
	CommitmentTerm_COMMITMENT_TERM_6_MONTHS  CommitmentTerm = 3
	CommitmentTerm_COMMITMENT_TERM_12_MONTHS CommitmentTerm = 4
	CommitmentTerm_COMMITMENT_TERM_24_MONTHS CommitmentTerm = 5
	CommitmentTerm_COMMITMENT_TERM_36_MONTHS CommitmentTerm = 6
	CommitmentTerm_COMMITMENT_TERM_60_MONTHS CommitmentTerm = 7
)

// Enum value maps for CommitmentTerm.
var (
	CommitmentTerm_name = map[int32]string{
		0: "COMMITMENT_TERM_NONE",
		1: "COMMITMENT_TERM_1_MONTH",
		2: "COMMITMENT_TERM_3_MONTHS",
		3: "COMMITMENT_TERM_6_MONTHS",
		4: "COMMITMENT_TERM_12_MONTHS",
		5: "COMMITMENT_TERM_24_MONTHS",
		6: "COMMITMENT_TERM_36_MONTHS",
		7: "COMMITMENT_TERM_60_MONTHS",
	}
	CommitmentTerm_value = map[string]int32{
		"COMMITMENT_TERM_NONE":      0,
		"COMMITMENT_TERM_1_MONTH":   1,
		"COMMITMENT_TERM_3_MONTHS":  2,
		"COMMITMENT_TERM_6_MONTHS":  3,
		"COMMITMENT_TERM_12_MONTHS": 4,
		"COMMITMENT_TERM_24_MONTHS": 5,
		"COMMITMENT_TERM_36_MONTHS": 6,
		"COMMITMENT_TERM_60_MONTHS": 7,
	}
)

func (x CommitmentTerm) Enum() *CommitmentTerm {
	p := new(CommitmentTerm)
	*p = x
	return p
}

func (x CommitmentTerm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommitmentTerm) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_types_proto_enumTypes[0].Descriptor()
}

func (CommitmentTerm) Type() protoreflect.EnumType {
	return &file_svc_compute_types_proto_enumTypes[0]
}

func (x CommitmentTerm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommitmentTerm.Descriptor instead.
func (CommitmentTerm) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_types_proto_rawDescGZIP(), []int{0}
}

type Image struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DisplayName       string                 `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Platform          string                 `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	SizeGib           int32                  `protobuf:"varint,7,opt,name=size_gib,json=sizeGib,proto3" json:"size_gib,omitempty"`
	InstalledPackages []*Image_Package       `protobuf:"bytes,8,rep,name=installed_packages,json=installedPackages,proto3" json:"installed_packages,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_svc_compute_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_svc_compute_types_proto_rawDescGZIP(), []int{0}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Image) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Image) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Image) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Image) GetSizeGib() int32 {
	if x != nil {
		return x.SizeGib
	}
	return 0
}

func (x *Image) GetInstalledPackages() []*Image_Package {
	if x != nil {
		return x.InstalledPackages
	}
	return nil
}

type Image_Package struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image_Package) Reset() {
	*x = Image_Package{}
	mi := &file_svc_compute_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Package) ProtoMessage() {}

func (x *Image_Package) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Package.ProtoReflect.Descriptor instead.
func (*Image_Package) Descriptor() ([]byte, []int) {
	return file_svc_compute_types_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Image_Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Image_Package) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Image_Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_svc_compute_types_proto protoreflect.FileDescriptor

const file_svc_compute_types_proto_rawDesc = "" +
	"\n" +
	"\x17svc/compute/types.proto\x12\x13org.cudo.compute.v1\x1a\x1fgoogle/api/field_behavior.proto\"\x87\x03\n" +
	"\x05Image\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tB\x03\xe0A\x02R\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tB\x03\xe0A\x02R\vdescription\x12&\n" +
	"\fdisplay_name\x18\x04 \x01(\tB\x03\xe0A\x02R\vdisplayName\x12\x1f\n" +
	"\bplatform\x18\x05 \x01(\tB\x03\xe0A\x02R\bplatform\x12\x1e\n" +
	"\bsize_gib\x18\a \x01(\x05B\x03\xe0A\x02R\asizeGib\x12V\n" +
	"\x12installed_packages\x18\b \x03(\v2\".org.cudo.compute.v1.Image.PackageB\x03\xe0A\x02R\x11installedPackages\x1ah\n" +
	"\aPackage\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\x12%\n" +
	"\vdescription\x18\x02 \x01(\tB\x03\xe0A\x02R\vdescription\x12\x1d\n" +
	"\aversion\x18\x03 \x01(\tB\x03\xe0A\x02R\aversion*\xff\x01\n" +
	"\x0eCommitmentTerm\x12\x18\n" +
	"\x14COMMITMENT_TERM_NONE\x10\x00\x12\x1b\n" +
	"\x17COMMITMENT_TERM_1_MONTH\x10\x01\x12\x1c\n" +
	"\x18COMMITMENT_TERM_3_MONTHS\x10\x02\x12\x1c\n" +
	"\x18COMMITMENT_TERM_6_MONTHS\x10\x03\x12\x1d\n" +
	"\x19COMMITMENT_TERM_12_MONTHS\x10\x04\x12\x1d\n" +
	"\x19COMMITMENT_TERM_24_MONTHS\x10\x05\x12\x1d\n" +
	"\x19COMMITMENT_TERM_36_MONTHS\x10\x06\x12\x1d\n" +
	"\x19COMMITMENT_TERM_60_MONTHS\x10\aBBZ@github.com/CudoVentures/terraform-provider-cudo/internal/computeb\x06proto3"

var (
	file_svc_compute_types_proto_rawDescOnce sync.Once
	file_svc_compute_types_proto_rawDescData []byte
)

func file_svc_compute_types_proto_rawDescGZIP() []byte {
	file_svc_compute_types_proto_rawDescOnce.Do(func() {
		file_svc_compute_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_compute_types_proto_rawDesc), len(file_svc_compute_types_proto_rawDesc)))
	})
	return file_svc_compute_types_proto_rawDescData
}

var file_svc_compute_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_svc_compute_types_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_svc_compute_types_proto_goTypes = []any{
	(CommitmentTerm)(0),   // 0: org.cudo.compute.v1.CommitmentTerm
	(*Image)(nil),         // 1: org.cudo.compute.v1.Image
	(*Image_Package)(nil), // 2: org.cudo.compute.v1.Image.Package
}
var file_svc_compute_types_proto_depIdxs = []int32{
	2, // 0: org.cudo.compute.v1.Image.installed_packages:type_name -> org.cudo.compute.v1.Image.Package
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_svc_compute_types_proto_init() }
func file_svc_compute_types_proto_init() {
	if File_svc_compute_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_compute_types_proto_rawDesc), len(file_svc_compute_types_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svc_compute_types_proto_goTypes,
		DependencyIndexes: file_svc_compute_types_proto_depIdxs,
		EnumInfos:         file_svc_compute_types_proto_enumTypes,
		MessageInfos:      file_svc_compute_types_proto_msgTypes,
	}.Build()
	File_svc_compute_types_proto = out.File
	file_svc_compute_types_proto_goTypes = nil
	file_svc_compute_types_proto_depIdxs = nil
}
