// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: svc/compute/vm/vm_svc.proto

package vm

import (
	compute "github.com/CudoVentures/terraform-provider-cudo/internal/compute"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	decimal "google.golang.org/genproto/googleapis/type/decimal"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListVMDataCentersResponse_VMDataCenter_StorageClass int32

const (
	ListVMDataCentersResponse_VMDataCenter_STORAGE_CLASS_UNKNOWN ListVMDataCentersResponse_VMDataCenter_StorageClass = 0
	ListVMDataCentersResponse_VMDataCenter_STORAGE_CLASS_LOCAL   ListVMDataCentersResponse_VMDataCenter_StorageClass = 1
	ListVMDataCentersResponse_VMDataCenter_STORAGE_CLASS_NETWORK ListVMDataCentersResponse_VMDataCenter_StorageClass = 2
)

// Enum value maps for ListVMDataCentersResponse_VMDataCenter_StorageClass.
var (
	ListVMDataCentersResponse_VMDataCenter_StorageClass_name = map[int32]string{
		0: "STORAGE_CLASS_UNKNOWN",
		1: "STORAGE_CLASS_LOCAL",
		2: "STORAGE_CLASS_NETWORK",
	}
	ListVMDataCentersResponse_VMDataCenter_StorageClass_value = map[string]int32{
		"STORAGE_CLASS_UNKNOWN": 0,
		"STORAGE_CLASS_LOCAL":   1,
		"STORAGE_CLASS_NETWORK": 2,
	}
)

func (x ListVMDataCentersResponse_VMDataCenter_StorageClass) Enum() *ListVMDataCentersResponse_VMDataCenter_StorageClass {
	p := new(ListVMDataCentersResponse_VMDataCenter_StorageClass)
	*p = x
	return p
}

func (x ListVMDataCentersResponse_VMDataCenter_StorageClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListVMDataCentersResponse_VMDataCenter_StorageClass) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_compute_vm_vm_svc_proto_enumTypes[0].Descriptor()
}

func (ListVMDataCentersResponse_VMDataCenter_StorageClass) Type() protoreflect.EnumType {
	return &file_svc_compute_vm_vm_svc_proto_enumTypes[0]
}

func (x ListVMDataCentersResponse_VMDataCenter_StorageClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListVMDataCentersResponse_VMDataCenter_StorageClass.Descriptor instead.
func (ListVMDataCentersResponse_VMDataCenter_StorageClass) EnumDescriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{33, 0, 0}
}

type CreateVMRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DataCenterId    string                 `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineType     string                 `protobuf:"bytes,2,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	ProjectId       string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	VmId            string                 `protobuf:"bytes,4,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	StartScript     string                 `protobuf:"bytes,5,opt,name=start_script,json=startScript,proto3" json:"start_script,omitempty"`
	SshKeySource    SshKeySource           `protobuf:"varint,6,opt,name=ssh_key_source,json=sshKeySource,proto3,enum=org.cudo.compute.v1.SshKeySource" json:"ssh_key_source,omitempty"`
	CustomSshKeys   []string               `protobuf:"bytes,7,rep,name=custom_ssh_keys,json=customSshKeys,proto3" json:"custom_ssh_keys,omitempty"`
	Password        string                 `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	BootDisk        *Disk                  `protobuf:"bytes,9,opt,name=boot_disk,json=bootDisk,proto3" json:"boot_disk,omitempty"`
	BootDiskImageId string                 `protobuf:"bytes,10,opt,name=boot_disk_image_id,json=bootDiskImageId,proto3" json:"boot_disk_image_id,omitempty"`
	Vcpus           int32                  `protobuf:"varint,12,opt,name=vcpus,proto3" json:"vcpus,omitempty"`
	MemoryGib       int32                  `protobuf:"varint,13,opt,name=memory_gib,json=memoryGib,proto3" json:"memory_gib,omitempty"`
	Gpus            int32                  `protobuf:"varint,15,opt,name=gpus,proto3" json:"gpus,omitempty"`
	Nics            []*CreateVMRequest_NIC `protobuf:"bytes,19,rep,name=nics,proto3" json:"nics,omitempty"`
	// ignored if any nics are provided
	SecurityGroupIds []string                     `protobuf:"bytes,20,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	StorageDiskIds   []string                     `protobuf:"bytes,21,rep,name=storage_disk_ids,json=storageDiskIds,proto3" json:"storage_disk_ids,omitempty"`
	Metadata         map[string]string            `protobuf:"bytes,22,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Topology         *CreateVMRequest_CpuTopology `protobuf:"bytes,23,opt,name=topology,proto3" json:"topology,omitempty"`
	ValidateOnly     bool                         `protobuf:"varint,24,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	// Types that are valid to be assigned to Expiration:
	//
	//	*CreateVMRequest_ExpireTime
	//	*CreateVMRequest_Ttl
	Expiration     isCreateVMRequest_Expiration `protobuf_oneof:"expiration"`
	CommitmentTerm compute.CommitmentTerm       `protobuf:"varint,27,opt,name=commitment_term,json=commitmentTerm,proto3,enum=org.cudo.compute.v1.CommitmentTerm" json:"commitment_term,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateVMRequest) Reset() {
	*x = CreateVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMRequest) ProtoMessage() {}

func (x *CreateVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMRequest.ProtoReflect.Descriptor instead.
func (*CreateVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVMRequest) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *CreateVMRequest) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

func (x *CreateVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateVMRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *CreateVMRequest) GetStartScript() string {
	if x != nil {
		return x.StartScript
	}
	return ""
}

func (x *CreateVMRequest) GetSshKeySource() SshKeySource {
	if x != nil {
		return x.SshKeySource
	}
	return SshKeySource_SSH_KEY_SOURCE_UNKNOWN
}

func (x *CreateVMRequest) GetCustomSshKeys() []string {
	if x != nil {
		return x.CustomSshKeys
	}
	return nil
}

func (x *CreateVMRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateVMRequest) GetBootDisk() *Disk {
	if x != nil {
		return x.BootDisk
	}
	return nil
}

func (x *CreateVMRequest) GetBootDiskImageId() string {
	if x != nil {
		return x.BootDiskImageId
	}
	return ""
}

func (x *CreateVMRequest) GetVcpus() int32 {
	if x != nil {
		return x.Vcpus
	}
	return 0
}

func (x *CreateVMRequest) GetMemoryGib() int32 {
	if x != nil {
		return x.MemoryGib
	}
	return 0
}

func (x *CreateVMRequest) GetGpus() int32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *CreateVMRequest) GetNics() []*CreateVMRequest_NIC {
	if x != nil {
		return x.Nics
	}
	return nil
}

func (x *CreateVMRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *CreateVMRequest) GetStorageDiskIds() []string {
	if x != nil {
		return x.StorageDiskIds
	}
	return nil
}

func (x *CreateVMRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateVMRequest) GetTopology() *CreateVMRequest_CpuTopology {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *CreateVMRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

func (x *CreateVMRequest) GetExpiration() isCreateVMRequest_Expiration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *CreateVMRequest) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiration.(*CreateVMRequest_ExpireTime); ok {
			return x.ExpireTime
		}
	}
	return nil
}

func (x *CreateVMRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		if x, ok := x.Expiration.(*CreateVMRequest_Ttl); ok {
			return x.Ttl
		}
	}
	return nil
}

func (x *CreateVMRequest) GetCommitmentTerm() compute.CommitmentTerm {
	if x != nil {
		return x.CommitmentTerm
	}
	return compute.CommitmentTerm(0)
}

type isCreateVMRequest_Expiration interface {
	isCreateVMRequest_Expiration()
}

type CreateVMRequest_ExpireTime struct {
	ExpireTime *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=expire_time,json=expireTime,proto3,oneof"`
}

type CreateVMRequest_Ttl struct {
	Ttl *durationpb.Duration `protobuf:"bytes,26,opt,name=ttl,proto3,oneof"`
}

func (*CreateVMRequest_ExpireTime) isCreateVMRequest_Expiration() {}

func (*CreateVMRequest_Ttl) isCreateVMRequest_Expiration() {}

type CreateVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Vm            *VM                    `protobuf:"bytes,2,opt,name=vm,proto3" json:"vm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMResponse) Reset() {
	*x = CreateVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMResponse) ProtoMessage() {}

func (x *CreateVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMResponse.ProtoReflect.Descriptor instead.
func (*CreateVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVMResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVMResponse) GetVm() *VM {
	if x != nil {
		return x.Vm
	}
	return nil
}

type ListVMsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	NetworkId     string                 `protobuf:"bytes,2,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMsRequest) Reset() {
	*x = ListVMsRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMsRequest) ProtoMessage() {}

func (x *ListVMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMsRequest.ProtoReflect.Descriptor instead.
func (*ListVMsRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{2}
}

func (x *ListVMsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListVMsRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type ListVMsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VMs           []*VM                  `protobuf:"bytes,1,rep,name=VMs,proto3" json:"VMs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMsResponse) Reset() {
	*x = ListVMsResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMsResponse) ProtoMessage() {}

func (x *ListVMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMsResponse.ProtoReflect.Descriptor instead.
func (*ListVMsResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{3}
}

func (x *ListVMsResponse) GetVMs() []*VM {
	if x != nil {
		return x.VMs
	}
	return nil
}

type ResizeVMDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DiskId        string                 `protobuf:"bytes,3,opt,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty"`
	SizeGib       int32                  `protobuf:"varint,4,opt,name=size_gib,json=sizeGib,proto3" json:"size_gib,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizeVMDiskRequest) Reset() {
	*x = ResizeVMDiskRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizeVMDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeVMDiskRequest) ProtoMessage() {}

func (x *ResizeVMDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeVMDiskRequest.ProtoReflect.Descriptor instead.
func (*ResizeVMDiskRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{4}
}

func (x *ResizeVMDiskRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ResizeVMDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResizeVMDiskRequest) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *ResizeVMDiskRequest) GetSizeGib() int32 {
	if x != nil {
		return x.SizeGib
	}
	return 0
}

type ResizeVMDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizeVMDiskResponse) Reset() {
	*x = ResizeVMDiskResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizeVMDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeVMDiskResponse) ProtoMessage() {}

func (x *ResizeVMDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeVMDiskResponse.ProtoReflect.Descriptor instead.
func (*ResizeVMDiskResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{5}
}

type ResizeVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Vcpus         uint32                 `protobuf:"varint,3,opt,name=vcpus,proto3" json:"vcpus,omitempty"`
	MemoryGib     uint32                 `protobuf:"varint,4,opt,name=memory_gib,json=memoryGib,proto3" json:"memory_gib,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizeVMRequest) Reset() {
	*x = ResizeVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizeVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeVMRequest) ProtoMessage() {}

func (x *ResizeVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeVMRequest.ProtoReflect.Descriptor instead.
func (*ResizeVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{6}
}

func (x *ResizeVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ResizeVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResizeVMRequest) GetVcpus() uint32 {
	if x != nil {
		return x.Vcpus
	}
	return 0
}

func (x *ResizeVMRequest) GetMemoryGib() uint32 {
	if x != nil {
		return x.MemoryGib
	}
	return 0
}

type ResizeVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vm            *VM                    `protobuf:"bytes,1,opt,name=vm,proto3" json:"vm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizeVMResponse) Reset() {
	*x = ResizeVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizeVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeVMResponse) ProtoMessage() {}

func (x *ResizeVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeVMResponse.ProtoReflect.Descriptor instead.
func (*ResizeVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{7}
}

func (x *ResizeVMResponse) GetVm() *VM {
	if x != nil {
		return x.Vm
	}
	return nil
}

type AttachStorageDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	VmId          string                 `protobuf:"bytes,3,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachStorageDiskRequest) Reset() {
	*x = AttachStorageDiskRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachStorageDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachStorageDiskRequest) ProtoMessage() {}

func (x *AttachStorageDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachStorageDiskRequest.ProtoReflect.Descriptor instead.
func (*AttachStorageDiskRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{8}
}

func (x *AttachStorageDiskRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AttachStorageDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachStorageDiskRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

type AttachStorageDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachStorageDiskResponse) Reset() {
	*x = AttachStorageDiskResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachStorageDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachStorageDiskResponse) ProtoMessage() {}

func (x *AttachStorageDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachStorageDiskResponse.ProtoReflect.Descriptor instead.
func (*AttachStorageDiskResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{9}
}

type DetachStorageDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachStorageDiskRequest) Reset() {
	*x = DetachStorageDiskRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachStorageDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachStorageDiskRequest) ProtoMessage() {}

func (x *DetachStorageDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachStorageDiskRequest.ProtoReflect.Descriptor instead.
func (*DetachStorageDiskRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{10}
}

func (x *DetachStorageDiskRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DetachStorageDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetachStorageDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachStorageDiskResponse) Reset() {
	*x = DetachStorageDiskResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachStorageDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachStorageDiskResponse) ProtoMessage() {}

func (x *DetachStorageDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachStorageDiskResponse.ProtoReflect.Descriptor instead.
func (*DetachStorageDiskResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{11}
}

type StartVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMRequest) Reset() {
	*x = StartVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMRequest) ProtoMessage() {}

func (x *StartVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMRequest.ProtoReflect.Descriptor instead.
func (*StartVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{12}
}

func (x *StartVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *StartVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StartVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMResponse) Reset() {
	*x = StartVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMResponse) ProtoMessage() {}

func (x *StartVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMResponse.ProtoReflect.Descriptor instead.
func (*StartVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{13}
}

type StopVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVMRequest) Reset() {
	*x = StopVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVMRequest) ProtoMessage() {}

func (x *StopVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVMRequest.ProtoReflect.Descriptor instead.
func (*StopVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{14}
}

func (x *StopVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *StopVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVMResponse) Reset() {
	*x = StopVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVMResponse) ProtoMessage() {}

func (x *StopVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVMResponse.ProtoReflect.Descriptor instead.
func (*StopVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{15}
}

type TerminateVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateVMRequest) Reset() {
	*x = TerminateVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateVMRequest) ProtoMessage() {}

func (x *TerminateVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateVMRequest.ProtoReflect.Descriptor instead.
func (*TerminateVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{16}
}

func (x *TerminateVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *TerminateVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TerminateVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateVMResponse) Reset() {
	*x = TerminateVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateVMResponse) ProtoMessage() {}

func (x *TerminateVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateVMResponse.ProtoReflect.Descriptor instead.
func (*TerminateVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{17}
}

type RebootVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootVMRequest) Reset() {
	*x = RebootVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootVMRequest) ProtoMessage() {}

func (x *RebootVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootVMRequest.ProtoReflect.Descriptor instead.
func (*RebootVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{18}
}

func (x *RebootVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RebootVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RebootVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootVMResponse) Reset() {
	*x = RebootVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootVMResponse) ProtoMessage() {}

func (x *RebootVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootVMResponse.ProtoReflect.Descriptor instead.
func (*RebootVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{19}
}

type GetVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMRequest) Reset() {
	*x = GetVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMRequest) ProtoMessage() {}

func (x *GetVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMRequest.ProtoReflect.Descriptor instead.
func (*GetVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{20}
}

func (x *GetVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVMResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	VM                  *VM                    `protobuf:"bytes,1,opt,name=VM,proto3" json:"VM,omitempty"`
	VcpuPriceHr         *decimal.Decimal       `protobuf:"bytes,2,opt,name=vcpu_price_hr,json=vcpuPriceHr,proto3" json:"vcpu_price_hr,omitempty"`
	TotalVcpuPriceHr    *decimal.Decimal       `protobuf:"bytes,3,opt,name=total_vcpu_price_hr,json=totalVcpuPriceHr,proto3" json:"total_vcpu_price_hr,omitempty"`
	MemoryGibPriceHr    *decimal.Decimal       `protobuf:"bytes,4,opt,name=memory_gib_price_hr,json=memoryGibPriceHr,proto3" json:"memory_gib_price_hr,omitempty"`
	TotalMemoryPriceHr  *decimal.Decimal       `protobuf:"bytes,5,opt,name=total_memory_price_hr,json=totalMemoryPriceHr,proto3" json:"total_memory_price_hr,omitempty"`
	GpuPriceHr          *decimal.Decimal       `protobuf:"bytes,6,opt,name=gpu_price_hr,json=gpuPriceHr,proto3" json:"gpu_price_hr,omitempty"`
	TotalGpuPriceHr     *decimal.Decimal       `protobuf:"bytes,7,opt,name=total_gpu_price_hr,json=totalGpuPriceHr,proto3" json:"total_gpu_price_hr,omitempty"`
	StorageGibPriceHr   *decimal.Decimal       `protobuf:"bytes,8,opt,name=storage_gib_price_hr,json=storageGibPriceHr,proto3" json:"storage_gib_price_hr,omitempty"`
	TotalStoragePriceHr *decimal.Decimal       `protobuf:"bytes,9,opt,name=total_storage_price_hr,json=totalStoragePriceHr,proto3" json:"total_storage_price_hr,omitempty"`
	Ipv4PriceHr         *decimal.Decimal       `protobuf:"bytes,10,opt,name=ipv4_price_hr,json=ipv4PriceHr,proto3" json:"ipv4_price_hr,omitempty"`
	TotalPriceHr        *decimal.Decimal       `protobuf:"bytes,12,opt,name=total_price_hr,json=totalPriceHr,proto3" json:"total_price_hr,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetVMResponse) Reset() {
	*x = GetVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMResponse) ProtoMessage() {}

func (x *GetVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMResponse.ProtoReflect.Descriptor instead.
func (*GetVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{21}
}

func (x *GetVMResponse) GetVM() *VM {
	if x != nil {
		return x.VM
	}
	return nil
}

func (x *GetVMResponse) GetVcpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.VcpuPriceHr
	}
	return nil
}

func (x *GetVMResponse) GetTotalVcpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalVcpuPriceHr
	}
	return nil
}

func (x *GetVMResponse) GetMemoryGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.MemoryGibPriceHr
	}
	return nil
}

func (x *GetVMResponse) GetTotalMemoryPriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalMemoryPriceHr
	}
	return nil
}

func (x *GetVMResponse) GetGpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.GpuPriceHr
	}
	return nil
}

func (x *GetVMResponse) GetTotalGpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalGpuPriceHr
	}
	return nil
}

func (x *GetVMResponse) GetStorageGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.StorageGibPriceHr
	}
	return nil
}

func (x *GetVMResponse) GetTotalStoragePriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalStoragePriceHr
	}
	return nil
}

func (x *GetVMResponse) GetIpv4PriceHr() *decimal.Decimal {
	if x != nil {
		return x.Ipv4PriceHr
	}
	return nil
}

func (x *GetVMResponse) GetTotalPriceHr() *decimal.Decimal {
	if x != nil {
		return x.TotalPriceHr
	}
	return nil
}

type CountVMsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountVMsRequest) Reset() {
	*x = CountVMsRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountVMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountVMsRequest) ProtoMessage() {}

func (x *CountVMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountVMsRequest.ProtoReflect.Descriptor instead.
func (*CountVMsRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{22}
}

func (x *CountVMsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type CountVMsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountVMsResponse) Reset() {
	*x = CountVMsResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountVMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountVMsResponse) ProtoMessage() {}

func (x *CountVMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountVMsResponse.ProtoReflect.Descriptor instead.
func (*CountVMsResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{23}
}

func (x *CountVMsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MonitorVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorVMRequest) Reset() {
	*x = MonitorVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorVMRequest) ProtoMessage() {}

func (x *MonitorVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorVMRequest.ProtoReflect.Descriptor instead.
func (*MonitorVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{24}
}

func (x *MonitorVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *MonitorVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MonitorVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*VMMonitoringItem    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorVMResponse) Reset() {
	*x = MonitorVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorVMResponse) ProtoMessage() {}

func (x *MonitorVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorVMResponse.ProtoReflect.Descriptor instead.
func (*MonitorVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{25}
}

func (x *MonitorVMResponse) GetItems() []*VMMonitoringItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConnectVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ConnectionId  string                 `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectVMRequest) Reset() {
	*x = ConnectVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectVMRequest) ProtoMessage() {}

func (x *ConnectVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectVMRequest.ProtoReflect.Descriptor instead.
func (*ConnectVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{26}
}

func (x *ConnectVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ConnectVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectVMRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type ConnectVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectUrl    string                 `protobuf:"bytes,1,opt,name=connect_url,json=connectUrl,proto3" json:"connect_url,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectVMResponse) Reset() {
	*x = ConnectVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectVMResponse) ProtoMessage() {}

func (x *ConnectVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectVMResponse.ProtoReflect.Descriptor instead.
func (*ConnectVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{27}
}

func (x *ConnectVMResponse) GetConnectUrl() string {
	if x != nil {
		return x.ConnectUrl
	}
	return ""
}

func (x *ConnectVMResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListVMMachineTypesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Return custom prices for a specific project.
	ProjectId     string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMMachineTypesRequest) Reset() {
	*x = ListVMMachineTypesRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMMachineTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMMachineTypesRequest) ProtoMessage() {}

func (x *ListVMMachineTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMMachineTypesRequest.ProtoReflect.Descriptor instead.
func (*ListVMMachineTypesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{28}
}

func (x *ListVMMachineTypesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListVMMachineTypesResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	MachineTypes  []*ListVMMachineTypesResponse_VMMachineType `protobuf:"bytes,1,rep,name=machine_types,json=machineTypes,proto3" json:"machine_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMMachineTypesResponse) Reset() {
	*x = ListVMMachineTypesResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMMachineTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMMachineTypesResponse) ProtoMessage() {}

func (x *ListVMMachineTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMMachineTypesResponse.ProtoReflect.Descriptor instead.
func (*ListVMMachineTypesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{29}
}

func (x *ListVMMachineTypesResponse) GetMachineTypes() []*ListVMMachineTypesResponse_VMMachineType {
	if x != nil {
		return x.MachineTypes
	}
	return nil
}

type ListPublicVMImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPublicVMImagesRequest) Reset() {
	*x = ListPublicVMImagesRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublicVMImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicVMImagesRequest) ProtoMessage() {}

func (x *ListPublicVMImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicVMImagesRequest.ProtoReflect.Descriptor instead.
func (*ListPublicVMImagesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{30}
}

type ListPublicVMImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*compute.Image       `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPublicVMImagesResponse) Reset() {
	*x = ListPublicVMImagesResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublicVMImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicVMImagesResponse) ProtoMessage() {}

func (x *ListPublicVMImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicVMImagesResponse.ProtoReflect.Descriptor instead.
func (*ListPublicVMImagesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{31}
}

func (x *ListPublicVMImagesResponse) GetImages() []*compute.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type ListVMDataCentersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMDataCentersRequest) Reset() {
	*x = ListVMDataCentersRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMDataCentersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMDataCentersRequest) ProtoMessage() {}

func (x *ListVMDataCentersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMDataCentersRequest.ProtoReflect.Descriptor instead.
func (*ListVMDataCentersRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{32}
}

type ListVMDataCentersResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	DataCenters   []*ListVMDataCentersResponse_VMDataCenter `protobuf:"bytes,1,rep,name=data_centers,json=dataCenters,proto3" json:"data_centers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMDataCentersResponse) Reset() {
	*x = ListVMDataCentersResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMDataCentersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMDataCentersResponse) ProtoMessage() {}

func (x *ListVMDataCentersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMDataCentersResponse.ProtoReflect.Descriptor instead.
func (*ListVMDataCentersResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{33}
}

func (x *ListVMDataCentersResponse) GetDataCenters() []*ListVMDataCentersResponse_VMDataCenter {
	if x != nil {
		return x.DataCenters
	}
	return nil
}

type ListVMGpuModelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMGpuModelsRequest) Reset() {
	*x = ListVMGpuModelsRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMGpuModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMGpuModelsRequest) ProtoMessage() {}

func (x *ListVMGpuModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMGpuModelsRequest.ProtoReflect.Descriptor instead.
func (*ListVMGpuModelsRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{34}
}

type ListVMGpuModelsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	GpuModels     []*ListVMGpuModelsResponse_GpuModel `protobuf:"bytes,1,rep,name=gpu_models,json=gpuModels,proto3" json:"gpu_models,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMGpuModelsResponse) Reset() {
	*x = ListVMGpuModelsResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMGpuModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMGpuModelsResponse) ProtoMessage() {}

func (x *ListVMGpuModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMGpuModelsResponse.ProtoReflect.Descriptor instead.
func (*ListVMGpuModelsResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{35}
}

func (x *ListVMGpuModelsResponse) GetGpuModels() []*ListVMGpuModelsResponse_GpuModel {
	if x != nil {
		return x.GpuModels
	}
	return nil
}

type CreatePrivateVMImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	VmId          string                 `protobuf:"bytes,2,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrivateVMImageRequest) Reset() {
	*x = CreatePrivateVMImageRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrivateVMImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrivateVMImageRequest) ProtoMessage() {}

func (x *CreatePrivateVMImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrivateVMImageRequest.ProtoReflect.Descriptor instead.
func (*CreatePrivateVMImageRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{36}
}

func (x *CreatePrivateVMImageRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreatePrivateVMImageRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *CreatePrivateVMImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreatePrivateVMImageRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreatePrivateVMImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *PrivateImage          `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrivateVMImageResponse) Reset() {
	*x = CreatePrivateVMImageResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrivateVMImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrivateVMImageResponse) ProtoMessage() {}

func (x *CreatePrivateVMImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrivateVMImageResponse.ProtoReflect.Descriptor instead.
func (*CreatePrivateVMImageResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{37}
}

func (x *CreatePrivateVMImageResponse) GetImage() *PrivateImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type DeletePrivateVMImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePrivateVMImageRequest) Reset() {
	*x = DeletePrivateVMImageRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrivateVMImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrivateVMImageRequest) ProtoMessage() {}

func (x *DeletePrivateVMImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrivateVMImageRequest.ProtoReflect.Descriptor instead.
func (*DeletePrivateVMImageRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{38}
}

func (x *DeletePrivateVMImageRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeletePrivateVMImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePrivateVMImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePrivateVMImageResponse) Reset() {
	*x = DeletePrivateVMImageResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrivateVMImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrivateVMImageResponse) ProtoMessage() {}

func (x *DeletePrivateVMImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrivateVMImageResponse.ProtoReflect.Descriptor instead.
func (*DeletePrivateVMImageResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{39}
}

type ListPrivateVMImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PageNumber    int32                  `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrivateVMImagesRequest) Reset() {
	*x = ListPrivateVMImagesRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrivateVMImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateVMImagesRequest) ProtoMessage() {}

func (x *ListPrivateVMImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateVMImagesRequest.ProtoReflect.Descriptor instead.
func (*ListPrivateVMImagesRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{40}
}

func (x *ListPrivateVMImagesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListPrivateVMImagesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListPrivateVMImagesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetPrivateVMImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrivateVMImageRequest) Reset() {
	*x = GetPrivateVMImageRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrivateVMImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateVMImageRequest) ProtoMessage() {}

func (x *GetPrivateVMImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateVMImageRequest.ProtoReflect.Descriptor instead.
func (*GetPrivateVMImageRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{41}
}

func (x *GetPrivateVMImageRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetPrivateVMImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPrivateVMImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *PrivateImage          `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrivateVMImageResponse) Reset() {
	*x = GetPrivateVMImageResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrivateVMImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateVMImageResponse) ProtoMessage() {}

func (x *GetPrivateVMImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateVMImageResponse.ProtoReflect.Descriptor instead.
func (*GetPrivateVMImageResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{42}
}

func (x *GetPrivateVMImageResponse) GetImage() *PrivateImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type ListPrivateVMImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*PrivateImage        `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrivateVMImagesResponse) Reset() {
	*x = ListPrivateVMImagesResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrivateVMImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateVMImagesResponse) ProtoMessage() {}

func (x *ListPrivateVMImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateVMImagesResponse.ProtoReflect.Descriptor instead.
func (*ListPrivateVMImagesResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{43}
}

func (x *ListPrivateVMImagesResponse) GetImages() []*PrivateImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ListPrivateVMImagesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListPrivateVMImagesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListPrivateVMImagesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdatePrivateVMImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrivateVMImageRequest) Reset() {
	*x = UpdatePrivateVMImageRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrivateVMImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrivateVMImageRequest) ProtoMessage() {}

func (x *UpdatePrivateVMImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrivateVMImageRequest.ProtoReflect.Descriptor instead.
func (*UpdatePrivateVMImageRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{44}
}

func (x *UpdatePrivateVMImageRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdatePrivateVMImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePrivateVMImageRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdatePrivateVMImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrivateVMImageResponse) Reset() {
	*x = UpdatePrivateVMImageResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrivateVMImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrivateVMImageResponse) ProtoMessage() {}

func (x *UpdatePrivateVMImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrivateVMImageResponse.ProtoReflect.Descriptor instead.
func (*UpdatePrivateVMImageResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{45}
}

type ListDisksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PageNumber    int32                  `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	DataCenterId  string                 `protobuf:"bytes,4,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDisksRequest) Reset() {
	*x = ListDisksRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDisksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDisksRequest) ProtoMessage() {}

func (x *ListDisksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDisksRequest.ProtoReflect.Descriptor instead.
func (*ListDisksRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{46}
}

func (x *ListDisksRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListDisksRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListDisksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDisksRequest) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

type ListDisksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disks         []*Disk                `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageNumber    int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDisksResponse) Reset() {
	*x = ListDisksResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDisksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDisksResponse) ProtoMessage() {}

func (x *ListDisksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDisksResponse.ProtoReflect.Descriptor instead.
func (*ListDisksResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{47}
}

func (x *ListDisksResponse) GetDisks() []*Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *ListDisksResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListDisksResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListDisksResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiskRequest) Reset() {
	*x = GetDiskRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiskRequest) ProtoMessage() {}

func (x *GetDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiskRequest.ProtoReflect.Descriptor instead.
func (*GetDiskRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{48}
}

func (x *GetDiskRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disk          *Disk                  `protobuf:"bytes,1,opt,name=disk,proto3" json:"disk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiskResponse) Reset() {
	*x = GetDiskResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiskResponse) ProtoMessage() {}

func (x *GetDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiskResponse.ProtoReflect.Descriptor instead.
func (*GetDiskResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{49}
}

func (x *GetDiskResponse) GetDisk() *Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

type CreateStorageDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DataCenterId  string                 `protobuf:"bytes,2,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	Disk          *Disk                  `protobuf:"bytes,3,opt,name=disk,proto3" json:"disk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStorageDiskRequest) Reset() {
	*x = CreateStorageDiskRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStorageDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageDiskRequest) ProtoMessage() {}

func (x *CreateStorageDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageDiskRequest.ProtoReflect.Descriptor instead.
func (*CreateStorageDiskRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{50}
}

func (x *CreateStorageDiskRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateStorageDiskRequest) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *CreateStorageDiskRequest) GetDisk() *Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

type CreateStorageDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStorageDiskResponse) Reset() {
	*x = CreateStorageDiskResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStorageDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageDiskResponse) ProtoMessage() {}

func (x *CreateStorageDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageDiskResponse.ProtoReflect.Descriptor instead.
func (*CreateStorageDiskResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{51}
}

type DeleteStorageDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStorageDiskRequest) Reset() {
	*x = DeleteStorageDiskRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStorageDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageDiskRequest) ProtoMessage() {}

func (x *DeleteStorageDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageDiskRequest.ProtoReflect.Descriptor instead.
func (*DeleteStorageDiskRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteStorageDiskRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteStorageDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteStorageDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStorageDiskResponse) Reset() {
	*x = DeleteStorageDiskResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStorageDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageDiskResponse) ProtoMessage() {}

func (x *DeleteStorageDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageDiskResponse.ProtoReflect.Descriptor instead.
func (*DeleteStorageDiskResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{53}
}

type AttachSecurityGroupRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProjectId       string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id              string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	SecurityGroupId string                 `protobuf:"bytes,4,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AttachSecurityGroupRequest) Reset() {
	*x = AttachSecurityGroupRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachSecurityGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachSecurityGroupRequest) ProtoMessage() {}

func (x *AttachSecurityGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachSecurityGroupRequest.ProtoReflect.Descriptor instead.
func (*AttachSecurityGroupRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{54}
}

func (x *AttachSecurityGroupRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AttachSecurityGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachSecurityGroupRequest) GetSecurityGroupId() string {
	if x != nil {
		return x.SecurityGroupId
	}
	return ""
}

type AttachSecurityGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachSecurityGroupResponse) Reset() {
	*x = AttachSecurityGroupResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachSecurityGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachSecurityGroupResponse) ProtoMessage() {}

func (x *AttachSecurityGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachSecurityGroupResponse.ProtoReflect.Descriptor instead.
func (*AttachSecurityGroupResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{55}
}

type DetachSecurityGroupRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProjectId       string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id              string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	SecurityGroupId string                 `protobuf:"bytes,4,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DetachSecurityGroupRequest) Reset() {
	*x = DetachSecurityGroupRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachSecurityGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachSecurityGroupRequest) ProtoMessage() {}

func (x *DetachSecurityGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachSecurityGroupRequest.ProtoReflect.Descriptor instead.
func (*DetachSecurityGroupRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{56}
}

func (x *DetachSecurityGroupRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DetachSecurityGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DetachSecurityGroupRequest) GetSecurityGroupId() string {
	if x != nil {
		return x.SecurityGroupId
	}
	return ""
}

type DetachSecurityGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachSecurityGroupResponse) Reset() {
	*x = DetachSecurityGroupResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachSecurityGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachSecurityGroupResponse) ProtoMessage() {}

func (x *DetachSecurityGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachSecurityGroupResponse.ProtoReflect.Descriptor instead.
func (*DetachSecurityGroupResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{57}
}

type UpdateVMMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Merge         bool                   `protobuf:"varint,4,opt,name=merge,proto3" json:"merge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMMetadataRequest) Reset() {
	*x = UpdateVMMetadataRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMMetadataRequest) ProtoMessage() {}

func (x *UpdateVMMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateVMMetadataRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateVMMetadataRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateVMMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVMMetadataRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateVMMetadataRequest) GetMerge() bool {
	if x != nil {
		return x.Merge
	}
	return false
}

type UpdateVMMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      map[string]string      `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMMetadataResponse) Reset() {
	*x = UpdateVMMetadataResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMMetadataResponse) ProtoMessage() {}

func (x *UpdateVMMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateVMMetadataResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateVMMetadataResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateVMExpireTimeRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ProjectId string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Expiration:
	//
	//	*UpdateVMExpireTimeRequest_ExpireTime
	//	*UpdateVMExpireTimeRequest_Ttl
	Expiration    isUpdateVMExpireTimeRequest_Expiration `protobuf_oneof:"expiration"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMExpireTimeRequest) Reset() {
	*x = UpdateVMExpireTimeRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMExpireTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMExpireTimeRequest) ProtoMessage() {}

func (x *UpdateVMExpireTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMExpireTimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateVMExpireTimeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateVMExpireTimeRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateVMExpireTimeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVMExpireTimeRequest) GetExpiration() isUpdateVMExpireTimeRequest_Expiration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *UpdateVMExpireTimeRequest) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Expiration.(*UpdateVMExpireTimeRequest_ExpireTime); ok {
			return x.ExpireTime
		}
	}
	return nil
}

func (x *UpdateVMExpireTimeRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		if x, ok := x.Expiration.(*UpdateVMExpireTimeRequest_Ttl); ok {
			return x.Ttl
		}
	}
	return nil
}

type isUpdateVMExpireTimeRequest_Expiration interface {
	isUpdateVMExpireTimeRequest_Expiration()
}

type UpdateVMExpireTimeRequest_ExpireTime struct {
	ExpireTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expire_time,json=expireTime,proto3,oneof"`
}

type UpdateVMExpireTimeRequest_Ttl struct {
	Ttl *durationpb.Duration `protobuf:"bytes,4,opt,name=ttl,proto3,oneof"`
}

func (*UpdateVMExpireTimeRequest_ExpireTime) isUpdateVMExpireTimeRequest_Expiration() {}

func (*UpdateVMExpireTimeRequest_Ttl) isUpdateVMExpireTimeRequest_Expiration() {}

type UpdateVMExpireTimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExpireTime    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMExpireTimeResponse) Reset() {
	*x = UpdateVMExpireTimeResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMExpireTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMExpireTimeResponse) ProtoMessage() {}

func (x *UpdateVMExpireTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMExpireTimeResponse.ProtoReflect.Descriptor instead.
func (*UpdateVMExpireTimeResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateVMExpireTimeResponse) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

type UpdateVMPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMPasswordRequest) Reset() {
	*x = UpdateVMPasswordRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMPasswordRequest) ProtoMessage() {}

func (x *UpdateVMPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdateVMPasswordRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateVMPasswordRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateVMPasswordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVMPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UpdateVMPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMPasswordResponse) Reset() {
	*x = UpdateVMPasswordResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMPasswordResponse) ProtoMessage() {}

func (x *UpdateVMPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMPasswordResponse.ProtoReflect.Descriptor instead.
func (*UpdateVMPasswordResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{63}
}

type UpdateVMAuthorizedSSHKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	SshKeySource  SshKeySource           `protobuf:"varint,3,opt,name=ssh_key_source,json=sshKeySource,proto3,enum=org.cudo.compute.v1.SshKeySource" json:"ssh_key_source,omitempty"`
	CustomSshKeys []string               `protobuf:"bytes,4,rep,name=custom_ssh_keys,json=customSshKeys,proto3" json:"custom_ssh_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMAuthorizedSSHKeysRequest) Reset() {
	*x = UpdateVMAuthorizedSSHKeysRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMAuthorizedSSHKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMAuthorizedSSHKeysRequest) ProtoMessage() {}

func (x *UpdateVMAuthorizedSSHKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMAuthorizedSSHKeysRequest.ProtoReflect.Descriptor instead.
func (*UpdateVMAuthorizedSSHKeysRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateVMAuthorizedSSHKeysRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateVMAuthorizedSSHKeysRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVMAuthorizedSSHKeysRequest) GetSshKeySource() SshKeySource {
	if x != nil {
		return x.SshKeySource
	}
	return SshKeySource_SSH_KEY_SOURCE_UNKNOWN
}

func (x *UpdateVMAuthorizedSSHKeysRequest) GetCustomSshKeys() []string {
	if x != nil {
		return x.CustomSshKeys
	}
	return nil
}

type UpdateVMAuthorizedSSHKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMAuthorizedSSHKeysResponse) Reset() {
	*x = UpdateVMAuthorizedSSHKeysResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMAuthorizedSSHKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMAuthorizedSSHKeysResponse) ProtoMessage() {}

func (x *UpdateVMAuthorizedSSHKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMAuthorizedSSHKeysResponse.ProtoReflect.Descriptor instead.
func (*UpdateVMAuthorizedSSHKeysResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{65}
}

type CommitVMRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectId      string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id             string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CommitmentTerm compute.CommitmentTerm `protobuf:"varint,3,opt,name=commitment_term,json=commitmentTerm,proto3,enum=org.cudo.compute.v1.CommitmentTerm" json:"commitment_term,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CommitVMRequest) Reset() {
	*x = CommitVMRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitVMRequest) ProtoMessage() {}

func (x *CommitVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitVMRequest.ProtoReflect.Descriptor instead.
func (*CommitVMRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{66}
}

func (x *CommitVMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CommitVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommitVMRequest) GetCommitmentTerm() compute.CommitmentTerm {
	if x != nil {
		return x.CommitmentTerm
	}
	return compute.CommitmentTerm(0)
}

type CommitVMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitVMResponse) Reset() {
	*x = CommitVMResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitVMResponse) ProtoMessage() {}

func (x *CommitVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitVMResponse.ProtoReflect.Descriptor instead.
func (*CommitVMResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{67}
}

type GetVMMachineTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataCenterId  string                 `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineTypeId string                 `protobuf:"bytes,2,opt,name=machine_type_id,json=machineTypeId,proto3" json:"machine_type_id,omitempty"`
	// Return custom prices for a specific project.
	ProjectId     string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMMachineTypeRequest) Reset() {
	*x = GetVMMachineTypeRequest{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMMachineTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMMachineTypeRequest) ProtoMessage() {}

func (x *GetVMMachineTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMMachineTypeRequest.ProtoReflect.Descriptor instead.
func (*GetVMMachineTypeRequest) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{68}
}

func (x *GetVMMachineTypeRequest) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *GetVMMachineTypeRequest) GetMachineTypeId() string {
	if x != nil {
		return x.MachineTypeId
	}
	return ""
}

func (x *GetVMMachineTypeRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetVMMachineTypeResponse struct {
	state                protoimpl.MessageState                       `protogen:"open.v1"`
	DataCenterId         string                                       `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineType          string                                       `protobuf:"bytes,2,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	CpuModel             string                                       `protobuf:"bytes,3,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model,omitempty"`
	GpuModel             string                                       `protobuf:"bytes,4,opt,name=gpu_model,json=gpuModel,proto3" json:"gpu_model,omitempty"`
	GpuModelId           string                                       `protobuf:"bytes,40,opt,name=gpu_model_id,json=gpuModelId,proto3" json:"gpu_model_id,omitempty"`
	MinVcpuPerMemoryGib  float64                                      `protobuf:"fixed64,5,opt,name=min_vcpu_per_memory_gib,json=minVcpuPerMemoryGib,proto3" json:"min_vcpu_per_memory_gib,omitempty"`
	MaxVcpuPerMemoryGib  float64                                      `protobuf:"fixed64,6,opt,name=max_vcpu_per_memory_gib,json=maxVcpuPerMemoryGib,proto3" json:"max_vcpu_per_memory_gib,omitempty"`
	MinVcpuPerGpu        float64                                      `protobuf:"fixed64,7,opt,name=min_vcpu_per_gpu,json=minVcpuPerGpu,proto3" json:"min_vcpu_per_gpu,omitempty"`
	MaxVcpuPerGpu        float64                                      `protobuf:"fixed64,8,opt,name=max_vcpu_per_gpu,json=maxVcpuPerGpu,proto3" json:"max_vcpu_per_gpu,omitempty"`
	VcpuPriceHr          *decimal.Decimal                             `protobuf:"bytes,9,opt,name=vcpu_price_hr,json=vcpuPriceHr,proto3" json:"vcpu_price_hr,omitempty"`
	MemoryGibPriceHr     *decimal.Decimal                             `protobuf:"bytes,10,opt,name=memory_gib_price_hr,json=memoryGibPriceHr,proto3" json:"memory_gib_price_hr,omitempty"`
	GpuPriceHr           *decimal.Decimal                             `protobuf:"bytes,11,opt,name=gpu_price_hr,json=gpuPriceHr,proto3" json:"gpu_price_hr,omitempty"`
	MinStorageGibPriceHr *decimal.Decimal                             `protobuf:"bytes,12,opt,name=min_storage_gib_price_hr,json=minStorageGibPriceHr,proto3" json:"min_storage_gib_price_hr,omitempty"`
	Ipv4PriceHr          *decimal.Decimal                             `protobuf:"bytes,13,opt,name=ipv4_price_hr,json=ipv4PriceHr,proto3" json:"ipv4_price_hr,omitempty"`
	RenewableEnergy      bool                                         `protobuf:"varint,14,opt,name=renewable_energy,json=renewableEnergy,proto3" json:"renewable_energy,omitempty"`
	MaxVcpuFree          int32                                        `protobuf:"varint,15,opt,name=max_vcpu_free,json=maxVcpuFree,proto3" json:"max_vcpu_free,omitempty"`
	TotalVcpuFree        int32                                        `protobuf:"varint,16,opt,name=total_vcpu_free,json=totalVcpuFree,proto3" json:"total_vcpu_free,omitempty"`
	MaxMemoryGibFree     int32                                        `protobuf:"varint,17,opt,name=max_memory_gib_free,json=maxMemoryGibFree,proto3" json:"max_memory_gib_free,omitempty"`
	TotalMemoryGibFree   int32                                        `protobuf:"varint,18,opt,name=total_memory_gib_free,json=totalMemoryGibFree,proto3" json:"total_memory_gib_free,omitempty"`
	MaxGpuFree           int32                                        `protobuf:"varint,19,opt,name=max_gpu_free,json=maxGpuFree,proto3" json:"max_gpu_free,omitempty"`
	TotalGpuFree         int32                                        `protobuf:"varint,20,opt,name=total_gpu_free,json=totalGpuFree,proto3" json:"total_gpu_free,omitempty"`
	MaxStorageGibFree    int32                                        `protobuf:"varint,21,opt,name=max_storage_gib_free,json=maxStorageGibFree,proto3" json:"max_storage_gib_free,omitempty"`
	TotalStorageGibFree  int32                                        `protobuf:"varint,22,opt,name=total_storage_gib_free,json=totalStorageGibFree,proto3" json:"total_storage_gib_free,omitempty"`
	MinVcpu              float64                                      `protobuf:"fixed64,23,opt,name=min_vcpu,json=minVcpu,proto3" json:"min_vcpu,omitempty"`
	MinMemoryGib         float64                                      `protobuf:"fixed64,24,opt,name=min_memory_gib,json=minMemoryGib,proto3" json:"min_memory_gib,omitempty"`
	Prices               []*GetVMMachineTypeResponse_MachineTypePrice `protobuf:"bytes,25,rep,name=prices,proto3" json:"prices,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetVMMachineTypeResponse) Reset() {
	*x = GetVMMachineTypeResponse{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMMachineTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMMachineTypeResponse) ProtoMessage() {}

func (x *GetVMMachineTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMMachineTypeResponse.ProtoReflect.Descriptor instead.
func (*GetVMMachineTypeResponse) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{69}
}

func (x *GetVMMachineTypeResponse) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *GetVMMachineTypeResponse) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

func (x *GetVMMachineTypeResponse) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *GetVMMachineTypeResponse) GetGpuModel() string {
	if x != nil {
		return x.GpuModel
	}
	return ""
}

func (x *GetVMMachineTypeResponse) GetGpuModelId() string {
	if x != nil {
		return x.GpuModelId
	}
	return ""
}

func (x *GetVMMachineTypeResponse) GetMinVcpuPerMemoryGib() float64 {
	if x != nil {
		return x.MinVcpuPerMemoryGib
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMaxVcpuPerMemoryGib() float64 {
	if x != nil {
		return x.MaxVcpuPerMemoryGib
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMinVcpuPerGpu() float64 {
	if x != nil {
		return x.MinVcpuPerGpu
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMaxVcpuPerGpu() float64 {
	if x != nil {
		return x.MaxVcpuPerGpu
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetVcpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.VcpuPriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse) GetMemoryGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.MemoryGibPriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse) GetGpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.GpuPriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse) GetMinStorageGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.MinStorageGibPriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse) GetIpv4PriceHr() *decimal.Decimal {
	if x != nil {
		return x.Ipv4PriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse) GetRenewableEnergy() bool {
	if x != nil {
		return x.RenewableEnergy
	}
	return false
}

func (x *GetVMMachineTypeResponse) GetMaxVcpuFree() int32 {
	if x != nil {
		return x.MaxVcpuFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetTotalVcpuFree() int32 {
	if x != nil {
		return x.TotalVcpuFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMaxMemoryGibFree() int32 {
	if x != nil {
		return x.MaxMemoryGibFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetTotalMemoryGibFree() int32 {
	if x != nil {
		return x.TotalMemoryGibFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMaxGpuFree() int32 {
	if x != nil {
		return x.MaxGpuFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetTotalGpuFree() int32 {
	if x != nil {
		return x.TotalGpuFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMaxStorageGibFree() int32 {
	if x != nil {
		return x.MaxStorageGibFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetTotalStorageGibFree() int32 {
	if x != nil {
		return x.TotalStorageGibFree
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMinVcpu() float64 {
	if x != nil {
		return x.MinVcpu
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetMinMemoryGib() float64 {
	if x != nil {
		return x.MinMemoryGib
	}
	return 0
}

func (x *GetVMMachineTypeResponse) GetPrices() []*GetVMMachineTypeResponse_MachineTypePrice {
	if x != nil {
		return x.Prices
	}
	return nil
}

type CreateVMRequest_NIC struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NetworkId        string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	AssignPublicIp   bool                   `protobuf:"varint,2,opt,name=assign_public_ip,json=assignPublicIp,proto3" json:"assign_public_ip,omitempty"`
	SecurityGroupIds []string               `protobuf:"bytes,3,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateVMRequest_NIC) Reset() {
	*x = CreateVMRequest_NIC{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMRequest_NIC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMRequest_NIC) ProtoMessage() {}

func (x *CreateVMRequest_NIC) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMRequest_NIC.ProtoReflect.Descriptor instead.
func (*CreateVMRequest_NIC) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreateVMRequest_NIC) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateVMRequest_NIC) GetAssignPublicIp() bool {
	if x != nil {
		return x.AssignPublicIp
	}
	return false
}

func (x *CreateVMRequest_NIC) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

type CreateVMRequest_CpuTopology struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sockets       int32                  `protobuf:"varint,1,opt,name=sockets,proto3" json:"sockets,omitempty"`
	Cores         int32                  `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	Threads       int32                  `protobuf:"varint,3,opt,name=threads,proto3" json:"threads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMRequest_CpuTopology) Reset() {
	*x = CreateVMRequest_CpuTopology{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMRequest_CpuTopology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMRequest_CpuTopology) ProtoMessage() {}

func (x *CreateVMRequest_CpuTopology) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMRequest_CpuTopology.ProtoReflect.Descriptor instead.
func (*CreateVMRequest_CpuTopology) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CreateVMRequest_CpuTopology) GetSockets() int32 {
	if x != nil {
		return x.Sockets
	}
	return 0
}

func (x *CreateVMRequest_CpuTopology) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CreateVMRequest_CpuTopology) GetThreads() int32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

type ListVMMachineTypesResponse_VMMachineType struct {
	state                protoimpl.MessageState                                       `protogen:"open.v1"`
	DataCenterId         string                                                       `protobuf:"bytes,1,opt,name=data_center_id,json=dataCenterId,proto3" json:"data_center_id,omitempty"`
	MachineType          string                                                       `protobuf:"bytes,2,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	CpuModel             string                                                       `protobuf:"bytes,3,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model,omitempty"`
	GpuModel             string                                                       `protobuf:"bytes,4,opt,name=gpu_model,json=gpuModel,proto3" json:"gpu_model,omitempty"`
	GpuModelId           string                                                       `protobuf:"bytes,40,opt,name=gpu_model_id,json=gpuModelId,proto3" json:"gpu_model_id,omitempty"`
	MinVcpuPerMemoryGib  float64                                                      `protobuf:"fixed64,5,opt,name=min_vcpu_per_memory_gib,json=minVcpuPerMemoryGib,proto3" json:"min_vcpu_per_memory_gib,omitempty"`
	MaxVcpuPerMemoryGib  float64                                                      `protobuf:"fixed64,6,opt,name=max_vcpu_per_memory_gib,json=maxVcpuPerMemoryGib,proto3" json:"max_vcpu_per_memory_gib,omitempty"`
	MinVcpuPerGpu        float64                                                      `protobuf:"fixed64,7,opt,name=min_vcpu_per_gpu,json=minVcpuPerGpu,proto3" json:"min_vcpu_per_gpu,omitempty"`
	MaxVcpuPerGpu        float64                                                      `protobuf:"fixed64,8,opt,name=max_vcpu_per_gpu,json=maxVcpuPerGpu,proto3" json:"max_vcpu_per_gpu,omitempty"`
	VcpuPriceHr          *decimal.Decimal                                             `protobuf:"bytes,9,opt,name=vcpu_price_hr,json=vcpuPriceHr,proto3" json:"vcpu_price_hr,omitempty"`
	MemoryGibPriceHr     *decimal.Decimal                                             `protobuf:"bytes,10,opt,name=memory_gib_price_hr,json=memoryGibPriceHr,proto3" json:"memory_gib_price_hr,omitempty"`
	GpuPriceHr           *decimal.Decimal                                             `protobuf:"bytes,11,opt,name=gpu_price_hr,json=gpuPriceHr,proto3" json:"gpu_price_hr,omitempty"`
	MinStorageGibPriceHr *decimal.Decimal                                             `protobuf:"bytes,12,opt,name=min_storage_gib_price_hr,json=minStorageGibPriceHr,proto3" json:"min_storage_gib_price_hr,omitempty"`
	Ipv4PriceHr          *decimal.Decimal                                             `protobuf:"bytes,13,opt,name=ipv4_price_hr,json=ipv4PriceHr,proto3" json:"ipv4_price_hr,omitempty"`
	RenewableEnergy      bool                                                         `protobuf:"varint,14,opt,name=renewable_energy,json=renewableEnergy,proto3" json:"renewable_energy,omitempty"`
	MaxVcpuFree          int32                                                        `protobuf:"varint,15,opt,name=max_vcpu_free,json=maxVcpuFree,proto3" json:"max_vcpu_free,omitempty"`
	TotalVcpuFree        int32                                                        `protobuf:"varint,16,opt,name=total_vcpu_free,json=totalVcpuFree,proto3" json:"total_vcpu_free,omitempty"`
	MaxMemoryGibFree     int32                                                        `protobuf:"varint,17,opt,name=max_memory_gib_free,json=maxMemoryGibFree,proto3" json:"max_memory_gib_free,omitempty"`
	TotalMemoryGibFree   int32                                                        `protobuf:"varint,18,opt,name=total_memory_gib_free,json=totalMemoryGibFree,proto3" json:"total_memory_gib_free,omitempty"`
	MaxGpuFree           int32                                                        `protobuf:"varint,19,opt,name=max_gpu_free,json=maxGpuFree,proto3" json:"max_gpu_free,omitempty"`
	TotalGpuFree         int32                                                        `protobuf:"varint,20,opt,name=total_gpu_free,json=totalGpuFree,proto3" json:"total_gpu_free,omitempty"`
	MaxStorageGibFree    int32                                                        `protobuf:"varint,21,opt,name=max_storage_gib_free,json=maxStorageGibFree,proto3" json:"max_storage_gib_free,omitempty"`
	TotalStorageGibFree  int32                                                        `protobuf:"varint,22,opt,name=total_storage_gib_free,json=totalStorageGibFree,proto3" json:"total_storage_gib_free,omitempty"`
	MinVcpu              float64                                                      `protobuf:"fixed64,23,opt,name=min_vcpu,json=minVcpu,proto3" json:"min_vcpu,omitempty"`
	MinMemoryGib         float64                                                      `protobuf:"fixed64,24,opt,name=min_memory_gib,json=minMemoryGib,proto3" json:"min_memory_gib,omitempty"`
	Prices               []*ListVMMachineTypesResponse_VMMachineType_MachineTypePrice `protobuf:"bytes,25,rep,name=prices,proto3" json:"prices,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListVMMachineTypesResponse_VMMachineType) Reset() {
	*x = ListVMMachineTypesResponse_VMMachineType{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMMachineTypesResponse_VMMachineType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMMachineTypesResponse_VMMachineType) ProtoMessage() {}

func (x *ListVMMachineTypesResponse_VMMachineType) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMMachineTypesResponse_VMMachineType.ProtoReflect.Descriptor instead.
func (*ListVMMachineTypesResponse_VMMachineType) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{29, 0}
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetDataCenterId() string {
	if x != nil {
		return x.DataCenterId
	}
	return ""
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetGpuModel() string {
	if x != nil {
		return x.GpuModel
	}
	return ""
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetGpuModelId() string {
	if x != nil {
		return x.GpuModelId
	}
	return ""
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMinVcpuPerMemoryGib() float64 {
	if x != nil {
		return x.MinVcpuPerMemoryGib
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMaxVcpuPerMemoryGib() float64 {
	if x != nil {
		return x.MaxVcpuPerMemoryGib
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMinVcpuPerGpu() float64 {
	if x != nil {
		return x.MinVcpuPerGpu
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMaxVcpuPerGpu() float64 {
	if x != nil {
		return x.MaxVcpuPerGpu
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetVcpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.VcpuPriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMemoryGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.MemoryGibPriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetGpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.GpuPriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMinStorageGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.MinStorageGibPriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetIpv4PriceHr() *decimal.Decimal {
	if x != nil {
		return x.Ipv4PriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetRenewableEnergy() bool {
	if x != nil {
		return x.RenewableEnergy
	}
	return false
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMaxVcpuFree() int32 {
	if x != nil {
		return x.MaxVcpuFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetTotalVcpuFree() int32 {
	if x != nil {
		return x.TotalVcpuFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMaxMemoryGibFree() int32 {
	if x != nil {
		return x.MaxMemoryGibFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetTotalMemoryGibFree() int32 {
	if x != nil {
		return x.TotalMemoryGibFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMaxGpuFree() int32 {
	if x != nil {
		return x.MaxGpuFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetTotalGpuFree() int32 {
	if x != nil {
		return x.TotalGpuFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMaxStorageGibFree() int32 {
	if x != nil {
		return x.MaxStorageGibFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetTotalStorageGibFree() int32 {
	if x != nil {
		return x.TotalStorageGibFree
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMinVcpu() float64 {
	if x != nil {
		return x.MinVcpu
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetMinMemoryGib() float64 {
	if x != nil {
		return x.MinMemoryGib
	}
	return 0
}

func (x *ListVMMachineTypesResponse_VMMachineType) GetPrices() []*ListVMMachineTypesResponse_VMMachineType_MachineTypePrice {
	if x != nil {
		return x.Prices
	}
	return nil
}

type ListVMMachineTypesResponse_VMMachineType_MachineTypePrice struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	VcpuPriceHr      *decimal.Decimal       `protobuf:"bytes,1,opt,name=vcpu_price_hr,json=vcpuPriceHr,proto3" json:"vcpu_price_hr,omitempty"`
	MemoryGibPriceHr *decimal.Decimal       `protobuf:"bytes,2,opt,name=memory_gib_price_hr,json=memoryGibPriceHr,proto3" json:"memory_gib_price_hr,omitempty"`
	GpuPriceHr       *decimal.Decimal       `protobuf:"bytes,3,opt,name=gpu_price_hr,json=gpuPriceHr,proto3" json:"gpu_price_hr,omitempty"`
	CommitmentTerm   compute.CommitmentTerm `protobuf:"varint,4,opt,name=commitment_term,json=commitmentTerm,proto3,enum=org.cudo.compute.v1.CommitmentTerm" json:"commitment_term,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) Reset() {
	*x = ListVMMachineTypesResponse_VMMachineType_MachineTypePrice{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) ProtoMessage() {}

func (x *ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMMachineTypesResponse_VMMachineType_MachineTypePrice.ProtoReflect.Descriptor instead.
func (*ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{29, 0, 0}
}

func (x *ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) GetVcpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.VcpuPriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) GetMemoryGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.MemoryGibPriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) GetGpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.GpuPriceHr
	}
	return nil
}

func (x *ListVMMachineTypesResponse_VMMachineType_MachineTypePrice) GetCommitmentTerm() compute.CommitmentTerm {
	if x != nil {
		return x.CommitmentTerm
	}
	return compute.CommitmentTerm(0)
}

type ListVMDataCentersResponse_VMDataCenter struct {
	state                   protoimpl.MessageState                                       `protogen:"open.v1"`
	Id                      string                                                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SupplierName            string                                                       `protobuf:"bytes,4,opt,name=supplier_name,json=supplierName,proto3" json:"supplier_name,omitempty"`
	RenewableEnergy         bool                                                         `protobuf:"varint,5,opt,name=renewable_energy,json=renewableEnergy,proto3" json:"renewable_energy,omitempty"`
	DiskPoolPricing         []*ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr `protobuf:"bytes,6,rep,name=disk_pool_pricing,json=diskPoolPricing,proto3" json:"disk_pool_pricing,omitempty"`
	NetworkPricing          []*ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr     `protobuf:"bytes,7,rep,name=network_pricing,json=networkPricing,proto3" json:"network_pricing,omitempty"`
	NetworkPriceHr          *decimal.Decimal                                             `protobuf:"bytes,13,opt,name=network_price_hr,json=networkPriceHr,proto3" json:"network_price_hr,omitempty"`
	Ipv4PriceHr             *decimal.Decimal                                             `protobuf:"bytes,8,opt,name=ipv4_price_hr,json=ipv4PriceHr,proto3" json:"ipv4_price_hr,omitempty"`
	Ipv4Free                int32                                                        `protobuf:"varint,9,opt,name=ipv4_free,json=ipv4Free,proto3" json:"ipv4_free,omitempty"`
	S3Endpoint              string                                                       `protobuf:"bytes,10,opt,name=s3_endpoint,json=s3Endpoint,proto3" json:"s3_endpoint,omitempty"`
	Location                *latlng.LatLng                                               `protobuf:"bytes,11,opt,name=location,proto3" json:"location,omitempty"`
	ObjectStorageGibPriceHr *decimal.Decimal                                             `protobuf:"bytes,12,opt,name=object_storage_gib_price_hr,json=objectStorageGibPriceHr,proto3" json:"object_storage_gib_price_hr,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListVMDataCentersResponse_VMDataCenter) Reset() {
	*x = ListVMDataCentersResponse_VMDataCenter{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMDataCentersResponse_VMDataCenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMDataCentersResponse_VMDataCenter) ProtoMessage() {}

func (x *ListVMDataCentersResponse_VMDataCenter) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMDataCentersResponse_VMDataCenter.ProtoReflect.Descriptor instead.
func (*ListVMDataCentersResponse_VMDataCenter) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{33, 0}
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetSupplierName() string {
	if x != nil {
		return x.SupplierName
	}
	return ""
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetRenewableEnergy() bool {
	if x != nil {
		return x.RenewableEnergy
	}
	return false
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetDiskPoolPricing() []*ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr {
	if x != nil {
		return x.DiskPoolPricing
	}
	return nil
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetNetworkPricing() []*ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr {
	if x != nil {
		return x.NetworkPricing
	}
	return nil
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetNetworkPriceHr() *decimal.Decimal {
	if x != nil {
		return x.NetworkPriceHr
	}
	return nil
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetIpv4PriceHr() *decimal.Decimal {
	if x != nil {
		return x.Ipv4PriceHr
	}
	return nil
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetIpv4Free() int32 {
	if x != nil {
		return x.Ipv4Free
	}
	return 0
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetS3Endpoint() string {
	if x != nil {
		return x.S3Endpoint
	}
	return ""
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetLocation() *latlng.LatLng {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ListVMDataCentersResponse_VMDataCenter) GetObjectStorageGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.ObjectStorageGibPriceHr
	}
	return nil
}

type ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr struct {
	state          protoimpl.MessageState                              `protogen:"open.v1"`
	StorageClass   ListVMDataCentersResponse_VMDataCenter_StorageClass `protobuf:"varint,1,opt,name=storage_class,json=storageClass,proto3,enum=org.cudo.compute.v1.ListVMDataCentersResponse_VMDataCenter_StorageClass" json:"storage_class,omitempty"`
	DiskGibPriceHr *decimal.Decimal                                    `protobuf:"bytes,2,opt,name=disk_gib_price_hr,json=diskGibPriceHr,proto3" json:"disk_gib_price_hr,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr) Reset() {
	*x = ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr) ProtoMessage() {}

func (x *ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr.ProtoReflect.Descriptor instead.
func (*ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{33, 0, 0}
}

func (x *ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr) GetStorageClass() ListVMDataCentersResponse_VMDataCenter_StorageClass {
	if x != nil {
		return x.StorageClass
	}
	return ListVMDataCentersResponse_VMDataCenter_STORAGE_CLASS_UNKNOWN
}

func (x *ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr) GetDiskGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.DiskGibPriceHr
	}
	return nil
}

type ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceHr       *decimal.Decimal       `protobuf:"bytes,2,opt,name=price_hr,json=priceHr,proto3" json:"price_hr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr) Reset() {
	*x = ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr) ProtoMessage() {}

func (x *ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr.ProtoReflect.Descriptor instead.
func (*ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{33, 0, 1}
}

func (x *ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr) GetPriceHr() *decimal.Decimal {
	if x != nil {
		return x.PriceHr
	}
	return nil
}

type ListVMGpuModelsResponse_GpuModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VendorName    string                 `protobuf:"bytes,2,opt,name=vendor_name,json=vendorName,proto3" json:"vendor_name,omitempty"`
	ModelName     string                 `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	MemoryGib     int32                  `protobuf:"varint,4,opt,name=memory_gib,json=memoryGib,proto3" json:"memory_gib,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMGpuModelsResponse_GpuModel) Reset() {
	*x = ListVMGpuModelsResponse_GpuModel{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMGpuModelsResponse_GpuModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMGpuModelsResponse_GpuModel) ProtoMessage() {}

func (x *ListVMGpuModelsResponse_GpuModel) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMGpuModelsResponse_GpuModel.ProtoReflect.Descriptor instead.
func (*ListVMGpuModelsResponse_GpuModel) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{35, 0}
}

func (x *ListVMGpuModelsResponse_GpuModel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListVMGpuModelsResponse_GpuModel) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *ListVMGpuModelsResponse_GpuModel) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *ListVMGpuModelsResponse_GpuModel) GetMemoryGib() int32 {
	if x != nil {
		return x.MemoryGib
	}
	return 0
}

type GetVMMachineTypeResponse_MachineTypePrice struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	VcpuPriceHr      *decimal.Decimal       `protobuf:"bytes,1,opt,name=vcpu_price_hr,json=vcpuPriceHr,proto3" json:"vcpu_price_hr,omitempty"`
	MemoryGibPriceHr *decimal.Decimal       `protobuf:"bytes,2,opt,name=memory_gib_price_hr,json=memoryGibPriceHr,proto3" json:"memory_gib_price_hr,omitempty"`
	GpuPriceHr       *decimal.Decimal       `protobuf:"bytes,3,opt,name=gpu_price_hr,json=gpuPriceHr,proto3" json:"gpu_price_hr,omitempty"`
	CommitmentTerm   compute.CommitmentTerm `protobuf:"varint,4,opt,name=commitment_term,json=commitmentTerm,proto3,enum=org.cudo.compute.v1.CommitmentTerm" json:"commitment_term,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetVMMachineTypeResponse_MachineTypePrice) Reset() {
	*x = GetVMMachineTypeResponse_MachineTypePrice{}
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMMachineTypeResponse_MachineTypePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMMachineTypeResponse_MachineTypePrice) ProtoMessage() {}

func (x *GetVMMachineTypeResponse_MachineTypePrice) ProtoReflect() protoreflect.Message {
	mi := &file_svc_compute_vm_vm_svc_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMMachineTypeResponse_MachineTypePrice.ProtoReflect.Descriptor instead.
func (*GetVMMachineTypeResponse_MachineTypePrice) Descriptor() ([]byte, []int) {
	return file_svc_compute_vm_vm_svc_proto_rawDescGZIP(), []int{69, 0}
}

func (x *GetVMMachineTypeResponse_MachineTypePrice) GetVcpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.VcpuPriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse_MachineTypePrice) GetMemoryGibPriceHr() *decimal.Decimal {
	if x != nil {
		return x.MemoryGibPriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse_MachineTypePrice) GetGpuPriceHr() *decimal.Decimal {
	if x != nil {
		return x.GpuPriceHr
	}
	return nil
}

func (x *GetVMMachineTypeResponse_MachineTypePrice) GetCommitmentTerm() compute.CommitmentTerm {
	if x != nil {
		return x.CommitmentTerm
	}
	return compute.CommitmentTerm(0)
}

var File_svc_compute_vm_vm_svc_proto protoreflect.FileDescriptor

const file_svc_compute_vm_vm_svc_proto_rawDesc = "" +
	"\n" +
	"\x1bsvc/compute/vm/vm_svc.proto\x12\x13org.cudo.compute.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x19google/type/decimal.proto\x1a\x18google/type/latlng.proto\x1a$gnostic/openapi/v3/annotations.proto\x1a\x17svc/compute/types.proto\x1a\x17svc/compute/vm/vm.proto\"\xcb\n" +
	"\n" +
	"\x0fCreateVMRequest\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12&\n" +
	"\fmachine_type\x18\x02 \x01(\tB\x03\xe0A\x02R\vmachineType\x12\"\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x18\n" +
	"\x05vm_id\x18\x04 \x01(\tB\x03\xe0A\x02R\x04vmId\x12!\n" +
	"\fstart_script\x18\x05 \x01(\tR\vstartScript\x12G\n" +
	"\x0essh_key_source\x18\x06 \x01(\x0e2!.org.cudo.compute.v1.SshKeySourceR\fsshKeySource\x12&\n" +
	"\x0fcustom_ssh_keys\x18\a \x03(\tR\rcustomSshKeys\x12\x1a\n" +
	"\bpassword\x18\b \x01(\tR\bpassword\x126\n" +
	"\tboot_disk\x18\t \x01(\v2\x19.org.cudo.compute.v1.DiskR\bbootDisk\x120\n" +
	"\x12boot_disk_image_id\x18\n" +
	" \x01(\tB\x03\xe0A\x02R\x0fbootDiskImageId\x12\x19\n" +
	"\x05vcpus\x18\f \x01(\x05B\x03\xe0A\x02R\x05vcpus\x12\"\n" +
	"\n" +
	"memory_gib\x18\r \x01(\x05B\x03\xe0A\x02R\tmemoryGib\x12\x17\n" +
	"\x04gpus\x18\x0f \x01(\x05B\x03\xe0A\x02R\x04gpus\x12<\n" +
	"\x04nics\x18\x13 \x03(\v2(.org.cudo.compute.v1.CreateVMRequest.NICR\x04nics\x12,\n" +
	"\x12security_group_ids\x18\x14 \x03(\tR\x10securityGroupIds\x12(\n" +
	"\x10storage_disk_ids\x18\x15 \x03(\tR\x0estorageDiskIds\x12N\n" +
	"\bmetadata\x18\x16 \x03(\v22.org.cudo.compute.v1.CreateVMRequest.MetadataEntryR\bmetadata\x12L\n" +
	"\btopology\x18\x17 \x01(\v20.org.cudo.compute.v1.CreateVMRequest.CpuTopologyR\btopology\x12#\n" +
	"\rvalidate_only\x18\x18 \x01(\bR\fvalidateOnly\x12=\n" +
	"\vexpire_time\x18\x19 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"expireTime\x12-\n" +
	"\x03ttl\x18\x1a \x01(\v2\x19.google.protobuf.DurationH\x00R\x03ttl\x12L\n" +
	"\x0fcommitment_term\x18\x1b \x01(\x0e2#.org.cudo.compute.v1.CommitmentTermR\x0ecommitmentTerm\x1a|\n" +
	"\x03NIC\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12(\n" +
	"\x10assign_public_ip\x18\x02 \x01(\bR\x0eassignPublicIp\x12,\n" +
	"\x12security_group_ids\x18\x03 \x03(\tR\x10securityGroupIds\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aW\n" +
	"\vCpuTopology\x12\x18\n" +
	"\asockets\x18\x01 \x01(\x05R\asockets\x12\x14\n" +
	"\x05cores\x18\x02 \x01(\x05R\x05cores\x12\x18\n" +
	"\athreads\x18\x03 \x01(\x05R\athreadsB\f\n" +
	"\n" +
	"expiration\"P\n" +
	"\x10CreateVMResponse\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tB\x03\xe0A\x02R\x02id\x12'\n" +
	"\x02vm\x18\x02 \x01(\v2\x17.org.cudo.compute.v1.VMR\x02vm\"N\n" +
	"\x0eListVMsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1d\n" +
	"\n" +
	"network_id\x18\x02 \x01(\tR\tnetworkId\"<\n" +
	"\x0fListVMsResponse\x12)\n" +
	"\x03VMs\x18\x01 \x03(\v2\x17.org.cudo.compute.v1.VMR\x03VMs\"x\n" +
	"\x13ResizeVMDiskRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x17\n" +
	"\adisk_id\x18\x03 \x01(\tR\x06diskId\x12\x19\n" +
	"\bsize_gib\x18\x04 \x01(\x05R\asizeGib\"\x16\n" +
	"\x14ResizeVMDiskResponse\"u\n" +
	"\x0fResizeVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x14\n" +
	"\x05vcpus\x18\x03 \x01(\rR\x05vcpus\x12\x1d\n" +
	"\n" +
	"memory_gib\x18\x04 \x01(\rR\tmemoryGib\"@\n" +
	"\x10ResizeVMResponse\x12,\n" +
	"\x02vm\x18\x01 \x01(\v2\x17.org.cudo.compute.v1.VMB\x03\xe0A\x02R\x02vm\"^\n" +
	"\x18AttachStorageDiskRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x13\n" +
	"\x05vm_id\x18\x03 \x01(\tR\x04vmId\"\x1b\n" +
	"\x19AttachStorageDiskResponse\"I\n" +
	"\x18DetachStorageDiskRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x1b\n" +
	"\x19DetachStorageDiskResponse\"?\n" +
	"\x0eStartVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x11\n" +
	"\x0fStartVMResponse\">\n" +
	"\rStopVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x10\n" +
	"\x0eStopVMResponse\"C\n" +
	"\x12TerminateVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x15\n" +
	"\x13TerminateVMResponse\"@\n" +
	"\x0fRebootVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x12\n" +
	"\x10RebootVMResponse\"=\n" +
	"\fGetVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\xff\x05\n" +
	"\rGetVMResponse\x12,\n" +
	"\x02VM\x18\x01 \x01(\v2\x17.org.cudo.compute.v1.VMB\x03\xe0A\x02R\x02VM\x12=\n" +
	"\rvcpu_price_hr\x18\x02 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vvcpuPriceHr\x12H\n" +
	"\x13total_vcpu_price_hr\x18\x03 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x10totalVcpuPriceHr\x12H\n" +
	"\x13memory_gib_price_hr\x18\x04 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x10memoryGibPriceHr\x12L\n" +
	"\x15total_memory_price_hr\x18\x05 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x12totalMemoryPriceHr\x12;\n" +
	"\fgpu_price_hr\x18\x06 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\n" +
	"gpuPriceHr\x12F\n" +
	"\x12total_gpu_price_hr\x18\a \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x0ftotalGpuPriceHr\x12J\n" +
	"\x14storage_gib_price_hr\x18\b \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x11storageGibPriceHr\x12N\n" +
	"\x16total_storage_price_hr\x18\t \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x13totalStoragePriceHr\x12=\n" +
	"\ripv4_price_hr\x18\n" +
	" \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vipv4PriceHr\x12?\n" +
	"\x0etotal_price_hr\x18\f \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\ftotalPriceHr\"0\n" +
	"\x0fCountVMsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"-\n" +
	"\x10CountVMsResponse\x12\x19\n" +
	"\x05count\x18\x01 \x01(\x05B\x03\xe0A\x02R\x05count\"A\n" +
	"\x10MonitorVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"U\n" +
	"\x11MonitorVMResponse\x12@\n" +
	"\x05items\x18\x01 \x03(\v2%.org.cudo.compute.v1.VMMonitoringItemB\x03\xe0A\x02R\x05items\"f\n" +
	"\x10ConnectVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12#\n" +
	"\rconnection_id\x18\x03 \x01(\tR\fconnectionId\"T\n" +
	"\x11ConnectVMResponse\x12$\n" +
	"\vconnect_url\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"connectUrl\x12\x19\n" +
	"\x05token\x18\x02 \x01(\tB\x03\xe0A\x02R\x05token\"K\n" +
	"\x19ListVMMachineTypesRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tB\x03\xe0A\x01R\tprojectIdJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03\"\x99\x0e\n" +
	"\x1aListVMMachineTypesResponse\x12g\n" +
	"\rmachine_types\x18\x01 \x03(\v2=.org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineTypeB\x03\xe0A\x02R\fmachineTypes\x1a\x91\r\n" +
	"\rVMMachineType\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12&\n" +
	"\fmachine_type\x18\x02 \x01(\tB\x03\xe0A\x02R\vmachineType\x12 \n" +
	"\tcpu_model\x18\x03 \x01(\tB\x03\xe0A\x02R\bcpuModel\x12 \n" +
	"\tgpu_model\x18\x04 \x01(\tB\x03\xe0A\x02R\bgpuModel\x12%\n" +
	"\fgpu_model_id\x18( \x01(\tB\x03\xe0A\x02R\n" +
	"gpuModelId\x129\n" +
	"\x17min_vcpu_per_memory_gib\x18\x05 \x01(\x01B\x03\xe0A\x02R\x13minVcpuPerMemoryGib\x129\n" +
	"\x17max_vcpu_per_memory_gib\x18\x06 \x01(\x01B\x03\xe0A\x02R\x13maxVcpuPerMemoryGib\x12,\n" +
	"\x10min_vcpu_per_gpu\x18\a \x01(\x01B\x03\xe0A\x02R\rminVcpuPerGpu\x12,\n" +
	"\x10max_vcpu_per_gpu\x18\b \x01(\x01B\x03\xe0A\x02R\rmaxVcpuPerGpu\x12=\n" +
	"\rvcpu_price_hr\x18\t \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vvcpuPriceHr\x12H\n" +
	"\x13memory_gib_price_hr\x18\n" +
	" \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x10memoryGibPriceHr\x12;\n" +
	"\fgpu_price_hr\x18\v \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\n" +
	"gpuPriceHr\x12Q\n" +
	"\x18min_storage_gib_price_hr\x18\f \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x14minStorageGibPriceHr\x12=\n" +
	"\ripv4_price_hr\x18\r \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vipv4PriceHr\x12.\n" +
	"\x10renewable_energy\x18\x0e \x01(\bB\x03\xe0A\x02R\x0frenewableEnergy\x12'\n" +
	"\rmax_vcpu_free\x18\x0f \x01(\x05B\x03\xe0A\x02R\vmaxVcpuFree\x12+\n" +
	"\x0ftotal_vcpu_free\x18\x10 \x01(\x05B\x03\xe0A\x02R\rtotalVcpuFree\x122\n" +
	"\x13max_memory_gib_free\x18\x11 \x01(\x05B\x03\xe0A\x02R\x10maxMemoryGibFree\x126\n" +
	"\x15total_memory_gib_free\x18\x12 \x01(\x05B\x03\xe0A\x02R\x12totalMemoryGibFree\x12%\n" +
	"\fmax_gpu_free\x18\x13 \x01(\x05B\x03\xe0A\x02R\n" +
	"maxGpuFree\x12)\n" +
	"\x0etotal_gpu_free\x18\x14 \x01(\x05B\x03\xe0A\x02R\ftotalGpuFree\x124\n" +
	"\x14max_storage_gib_free\x18\x15 \x01(\x05B\x03\xe0A\x02R\x11maxStorageGibFree\x128\n" +
	"\x16total_storage_gib_free\x18\x16 \x01(\x05B\x03\xe0A\x02R\x13totalStorageGibFree\x12\x1e\n" +
	"\bmin_vcpu\x18\x17 \x01(\x01B\x03\xe0A\x02R\aminVcpu\x12)\n" +
	"\x0emin_memory_gib\x18\x18 \x01(\x01B\x03\xe0A\x02R\fminMemoryGib\x12k\n" +
	"\x06prices\x18\x19 \x03(\v2N.org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.MachineTypePriceB\x03\xe0A\x02R\x06prices\x1a\xab\x02\n" +
	"\x10MachineTypePrice\x12=\n" +
	"\rvcpu_price_hr\x18\x01 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vvcpuPriceHr\x12H\n" +
	"\x13memory_gib_price_hr\x18\x02 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x10memoryGibPriceHr\x12;\n" +
	"\fgpu_price_hr\x18\x03 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\n" +
	"gpuPriceHr\x12Q\n" +
	"\x0fcommitment_term\x18\x04 \x01(\x0e2#.org.cudo.compute.v1.CommitmentTermB\x03\xe0A\x02R\x0ecommitmentTerm\"\x1b\n" +
	"\x19ListPublicVMImagesRequest\"U\n" +
	"\x1aListPublicVMImagesResponse\x127\n" +
	"\x06images\x18\x01 \x03(\v2\x1a.org.cudo.compute.v1.ImageB\x03\xe0A\x02R\x06images\"\x1a\n" +
	"\x18ListVMDataCentersRequest\"\xab\t\n" +
	"\x19ListVMDataCentersResponse\x12c\n" +
	"\fdata_centers\x18\x01 \x03(\v2;.org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenterB\x03\xe0A\x02R\vdataCenters\x1a\xa8\b\n" +
	"\fVMDataCenter\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tB\x03\xe0A\x02R\x02id\x12(\n" +
	"\rsupplier_name\x18\x04 \x01(\tB\x03\xe0A\x02R\fsupplierName\x12.\n" +
	"\x10renewable_energy\x18\x05 \x01(\bB\x03\xe0A\x02R\x0frenewableEnergy\x12z\n" +
	"\x11disk_pool_pricing\x18\x06 \x03(\v2N.org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.DiskStoragePriceHrR\x0fdiskPoolPricing\x12s\n" +
	"\x0fnetwork_pricing\x18\a \x03(\v2J.org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.NetworkPriceHrR\x0enetworkPricing\x12>\n" +
	"\x10network_price_hr\x18\r \x01(\v2\x14.google.type.DecimalR\x0enetworkPriceHr\x128\n" +
	"\ripv4_price_hr\x18\b \x01(\v2\x14.google.type.DecimalR\vipv4PriceHr\x12 \n" +
	"\tipv4_free\x18\t \x01(\x05B\x03\xe0A\x02R\bipv4Free\x12$\n" +
	"\vs3_endpoint\x18\n" +
	" \x01(\tB\x03\xe0A\x02R\n" +
	"s3Endpoint\x124\n" +
	"\blocation\x18\v \x01(\v2\x13.google.type.LatLngB\x03\xe0A\x02R\blocation\x12W\n" +
	"\x1bobject_storage_gib_price_hr\x18\f \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x03R\x17objectStorageGibPriceHr\x1a\xc4\x01\n" +
	"\x12DiskStoragePriceHr\x12m\n" +
	"\rstorage_class\x18\x01 \x01(\x0e2H.org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.StorageClassR\fstorageClass\x12?\n" +
	"\x11disk_gib_price_hr\x18\x02 \x01(\v2\x14.google.type.DecimalR\x0ediskGibPriceHr\x1aA\n" +
	"\x0eNetworkPriceHr\x12/\n" +
	"\bprice_hr\x18\x02 \x01(\v2\x14.google.type.DecimalR\apriceHr\"]\n" +
	"\fStorageClass\x12\x19\n" +
	"\x15STORAGE_CLASS_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13STORAGE_CLASS_LOCAL\x10\x01\x12\x19\n" +
	"\x15STORAGE_CLASS_NETWORK\x10\x02\"\x18\n" +
	"\x16ListVMGpuModelsRequest\"\xff\x01\n" +
	"\x17ListVMGpuModelsResponse\x12T\n" +
	"\n" +
	"gpu_models\x18\x01 \x03(\v25.org.cudo.compute.v1.ListVMGpuModelsResponse.GpuModelR\tgpuModels\x1a\x8d\x01\n" +
	"\bGpuModel\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tB\x03\xe0A\x02R\x02id\x12$\n" +
	"\vvendor_name\x18\x02 \x01(\tB\x03\xe0A\x02R\n" +
	"vendorName\x12\"\n" +
	"\n" +
	"model_name\x18\x03 \x01(\tB\x03\xe0A\x02R\tmodelName\x12\"\n" +
	"\n" +
	"memory_gib\x18\x04 \x01(\x05B\x03\xe0A\x02R\tmemoryGib\"\x8d\x01\n" +
	"\x1bCreatePrivateVMImageRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x18\n" +
	"\x05vm_id\x18\x02 \x01(\tB\x03\xe0A\x02R\x04vmId\x12\x13\n" +
	"\x02id\x18\x03 \x01(\tB\x03\xe0A\x02R\x02id\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"W\n" +
	"\x1cCreatePrivateVMImageResponse\x127\n" +
	"\x05image\x18\x01 \x01(\v2!.org.cudo.compute.v1.PrivateImageR\x05image\"L\n" +
	"\x1bDeletePrivateVMImageRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x1e\n" +
	"\x1cDeletePrivateVMImageResponse\"y\n" +
	"\x1aListPrivateVMImagesRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1f\n" +
	"\vpage_number\x18\x02 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"I\n" +
	"\x18GetPrivateVMImageRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"T\n" +
	"\x19GetPrivateVMImageResponse\x127\n" +
	"\x05image\x18\x01 \x01(\v2!.org.cudo.compute.v1.PrivateImageR\x05image\"\xc6\x01\n" +
	"\x1bListPrivateVMImagesResponse\x129\n" +
	"\x06images\x18\x01 \x03(\v2!.org.cudo.compute.v1.PrivateImageR\x06images\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"n\n" +
	"\x1bUpdatePrivateVMImageRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\x1e\n" +
	"\x1cUpdatePrivateVMImageResponse\"\x9a\x01\n" +
	"\x10ListDisksRequest\x12\"\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tB\x03\xe0A\x02R\tprojectId\x12\x1f\n" +
	"\vpage_number\x18\x02 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12$\n" +
	"\x0edata_center_id\x18\x04 \x01(\tR\fdataCenterId\"\xb2\x01\n" +
	"\x11ListDisksResponse\x12/\n" +
	"\x05disks\x18\x01 \x03(\v2\x19.org.cudo.compute.v1.DiskR\x05disks\x12$\n" +
	"\vtotal_count\x18\x02 \x01(\x05B\x03\xe0A\x02R\n" +
	"totalCount\x12$\n" +
	"\vpage_number\x18\x03 \x01(\x05B\x03\xe0A\x02R\n" +
	"pageNumber\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x02R\bpageSize\"?\n" +
	"\x0eGetDiskRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"@\n" +
	"\x0fGetDiskResponse\x12-\n" +
	"\x04disk\x18\x01 \x01(\v2\x19.org.cudo.compute.v1.DiskR\x04disk\"\x8e\x01\n" +
	"\x18CreateStorageDiskRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12$\n" +
	"\x0edata_center_id\x18\x02 \x01(\tR\fdataCenterId\x12-\n" +
	"\x04disk\x18\x03 \x01(\v2\x19.org.cudo.compute.v1.DiskR\x04disk\"\x1b\n" +
	"\x19CreateStorageDiskResponse\"I\n" +
	"\x18DeleteStorageDiskRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x1b\n" +
	"\x19DeleteStorageDiskResponse\"|\n" +
	"\x1aAttachSecurityGroupRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12*\n" +
	"\x11security_group_id\x18\x04 \x01(\tR\x0fsecurityGroupId\"\x1d\n" +
	"\x1bAttachSecurityGroupResponse\"|\n" +
	"\x1aDetachSecurityGroupRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12*\n" +
	"\x11security_group_id\x18\x04 \x01(\tR\x0fsecurityGroupId\"\x1d\n" +
	"\x1bDetachSecurityGroupResponse\"\xf8\x01\n" +
	"\x17UpdateVMMetadataRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12V\n" +
	"\bmetadata\x18\x03 \x03(\v2:.org.cudo.compute.v1.UpdateVMMetadataRequest.MetadataEntryR\bmetadata\x12\x14\n" +
	"\x05merge\x18\x04 \x01(\bR\x05merge\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x01\n" +
	"\x18UpdateVMMetadataResponse\x12W\n" +
	"\bmetadata\x18\x01 \x03(\v2;.org.cudo.compute.v1.UpdateVMMetadataResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcb\x01\n" +
	"\x19UpdateVMExpireTimeRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12=\n" +
	"\vexpire_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"expireTime\x12-\n" +
	"\x03ttl\x18\x04 \x01(\v2\x19.google.protobuf.DurationH\x00R\x03ttlB\f\n" +
	"\n" +
	"expiration\"Y\n" +
	"\x1aUpdateVMExpireTimeResponse\x12;\n" +
	"\vexpire_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expireTime\"n\n" +
	"\x17UpdateVMPasswordRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12\x1f\n" +
	"\bpassword\x18\x03 \x01(\tB\x03\xe0A\x02R\bpassword\"\x1a\n" +
	"\x18UpdateVMPasswordResponse\"\xc7\x01\n" +
	" UpdateVMAuthorizedSSHKeysRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12G\n" +
	"\x0essh_key_source\x18\x03 \x01(\x0e2!.org.cudo.compute.v1.SshKeySourceR\fsshKeySource\x12&\n" +
	"\x0fcustom_ssh_keys\x18\x04 \x03(\tR\rcustomSshKeys\"#\n" +
	"!UpdateVMAuthorizedSSHKeysResponse\"\x93\x01\n" +
	"\x0fCommitVMRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x02R\x02id\x12L\n" +
	"\x0fcommitment_term\x18\x03 \x01(\x0e2#.org.cudo.compute.v1.CommitmentTermR\x0ecommitmentTerm\"\x12\n" +
	"\x10CommitVMResponse\"\x95\x01\n" +
	"\x17GetVMMachineTypeRequest\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12+\n" +
	"\x0fmachine_type_id\x18\x02 \x01(\tB\x03\xe0A\x02R\rmachineTypeId\x12\"\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tB\x03\xe0A\x01R\tprojectId\"\x8c\r\n" +
	"\x18GetVMMachineTypeResponse\x12)\n" +
	"\x0edata_center_id\x18\x01 \x01(\tB\x03\xe0A\x02R\fdataCenterId\x12&\n" +
	"\fmachine_type\x18\x02 \x01(\tB\x03\xe0A\x02R\vmachineType\x12 \n" +
	"\tcpu_model\x18\x03 \x01(\tB\x03\xe0A\x02R\bcpuModel\x12 \n" +
	"\tgpu_model\x18\x04 \x01(\tB\x03\xe0A\x02R\bgpuModel\x12%\n" +
	"\fgpu_model_id\x18( \x01(\tB\x03\xe0A\x02R\n" +
	"gpuModelId\x129\n" +
	"\x17min_vcpu_per_memory_gib\x18\x05 \x01(\x01B\x03\xe0A\x02R\x13minVcpuPerMemoryGib\x129\n" +
	"\x17max_vcpu_per_memory_gib\x18\x06 \x01(\x01B\x03\xe0A\x02R\x13maxVcpuPerMemoryGib\x12,\n" +
	"\x10min_vcpu_per_gpu\x18\a \x01(\x01B\x03\xe0A\x02R\rminVcpuPerGpu\x12,\n" +
	"\x10max_vcpu_per_gpu\x18\b \x01(\x01B\x03\xe0A\x02R\rmaxVcpuPerGpu\x12=\n" +
	"\rvcpu_price_hr\x18\t \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vvcpuPriceHr\x12H\n" +
	"\x13memory_gib_price_hr\x18\n" +
	" \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x10memoryGibPriceHr\x12;\n" +
	"\fgpu_price_hr\x18\v \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\n" +
	"gpuPriceHr\x12Q\n" +
	"\x18min_storage_gib_price_hr\x18\f \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x14minStorageGibPriceHr\x12=\n" +
	"\ripv4_price_hr\x18\r \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vipv4PriceHr\x12.\n" +
	"\x10renewable_energy\x18\x0e \x01(\bB\x03\xe0A\x02R\x0frenewableEnergy\x12'\n" +
	"\rmax_vcpu_free\x18\x0f \x01(\x05B\x03\xe0A\x02R\vmaxVcpuFree\x12+\n" +
	"\x0ftotal_vcpu_free\x18\x10 \x01(\x05B\x03\xe0A\x02R\rtotalVcpuFree\x122\n" +
	"\x13max_memory_gib_free\x18\x11 \x01(\x05B\x03\xe0A\x02R\x10maxMemoryGibFree\x126\n" +
	"\x15total_memory_gib_free\x18\x12 \x01(\x05B\x03\xe0A\x02R\x12totalMemoryGibFree\x12%\n" +
	"\fmax_gpu_free\x18\x13 \x01(\x05B\x03\xe0A\x02R\n" +
	"maxGpuFree\x12)\n" +
	"\x0etotal_gpu_free\x18\x14 \x01(\x05B\x03\xe0A\x02R\ftotalGpuFree\x124\n" +
	"\x14max_storage_gib_free\x18\x15 \x01(\x05B\x03\xe0A\x02R\x11maxStorageGibFree\x128\n" +
	"\x16total_storage_gib_free\x18\x16 \x01(\x05B\x03\xe0A\x02R\x13totalStorageGibFree\x12\x1e\n" +
	"\bmin_vcpu\x18\x17 \x01(\x01B\x03\xe0A\x02R\aminVcpu\x12)\n" +
	"\x0emin_memory_gib\x18\x18 \x01(\x01B\x03\xe0A\x02R\fminMemoryGib\x12[\n" +
	"\x06prices\x18\x19 \x03(\v2>.org.cudo.compute.v1.GetVMMachineTypeResponse.MachineTypePriceB\x03\xe0A\x02R\x06prices\x1a\xab\x02\n" +
	"\x10MachineTypePrice\x12=\n" +
	"\rvcpu_price_hr\x18\x01 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\vvcpuPriceHr\x12H\n" +
	"\x13memory_gib_price_hr\x18\x02 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\x10memoryGibPriceHr\x12;\n" +
	"\fgpu_price_hr\x18\x03 \x01(\v2\x14.google.type.DecimalB\x03\xe0A\x02R\n" +
	"gpuPriceHr\x12Q\n" +
	"\x0fcommitment_term\x18\x04 \x01(\x0e2#.org.cudo.compute.v1.CommitmentTermB\x03\xe0A\x02R\x0ecommitmentTerm2\xa0;\n" +
	"\tVMService\x12\xaa\x01\n" +
	"\bCountVMs\x12$.org.cudo.compute.v1.CountVMsRequest\x1a%.org.cudo.compute.v1.CountVMsResponse\"Q\xbaG#\n" +
	"\x10Virtual Machines\x12\x05Count*\bCountVMs\x82\xd3\xe4\x93\x02%\x12#/v1/projects/{project_id}/count-vms\x12\xb7\x01\n" +
	"\bCreateVM\x12$.org.cudo.compute.v1.CreateVMRequest\x1a%.org.cudo.compute.v1.CreateVMResponse\"^\xbaG4\n" +
	"\x10Virtual Machines\x12\x16Create virtual machine*\bCreateVM\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v1/projects/{project_id}/vm\x12\x9b\x01\n" +
	"\x05GetVM\x12!.org.cudo.compute.v1.GetVMRequest\x1a\".org.cudo.compute.v1.GetVMResponse\"K\xbaG\x1e\n" +
	"\x10Virtual Machines\x12\x03Get*\x05GetVM\x82\xd3\xe4\x93\x02$\x12\"/v1/projects/{project_id}/vms/{id}\x12\x9f\x01\n" +
	"\aListVMs\x12#.org.cudo.compute.v1.ListVMsRequest\x1a$.org.cudo.compute.v1.ListVMsResponse\"I\xbaG!\n" +
	"\x10Virtual Machines\x12\x04List*\aListVMs\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v1/projects/{project_id}/vms\x12\xb7\x01\n" +
	"\tMonitorVM\x12%.org.cudo.compute.v1.MonitorVMRequest\x1a&.org.cudo.compute.v1.MonitorVMResponse\"[\xbaG&\n" +
	"\x10Virtual Machines\x12\aMonitor*\tMonitorVM\x82\xd3\xe4\x93\x02,\x12*/v1/projects/{project_id}/vms/{id}/monitor\x12\xb1\x01\n" +
	"\bRebootVM\x12$.org.cudo.compute.v1.RebootVMRequest\x1a%.org.cudo.compute.v1.RebootVMResponse\"X\xbaG$\n" +
	"\x10Virtual Machines\x12\x06Reboot*\bRebootVM\x82\xd3\xe4\x93\x02+\")/v1/projects/{project_id}/vms/{id}/reboot\x12\xab\x01\n" +
	"\aStartVM\x12#.org.cudo.compute.v1.StartVMRequest\x1a$.org.cudo.compute.v1.StartVMResponse\"U\xbaG\"\n" +
	"\x10Virtual Machines\x12\x05Start*\aStartVM\x82\xd3\xe4\x93\x02*\"(/v1/projects/{project_id}/vms/{id}/start\x12\xa5\x01\n" +
	"\x06StopVM\x12\".org.cudo.compute.v1.StopVMRequest\x1a#.org.cudo.compute.v1.StopVMResponse\"R\xbaG \n" +
	"\x10Virtual Machines\x12\x04Stop*\x06StopVM\x82\xd3\xe4\x93\x02)\"'/v1/projects/{project_id}/vms/{id}/stop\x12\xc3\x01\n" +
	"\vTerminateVM\x12'.org.cudo.compute.v1.TerminateVMRequest\x1a(.org.cudo.compute.v1.TerminateVMResponse\"a\xbaG*\n" +
	"\x10Virtual Machines\x12\tTerminate*\vTerminateVM\x82\xd3\xe4\x93\x02.\",/v1/projects/{project_id}/vms/{id}/terminate\x12\xbf\x01\n" +
	"\tConnectVM\x12%.org.cudo.compute.v1.ConnectVMRequest\x1a&.org.cudo.compute.v1.ConnectVMResponse\"c\xbaG.\n" +
	"\x10Virtual Machines\x12\x0fConnect via VNC*\tConnectVM\x82\xd3\xe4\x93\x02,\x12*/v1/projects/{project_id}/vms/{id}/connect\x12\xc7\x01\n" +
	"\bResizeVM\x12$.org.cudo.compute.v1.ResizeVMRequest\x1a%.org.cudo.compute.v1.ResizeVMResponse\"n\xbaG:\n" +
	"\x10Virtual Machines\x12\x1cResize vCPU and memory of VM*\bResizeVM\x82\xd3\xe4\x93\x02+\")/v1/projects/{project_id}/vms/{id}/resize\x12\xd4\x01\n" +
	"\x12ListPublicVMImages\x12..org.cudo.compute.v1.ListPublicVMImagesRequest\x1a/.org.cudo.compute.v1.ListPublicVMImagesResponse\"]\xbaG=\n" +
	"\x10Virtual Machines\x12\x15List public VM images*\x12ListPublicVMImages\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/vms/public-images\x12\xd1\x01\n" +
	"\x12ListVMMachineTypes\x12..org.cudo.compute.v1.ListVMMachineTypesRequest\x1a/.org.cudo.compute.v1.ListVMMachineTypesResponse\"Z\xbaG:\n" +
	"\x10Virtual Machines\x12\x12List machine types*\x12ListVMMachineTypes\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/vms/machine-types\x12\xd7\x01\n" +
	"\x13ListVMMachineTypes2\x12..org.cudo.compute.v1.ListVMMachineTypesRequest\x1a/.org.cudo.compute.v1.ListVMMachineTypesResponse\"_\xbaG=\n" +
	"\x10Virtual Machines\x12\x12List machine types*\x13ListVMMachineTypes2P\x01\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/vms/machine-types-2\x12\xcb\x01\n" +
	"\x11ListVMDataCenters\x12-.org.cudo.compute.v1.ListVMDataCentersRequest\x1a..org.cudo.compute.v1.ListVMDataCentersResponse\"W\xbaG8\n" +
	"\x10Virtual Machines\x12\x11List data centers*\x11ListVMDataCenters\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/vms/data-centers\x12\xbf\x01\n" +
	"\x0fListVMGpuModels\x12+.org.cudo.compute.v1.ListVMGpuModelsRequest\x1a,.org.cudo.compute.v1.ListVMGpuModelsResponse\"Q\xbaG4\n" +
	"\x10Virtual Machines\x12\x0fList GPU models*\x0fListVMGpuModels\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/vms/gpu-models\x12\xe9\x01\n" +
	"\x14CreatePrivateVMImage\x120.org.cudo.compute.v1.CreatePrivateVMImageRequest\x1a1.org.cudo.compute.v1.CreatePrivateVMImageResponse\"l\xbaGA\n" +
	"\x10Virtual Machines\x12\x17Create private VM image*\x14CreatePrivateVMImage\x82\xd3\xe4\x93\x02\"\" /v1/projects/{project_id}/images\x12\xee\x01\n" +
	"\x14DeletePrivateVMImage\x120.org.cudo.compute.v1.DeletePrivateVMImageRequest\x1a1.org.cudo.compute.v1.DeletePrivateVMImageResponse\"q\xbaGA\n" +
	"\x10Virtual Machines\x12\x17Delete private VM image*\x14DeletePrivateVMImage\x82\xd3\xe4\x93\x02'*%/v1/projects/{project_id}/images/{id}\x12\xdf\x01\n" +
	"\x11GetPrivateVMImage\x12-.org.cudo.compute.v1.GetPrivateVMImageRequest\x1a..org.cudo.compute.v1.GetPrivateVMImageResponse\"k\xbaG;\n" +
	"\x10Virtual Machines\x12\x14Get private VM image*\x11GetPrivateVMImage\x82\xd3\xe4\x93\x02'\x12%/v1/projects/{project_id}/images/{id}\x12\xe4\x01\n" +
	"\x13ListPrivateVMImages\x12/.org.cudo.compute.v1.ListPrivateVMImagesRequest\x1a0.org.cudo.compute.v1.ListPrivateVMImagesResponse\"j\xbaG?\n" +
	"\x10Virtual Machines\x12\x16List private VM images*\x13ListPrivateVMImages\x82\xd3\xe4\x93\x02\"\x12 /v1/projects/{project_id}/images\x12\xee\x01\n" +
	"\x14UpdatePrivateVMImage\x120.org.cudo.compute.v1.UpdatePrivateVMImageRequest\x1a1.org.cudo.compute.v1.UpdatePrivateVMImageResponse\"q\xbaGA\n" +
	"\x10Virtual Machines\x12\x17Update private VM image*\x14UpdatePrivateVMImage\x82\xd3\xe4\x93\x02'\"%/v1/projects/{project_id}/images/{id}\x12\xd0\x01\n" +
	"\x11CreateStorageDisk\x12-.org.cudo.compute.v1.CreateStorageDiskRequest\x1a..org.cudo.compute.v1.CreateStorageDiskResponse\"\\\xbaG/\n" +
	"\x05Disks\x12\x13Create storage disk*\x11CreateStorageDisk\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/v1/projects/{project_id}/disks\x12\xcc\x01\n" +
	"\fResizeVMDisk\x12(.org.cudo.compute.v1.ResizeVMDiskRequest\x1a).org.cudo.compute.v1.ResizeVMDiskResponse\"g\xbaG4\n" +
	"\x10Virtual Machines\x12\x12Resize a VM's disk*\fResizeVMDisk\x82\xd3\xe4\x93\x02*2(/v1/projects/{project_id}/vms/{id}/disks\x12\xa4\x01\n" +
	"\tListDisks\x12%.org.cudo.compute.v1.ListDisksRequest\x1a&.org.cudo.compute.v1.ListDisksResponse\"H\xbaG\x1e\n" +
	"\x05Disks\x12\n" +
	"List disks*\tListDisks\x82\xd3\xe4\x93\x02!\x12\x1f/v1/projects/{project_id}/disks\x12\xa1\x01\n" +
	"\aGetDisk\x12#.org.cudo.compute.v1.GetDiskRequest\x1a$.org.cudo.compute.v1.GetDiskResponse\"K\xbaG\x1c\n" +
	"\x05Disks\x12\n" +
	"List disks*\aGetDisk\x82\xd3\xe4\x93\x02&\x12$/v1/projects/{project_id}/disks/{id}\x12\xd2\x01\n" +
	"\x11DeleteStorageDisk\x12-.org.cudo.compute.v1.DeleteStorageDiskRequest\x1a..org.cudo.compute.v1.DeleteStorageDiskResponse\"^\xbaG/\n" +
	"\x05Disks\x12\x13Delete storage disk*\x11DeleteStorageDisk\x82\xd3\xe4\x93\x02&*$/v1/projects/{project_id}/disks/{id}\x12\xde\x01\n" +
	"\x11AttachStorageDisk\x12-.org.cudo.compute.v1.AttachStorageDiskRequest\x1a..org.cudo.compute.v1.AttachStorageDiskResponse\"j\xbaG5\n" +
	"\x05Disks\x12\x19Attach storage disk to VM*\x11AttachStorageDisk\x82\xd3\xe4\x93\x02,2*/v1/projects/{project_id}/disk/{id}/attach\x12\xe0\x01\n" +
	"\x11DetachStorageDisk\x12-.org.cudo.compute.v1.DetachStorageDiskRequest\x1a..org.cudo.compute.v1.DetachStorageDiskResponse\"l\xbaG7\n" +
	"\x05Disks\x12\x1bDetach storage disk from VM*\x11DetachStorageDisk\x82\xd3\xe4\x93\x02,\x1a*/v1/projects/{project_id}/disk/{id}/detach\x12\x81\x02\n" +
	"\x13AttachSecurityGroup\x12/.org.cudo.compute.v1.AttachSecurityGroupRequest\x1a0.org.cudo.compute.v1.AttachSecurityGroupResponse\"\x86\x01\xbaGD\n" +
	"\x10Virtual Machines\x12\x1bAttach security group to VM*\x13AttachSecurityGroup\x82\xd3\xe4\x93\x02927/v1/projects/{project_id}/vm/{id}/security-group/attach\x12\x81\x02\n" +
	"\x13DetachSecurityGroup\x12/.org.cudo.compute.v1.DetachSecurityGroupRequest\x1a0.org.cudo.compute.v1.DetachSecurityGroupResponse\"\x86\x01\xbaGD\n" +
	"\x10Virtual Machines\x12\x1bAttach security group to VM*\x13DetachSecurityGroup\x82\xd3\xe4\x93\x02927/v1/projects/{project_id}/vm/{id}/security-group/detach\x12\xe1\x01\n" +
	"\x10UpdateVMMetadata\x12,.org.cudo.compute.v1.UpdateVMMetadataRequest\x1a-.org.cudo.compute.v1.UpdateVMMetadataResponse\"p\xbaG8\n" +
	"\x10Virtual Machines\x12\x12Update VM metadata*\x10UpdateVMMetadata\x82\xd3\xe4\x93\x02/:\x01*\"*/v1/projects/{project_id}/vm/{id}/metadata\x12\xef\x01\n" +
	"\x12UpdateVMExpireTime\x12..org.cudo.compute.v1.UpdateVMExpireTimeRequest\x1a/.org.cudo.compute.v1.UpdateVMExpireTimeResponse\"x\xbaG=\n" +
	"\x10Virtual Machines\x12\x15Update VM expire time*\x12UpdateVMExpireTime\x82\xd3\xe4\x93\x022:\x01*\"-/v1/projects/{project_id}/vm/{id}/expire-time\x12\xe1\x01\n" +
	"\x10UpdateVMPassword\x12,.org.cudo.compute.v1.UpdateVMPasswordRequest\x1a-.org.cudo.compute.v1.UpdateVMPasswordResponse\"p\xbaG8\n" +
	"\x10Virtual Machines\x12\x12Update VM password*\x10UpdateVMPassword\x82\xd3\xe4\x93\x02/:\x01*\"*/v1/projects/{project_id}/vm/{id}/password\x12\x9c\x02\n" +
	"\x19UpdateVMAuthorizedSSHKeys\x125.org.cudo.compute.v1.UpdateVMAuthorizedSSHKeysRequest\x1a6.org.cudo.compute.v1.UpdateVMAuthorizedSSHKeysResponse\"\x8f\x01\xbaGL\n" +
	"\x10Virtual Machines\x12\x1dUpdate VM authorized SSH keys*\x19UpdateVMAuthorizedSSHKeys\x82\xd3\xe4\x93\x02::\x01*\"5/v1/projects/{project_id}/vm/{id}/authorized-ssh-keys\x12\xc7\x01\n" +
	"\bCommitVM\x12$.org.cudo.compute.v1.CommitVMRequest\x1a%.org.cudo.compute.v1.CommitVMResponse\"n\xbaG8\n" +
	"\x10Virtual Machines\x12\x1aCommit VM for a fixed term*\bCommitVM\x82\xd3\xe4\x93\x02-:\x01*\"(/v1/projects/{project_id}/vm/{id}/commit\x12\xf8\x01\n" +
	"\x10GetVMMachineType\x12,.org.cudo.compute.v1.GetVMMachineTypeRequest\x1a-.org.cudo.compute.v1.GetVMMachineTypeResponse\"\x86\x01\xbaG6\n" +
	"\x10Virtual Machines\x12\x10Get machine type*\x10GetVMMachineType\x82\xd3\xe4\x93\x02G\x12E/v1/vms/data-centers/{data_center_id}/machine_types/{machine_type_id}BEZCgithub.com/CudoVentures/terraform-provider-cudo/internal/compute/vmb\x06proto3"

var (
	file_svc_compute_vm_vm_svc_proto_rawDescOnce sync.Once
	file_svc_compute_vm_vm_svc_proto_rawDescData []byte
)

func file_svc_compute_vm_vm_svc_proto_rawDescGZIP() []byte {
	file_svc_compute_vm_vm_svc_proto_rawDescOnce.Do(func() {
		file_svc_compute_vm_vm_svc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_compute_vm_vm_svc_proto_rawDesc), len(file_svc_compute_vm_vm_svc_proto_rawDesc)))
	})
	return file_svc_compute_vm_vm_svc_proto_rawDescData
}

var file_svc_compute_vm_vm_svc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_svc_compute_vm_vm_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_svc_compute_vm_vm_svc_proto_goTypes = []any{
	(ListVMDataCentersResponse_VMDataCenter_StorageClass)(0),          // 0: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.StorageClass
	(*CreateVMRequest)(nil),                                           // 1: org.cudo.compute.v1.CreateVMRequest
	(*CreateVMResponse)(nil),                                          // 2: org.cudo.compute.v1.CreateVMResponse
	(*ListVMsRequest)(nil),                                            // 3: org.cudo.compute.v1.ListVMsRequest
	(*ListVMsResponse)(nil),                                           // 4: org.cudo.compute.v1.ListVMsResponse
	(*ResizeVMDiskRequest)(nil),                                       // 5: org.cudo.compute.v1.ResizeVMDiskRequest
	(*ResizeVMDiskResponse)(nil),                                      // 6: org.cudo.compute.v1.ResizeVMDiskResponse
	(*ResizeVMRequest)(nil),                                           // 7: org.cudo.compute.v1.ResizeVMRequest
	(*ResizeVMResponse)(nil),                                          // 8: org.cudo.compute.v1.ResizeVMResponse
	(*AttachStorageDiskRequest)(nil),                                  // 9: org.cudo.compute.v1.AttachStorageDiskRequest
	(*AttachStorageDiskResponse)(nil),                                 // 10: org.cudo.compute.v1.AttachStorageDiskResponse
	(*DetachStorageDiskRequest)(nil),                                  // 11: org.cudo.compute.v1.DetachStorageDiskRequest
	(*DetachStorageDiskResponse)(nil),                                 // 12: org.cudo.compute.v1.DetachStorageDiskResponse
	(*StartVMRequest)(nil),                                            // 13: org.cudo.compute.v1.StartVMRequest
	(*StartVMResponse)(nil),                                           // 14: org.cudo.compute.v1.StartVMResponse
	(*StopVMRequest)(nil),                                             // 15: org.cudo.compute.v1.StopVMRequest
	(*StopVMResponse)(nil),                                            // 16: org.cudo.compute.v1.StopVMResponse
	(*TerminateVMRequest)(nil),                                        // 17: org.cudo.compute.v1.TerminateVMRequest
	(*TerminateVMResponse)(nil),                                       // 18: org.cudo.compute.v1.TerminateVMResponse
	(*RebootVMRequest)(nil),                                           // 19: org.cudo.compute.v1.RebootVMRequest
	(*RebootVMResponse)(nil),                                          // 20: org.cudo.compute.v1.RebootVMResponse
	(*GetVMRequest)(nil),                                              // 21: org.cudo.compute.v1.GetVMRequest
	(*GetVMResponse)(nil),                                             // 22: org.cudo.compute.v1.GetVMResponse
	(*CountVMsRequest)(nil),                                           // 23: org.cudo.compute.v1.CountVMsRequest
	(*CountVMsResponse)(nil),                                          // 24: org.cudo.compute.v1.CountVMsResponse
	(*MonitorVMRequest)(nil),                                          // 25: org.cudo.compute.v1.MonitorVMRequest
	(*MonitorVMResponse)(nil),                                         // 26: org.cudo.compute.v1.MonitorVMResponse
	(*ConnectVMRequest)(nil),                                          // 27: org.cudo.compute.v1.ConnectVMRequest
	(*ConnectVMResponse)(nil),                                         // 28: org.cudo.compute.v1.ConnectVMResponse
	(*ListVMMachineTypesRequest)(nil),                                 // 29: org.cudo.compute.v1.ListVMMachineTypesRequest
	(*ListVMMachineTypesResponse)(nil),                                // 30: org.cudo.compute.v1.ListVMMachineTypesResponse
	(*ListPublicVMImagesRequest)(nil),                                 // 31: org.cudo.compute.v1.ListPublicVMImagesRequest
	(*ListPublicVMImagesResponse)(nil),                                // 32: org.cudo.compute.v1.ListPublicVMImagesResponse
	(*ListVMDataCentersRequest)(nil),                                  // 33: org.cudo.compute.v1.ListVMDataCentersRequest
	(*ListVMDataCentersResponse)(nil),                                 // 34: org.cudo.compute.v1.ListVMDataCentersResponse
	(*ListVMGpuModelsRequest)(nil),                                    // 35: org.cudo.compute.v1.ListVMGpuModelsRequest
	(*ListVMGpuModelsResponse)(nil),                                   // 36: org.cudo.compute.v1.ListVMGpuModelsResponse
	(*CreatePrivateVMImageRequest)(nil),                               // 37: org.cudo.compute.v1.CreatePrivateVMImageRequest
	(*CreatePrivateVMImageResponse)(nil),                              // 38: org.cudo.compute.v1.CreatePrivateVMImageResponse
	(*DeletePrivateVMImageRequest)(nil),                               // 39: org.cudo.compute.v1.DeletePrivateVMImageRequest
	(*DeletePrivateVMImageResponse)(nil),                              // 40: org.cudo.compute.v1.DeletePrivateVMImageResponse
	(*ListPrivateVMImagesRequest)(nil),                                // 41: org.cudo.compute.v1.ListPrivateVMImagesRequest
	(*GetPrivateVMImageRequest)(nil),                                  // 42: org.cudo.compute.v1.GetPrivateVMImageRequest
	(*GetPrivateVMImageResponse)(nil),                                 // 43: org.cudo.compute.v1.GetPrivateVMImageResponse
	(*ListPrivateVMImagesResponse)(nil),                               // 44: org.cudo.compute.v1.ListPrivateVMImagesResponse
	(*UpdatePrivateVMImageRequest)(nil),                               // 45: org.cudo.compute.v1.UpdatePrivateVMImageRequest
	(*UpdatePrivateVMImageResponse)(nil),                              // 46: org.cudo.compute.v1.UpdatePrivateVMImageResponse
	(*ListDisksRequest)(nil),                                          // 47: org.cudo.compute.v1.ListDisksRequest
	(*ListDisksResponse)(nil),                                         // 48: org.cudo.compute.v1.ListDisksResponse
	(*GetDiskRequest)(nil),                                            // 49: org.cudo.compute.v1.GetDiskRequest
	(*GetDiskResponse)(nil),                                           // 50: org.cudo.compute.v1.GetDiskResponse
	(*CreateStorageDiskRequest)(nil),                                  // 51: org.cudo.compute.v1.CreateStorageDiskRequest
	(*CreateStorageDiskResponse)(nil),                                 // 52: org.cudo.compute.v1.CreateStorageDiskResponse
	(*DeleteStorageDiskRequest)(nil),                                  // 53: org.cudo.compute.v1.DeleteStorageDiskRequest
	(*DeleteStorageDiskResponse)(nil),                                 // 54: org.cudo.compute.v1.DeleteStorageDiskResponse
	(*AttachSecurityGroupRequest)(nil),                                // 55: org.cudo.compute.v1.AttachSecurityGroupRequest
	(*AttachSecurityGroupResponse)(nil),                               // 56: org.cudo.compute.v1.AttachSecurityGroupResponse
	(*DetachSecurityGroupRequest)(nil),                                // 57: org.cudo.compute.v1.DetachSecurityGroupRequest
	(*DetachSecurityGroupResponse)(nil),                               // 58: org.cudo.compute.v1.DetachSecurityGroupResponse
	(*UpdateVMMetadataRequest)(nil),                                   // 59: org.cudo.compute.v1.UpdateVMMetadataRequest
	(*UpdateVMMetadataResponse)(nil),                                  // 60: org.cudo.compute.v1.UpdateVMMetadataResponse
	(*UpdateVMExpireTimeRequest)(nil),                                 // 61: org.cudo.compute.v1.UpdateVMExpireTimeRequest
	(*UpdateVMExpireTimeResponse)(nil),                                // 62: org.cudo.compute.v1.UpdateVMExpireTimeResponse
	(*UpdateVMPasswordRequest)(nil),                                   // 63: org.cudo.compute.v1.UpdateVMPasswordRequest
	(*UpdateVMPasswordResponse)(nil),                                  // 64: org.cudo.compute.v1.UpdateVMPasswordResponse
	(*UpdateVMAuthorizedSSHKeysRequest)(nil),                          // 65: org.cudo.compute.v1.UpdateVMAuthorizedSSHKeysRequest
	(*UpdateVMAuthorizedSSHKeysResponse)(nil),                         // 66: org.cudo.compute.v1.UpdateVMAuthorizedSSHKeysResponse
	(*CommitVMRequest)(nil),                                           // 67: org.cudo.compute.v1.CommitVMRequest
	(*CommitVMResponse)(nil),                                          // 68: org.cudo.compute.v1.CommitVMResponse
	(*GetVMMachineTypeRequest)(nil),                                   // 69: org.cudo.compute.v1.GetVMMachineTypeRequest
	(*GetVMMachineTypeResponse)(nil),                                  // 70: org.cudo.compute.v1.GetVMMachineTypeResponse
	(*CreateVMRequest_NIC)(nil),                                       // 71: org.cudo.compute.v1.CreateVMRequest.NIC
	nil,                                                               // 72: org.cudo.compute.v1.CreateVMRequest.MetadataEntry
	(*CreateVMRequest_CpuTopology)(nil),                               // 73: org.cudo.compute.v1.CreateVMRequest.CpuTopology
	(*ListVMMachineTypesResponse_VMMachineType)(nil),                  // 74: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType
	(*ListVMMachineTypesResponse_VMMachineType_MachineTypePrice)(nil), // 75: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.MachineTypePrice
	(*ListVMDataCentersResponse_VMDataCenter)(nil),                    // 76: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter
	(*ListVMDataCentersResponse_VMDataCenter_DiskStoragePriceHr)(nil), // 77: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.DiskStoragePriceHr
	(*ListVMDataCentersResponse_VMDataCenter_NetworkPriceHr)(nil),     // 78: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.NetworkPriceHr
	(*ListVMGpuModelsResponse_GpuModel)(nil),                          // 79: org.cudo.compute.v1.ListVMGpuModelsResponse.GpuModel
	nil,                                                               // 80: org.cudo.compute.v1.UpdateVMMetadataRequest.MetadataEntry
	nil,                                                               // 81: org.cudo.compute.v1.UpdateVMMetadataResponse.MetadataEntry
	(*GetVMMachineTypeResponse_MachineTypePrice)(nil),                 // 82: org.cudo.compute.v1.GetVMMachineTypeResponse.MachineTypePrice
	(SshKeySource)(0),                                                 // 83: org.cudo.compute.v1.SshKeySource
	(*Disk)(nil),                                                      // 84: org.cudo.compute.v1.Disk
	(*timestamppb.Timestamp)(nil),                                     // 85: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                                       // 86: google.protobuf.Duration
	(compute.CommitmentTerm)(0),                                       // 87: org.cudo.compute.v1.CommitmentTerm
	(*VM)(nil),                                                        // 88: org.cudo.compute.v1.VM
	(*decimal.Decimal)(nil),                                           // 89: google.type.Decimal
	(*VMMonitoringItem)(nil),                                          // 90: org.cudo.compute.v1.VMMonitoringItem
	(*compute.Image)(nil),                                             // 91: org.cudo.compute.v1.Image
	(*PrivateImage)(nil),                                              // 92: org.cudo.compute.v1.PrivateImage
	(*latlng.LatLng)(nil),                                             // 93: google.type.LatLng
}
var file_svc_compute_vm_vm_svc_proto_depIdxs = []int32{
	83,  // 0: org.cudo.compute.v1.CreateVMRequest.ssh_key_source:type_name -> org.cudo.compute.v1.SshKeySource
	84,  // 1: org.cudo.compute.v1.CreateVMRequest.boot_disk:type_name -> org.cudo.compute.v1.Disk
	71,  // 2: org.cudo.compute.v1.CreateVMRequest.nics:type_name -> org.cudo.compute.v1.CreateVMRequest.NIC
	72,  // 3: org.cudo.compute.v1.CreateVMRequest.metadata:type_name -> org.cudo.compute.v1.CreateVMRequest.MetadataEntry
	73,  // 4: org.cudo.compute.v1.CreateVMRequest.topology:type_name -> org.cudo.compute.v1.CreateVMRequest.CpuTopology
	85,  // 5: org.cudo.compute.v1.CreateVMRequest.expire_time:type_name -> google.protobuf.Timestamp
	86,  // 6: org.cudo.compute.v1.CreateVMRequest.ttl:type_name -> google.protobuf.Duration
	87,  // 7: org.cudo.compute.v1.CreateVMRequest.commitment_term:type_name -> org.cudo.compute.v1.CommitmentTerm
	88,  // 8: org.cudo.compute.v1.CreateVMResponse.vm:type_name -> org.cudo.compute.v1.VM
	88,  // 9: org.cudo.compute.v1.ListVMsResponse.VMs:type_name -> org.cudo.compute.v1.VM
	88,  // 10: org.cudo.compute.v1.ResizeVMResponse.vm:type_name -> org.cudo.compute.v1.VM
	88,  // 11: org.cudo.compute.v1.GetVMResponse.VM:type_name -> org.cudo.compute.v1.VM
	89,  // 12: org.cudo.compute.v1.GetVMResponse.vcpu_price_hr:type_name -> google.type.Decimal
	89,  // 13: org.cudo.compute.v1.GetVMResponse.total_vcpu_price_hr:type_name -> google.type.Decimal
	89,  // 14: org.cudo.compute.v1.GetVMResponse.memory_gib_price_hr:type_name -> google.type.Decimal
	89,  // 15: org.cudo.compute.v1.GetVMResponse.total_memory_price_hr:type_name -> google.type.Decimal
	89,  // 16: org.cudo.compute.v1.GetVMResponse.gpu_price_hr:type_name -> google.type.Decimal
	89,  // 17: org.cudo.compute.v1.GetVMResponse.total_gpu_price_hr:type_name -> google.type.Decimal
	89,  // 18: org.cudo.compute.v1.GetVMResponse.storage_gib_price_hr:type_name -> google.type.Decimal
	89,  // 19: org.cudo.compute.v1.GetVMResponse.total_storage_price_hr:type_name -> google.type.Decimal
	89,  // 20: org.cudo.compute.v1.GetVMResponse.ipv4_price_hr:type_name -> google.type.Decimal
	89,  // 21: org.cudo.compute.v1.GetVMResponse.total_price_hr:type_name -> google.type.Decimal
	90,  // 22: org.cudo.compute.v1.MonitorVMResponse.items:type_name -> org.cudo.compute.v1.VMMonitoringItem
	74,  // 23: org.cudo.compute.v1.ListVMMachineTypesResponse.machine_types:type_name -> org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType
	91,  // 24: org.cudo.compute.v1.ListPublicVMImagesResponse.images:type_name -> org.cudo.compute.v1.Image
	76,  // 25: org.cudo.compute.v1.ListVMDataCentersResponse.data_centers:type_name -> org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter
	79,  // 26: org.cudo.compute.v1.ListVMGpuModelsResponse.gpu_models:type_name -> org.cudo.compute.v1.ListVMGpuModelsResponse.GpuModel
	92,  // 27: org.cudo.compute.v1.CreatePrivateVMImageResponse.image:type_name -> org.cudo.compute.v1.PrivateImage
	92,  // 28: org.cudo.compute.v1.GetPrivateVMImageResponse.image:type_name -> org.cudo.compute.v1.PrivateImage
	92,  // 29: org.cudo.compute.v1.ListPrivateVMImagesResponse.images:type_name -> org.cudo.compute.v1.PrivateImage
	84,  // 30: org.cudo.compute.v1.ListDisksResponse.disks:type_name -> org.cudo.compute.v1.Disk
	84,  // 31: org.cudo.compute.v1.GetDiskResponse.disk:type_name -> org.cudo.compute.v1.Disk
	84,  // 32: org.cudo.compute.v1.CreateStorageDiskRequest.disk:type_name -> org.cudo.compute.v1.Disk
	80,  // 33: org.cudo.compute.v1.UpdateVMMetadataRequest.metadata:type_name -> org.cudo.compute.v1.UpdateVMMetadataRequest.MetadataEntry
	81,  // 34: org.cudo.compute.v1.UpdateVMMetadataResponse.metadata:type_name -> org.cudo.compute.v1.UpdateVMMetadataResponse.MetadataEntry
	85,  // 35: org.cudo.compute.v1.UpdateVMExpireTimeRequest.expire_time:type_name -> google.protobuf.Timestamp
	86,  // 36: org.cudo.compute.v1.UpdateVMExpireTimeRequest.ttl:type_name -> google.protobuf.Duration
	85,  // 37: org.cudo.compute.v1.UpdateVMExpireTimeResponse.expire_time:type_name -> google.protobuf.Timestamp
	83,  // 38: org.cudo.compute.v1.UpdateVMAuthorizedSSHKeysRequest.ssh_key_source:type_name -> org.cudo.compute.v1.SshKeySource
	87,  // 39: org.cudo.compute.v1.CommitVMRequest.commitment_term:type_name -> org.cudo.compute.v1.CommitmentTerm
	89,  // 40: org.cudo.compute.v1.GetVMMachineTypeResponse.vcpu_price_hr:type_name -> google.type.Decimal
	89,  // 41: org.cudo.compute.v1.GetVMMachineTypeResponse.memory_gib_price_hr:type_name -> google.type.Decimal
	89,  // 42: org.cudo.compute.v1.GetVMMachineTypeResponse.gpu_price_hr:type_name -> google.type.Decimal
	89,  // 43: org.cudo.compute.v1.GetVMMachineTypeResponse.min_storage_gib_price_hr:type_name -> google.type.Decimal
	89,  // 44: org.cudo.compute.v1.GetVMMachineTypeResponse.ipv4_price_hr:type_name -> google.type.Decimal
	82,  // 45: org.cudo.compute.v1.GetVMMachineTypeResponse.prices:type_name -> org.cudo.compute.v1.GetVMMachineTypeResponse.MachineTypePrice
	89,  // 46: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.vcpu_price_hr:type_name -> google.type.Decimal
	89,  // 47: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.memory_gib_price_hr:type_name -> google.type.Decimal
	89,  // 48: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.gpu_price_hr:type_name -> google.type.Decimal
	89,  // 49: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.min_storage_gib_price_hr:type_name -> google.type.Decimal
	89,  // 50: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.ipv4_price_hr:type_name -> google.type.Decimal
	75,  // 51: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.prices:type_name -> org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.MachineTypePrice
	89,  // 52: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.MachineTypePrice.vcpu_price_hr:type_name -> google.type.Decimal
	89,  // 53: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.MachineTypePrice.memory_gib_price_hr:type_name -> google.type.Decimal
	89,  // 54: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.MachineTypePrice.gpu_price_hr:type_name -> google.type.Decimal
	87,  // 55: org.cudo.compute.v1.ListVMMachineTypesResponse.VMMachineType.MachineTypePrice.commitment_term:type_name -> org.cudo.compute.v1.CommitmentTerm
	77,  // 56: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.disk_pool_pricing:type_name -> org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.DiskStoragePriceHr
	78,  // 57: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.network_pricing:type_name -> org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.NetworkPriceHr
	89,  // 58: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.network_price_hr:type_name -> google.type.Decimal
	89,  // 59: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.ipv4_price_hr:type_name -> google.type.Decimal
	93,  // 60: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.location:type_name -> google.type.LatLng
	89,  // 61: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.object_storage_gib_price_hr:type_name -> google.type.Decimal
	0,   // 62: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.DiskStoragePriceHr.storage_class:type_name -> org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.StorageClass
	89,  // 63: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.DiskStoragePriceHr.disk_gib_price_hr:type_name -> google.type.Decimal
	89,  // 64: org.cudo.compute.v1.ListVMDataCentersResponse.VMDataCenter.NetworkPriceHr.price_hr:type_name -> google.type.Decimal
	89,  // 65: org.cudo.compute.v1.GetVMMachineTypeResponse.MachineTypePrice.vcpu_price_hr:type_name -> google.type.Decimal
	89,  // 66: org.cudo.compute.v1.GetVMMachineTypeResponse.MachineTypePrice.memory_gib_price_hr:type_name -> google.type.Decimal
	89,  // 67: org.cudo.compute.v1.GetVMMachineTypeResponse.MachineTypePrice.gpu_price_hr:type_name -> google.type.Decimal
	87,  // 68: org.cudo.compute.v1.GetVMMachineTypeResponse.MachineTypePrice.commitment_term:type_name -> org.cudo.compute.v1.CommitmentTerm
	23,  // 69: org.cudo.compute.v1.VMService.CountVMs:input_type -> org.cudo.compute.v1.CountVMsRequest
	1,   // 70: org.cudo.compute.v1.VMService.CreateVM:input_type -> org.cudo.compute.v1.CreateVMRequest
	21,  // 71: org.cudo.compute.v1.VMService.GetVM:input_type -> org.cudo.compute.v1.GetVMRequest
	3,   // 72: org.cudo.compute.v1.VMService.ListVMs:input_type -> org.cudo.compute.v1.ListVMsRequest
	25,  // 73: org.cudo.compute.v1.VMService.MonitorVM:input_type -> org.cudo.compute.v1.MonitorVMRequest
	19,  // 74: org.cudo.compute.v1.VMService.RebootVM:input_type -> org.cudo.compute.v1.RebootVMRequest
	13,  // 75: org.cudo.compute.v1.VMService.StartVM:input_type -> org.cudo.compute.v1.StartVMRequest
	15,  // 76: org.cudo.compute.v1.VMService.StopVM:input_type -> org.cudo.compute.v1.StopVMRequest
	17,  // 77: org.cudo.compute.v1.VMService.TerminateVM:input_type -> org.cudo.compute.v1.TerminateVMRequest
	27,  // 78: org.cudo.compute.v1.VMService.ConnectVM:input_type -> org.cudo.compute.v1.ConnectVMRequest
	7,   // 79: org.cudo.compute.v1.VMService.ResizeVM:input_type -> org.cudo.compute.v1.ResizeVMRequest
	31,  // 80: org.cudo.compute.v1.VMService.ListPublicVMImages:input_type -> org.cudo.compute.v1.ListPublicVMImagesRequest
	29,  // 81: org.cudo.compute.v1.VMService.ListVMMachineTypes:input_type -> org.cudo.compute.v1.ListVMMachineTypesRequest
	29,  // 82: org.cudo.compute.v1.VMService.ListVMMachineTypes2:input_type -> org.cudo.compute.v1.ListVMMachineTypesRequest
	33,  // 83: org.cudo.compute.v1.VMService.ListVMDataCenters:input_type -> org.cudo.compute.v1.ListVMDataCentersRequest
	35,  // 84: org.cudo.compute.v1.VMService.ListVMGpuModels:input_type -> org.cudo.compute.v1.ListVMGpuModelsRequest
	37,  // 85: org.cudo.compute.v1.VMService.CreatePrivateVMImage:input_type -> org.cudo.compute.v1.CreatePrivateVMImageRequest
	39,  // 86: org.cudo.compute.v1.VMService.DeletePrivateVMImage:input_type -> org.cudo.compute.v1.DeletePrivateVMImageRequest
	42,  // 87: org.cudo.compute.v1.VMService.GetPrivateVMImage:input_type -> org.cudo.compute.v1.GetPrivateVMImageRequest
	41,  // 88: org.cudo.compute.v1.VMService.ListPrivateVMImages:input_type -> org.cudo.compute.v1.ListPrivateVMImagesRequest
	45,  // 89: org.cudo.compute.v1.VMService.UpdatePrivateVMImage:input_type -> org.cudo.compute.v1.UpdatePrivateVMImageRequest
	51,  // 90: org.cudo.compute.v1.VMService.CreateStorageDisk:input_type -> org.cudo.compute.v1.CreateStorageDiskRequest
	5,   // 91: org.cudo.compute.v1.VMService.ResizeVMDisk:input_type -> org.cudo.compute.v1.ResizeVMDiskRequest
	47,  // 92: org.cudo.compute.v1.VMService.ListDisks:input_type -> org.cudo.compute.v1.ListDisksRequest
	49,  // 93: org.cudo.compute.v1.VMService.GetDisk:input_type -> org.cudo.compute.v1.GetDiskRequest
	53,  // 94: org.cudo.compute.v1.VMService.DeleteStorageDisk:input_type -> org.cudo.compute.v1.DeleteStorageDiskRequest
	9,   // 95: org.cudo.compute.v1.VMService.AttachStorageDisk:input_type -> org.cudo.compute.v1.AttachStorageDiskRequest
	11,  // 96: org.cudo.compute.v1.VMService.DetachStorageDisk:input_type -> org.cudo.compute.v1.DetachStorageDiskRequest
	55,  // 97: org.cudo.compute.v1.VMService.AttachSecurityGroup:input_type -> org.cudo.compute.v1.AttachSecurityGroupRequest
	57,  // 98: org.cudo.compute.v1.VMService.DetachSecurityGroup:input_type -> org.cudo.compute.v1.DetachSecurityGroupRequest
	59,  // 99: org.cudo.compute.v1.VMService.UpdateVMMetadata:input_type -> org.cudo.compute.v1.UpdateVMMetadataRequest
	61,  // 100: org.cudo.compute.v1.VMService.UpdateVMExpireTime:input_type -> org.cudo.compute.v1.UpdateVMExpireTimeRequest
	63,  // 101: org.cudo.compute.v1.VMService.UpdateVMPassword:input_type -> org.cudo.compute.v1.UpdateVMPasswordRequest
	65,  // 102: org.cudo.compute.v1.VMService.UpdateVMAuthorizedSSHKeys:input_type -> org.cudo.compute.v1.UpdateVMAuthorizedSSHKeysRequest
	67,  // 103: org.cudo.compute.v1.VMService.CommitVM:input_type -> org.cudo.compute.v1.CommitVMRequest
	69,  // 104: org.cudo.compute.v1.VMService.GetVMMachineType:input_type -> org.cudo.compute.v1.GetVMMachineTypeRequest
	24,  // 105: org.cudo.compute.v1.VMService.CountVMs:output_type -> org.cudo.compute.v1.CountVMsResponse
	2,   // 106: org.cudo.compute.v1.VMService.CreateVM:output_type -> org.cudo.compute.v1.CreateVMResponse
	22,  // 107: org.cudo.compute.v1.VMService.GetVM:output_type -> org.cudo.compute.v1.GetVMResponse
	4,   // 108: org.cudo.compute.v1.VMService.ListVMs:output_type -> org.cudo.compute.v1.ListVMsResponse
	26,  // 109: org.cudo.compute.v1.VMService.MonitorVM:output_type -> org.cudo.compute.v1.MonitorVMResponse
	20,  // 110: org.cudo.compute.v1.VMService.RebootVM:output_type -> org.cudo.compute.v1.RebootVMResponse
	14,  // 111: org.cudo.compute.v1.VMService.StartVM:output_type -> org.cudo.compute.v1.StartVMResponse
	16,  // 112: org.cudo.compute.v1.VMService.StopVM:output_type -> org.cudo.compute.v1.StopVMResponse
	18,  // 113: org.cudo.compute.v1.VMService.TerminateVM:output_type -> org.cudo.compute.v1.TerminateVMResponse
	28,  // 114: org.cudo.compute.v1.VMService.ConnectVM:output_type -> org.cudo.compute.v1.ConnectVMResponse
	8,   // 115: org.cudo.compute.v1.VMService.ResizeVM:output_type -> org.cudo.compute.v1.ResizeVMResponse
	32,  // 116: org.cudo.compute.v1.VMService.ListPublicVMImages:output_type -> org.cudo.compute.v1.ListPublicVMImagesResponse
	30,  // 117: org.cudo.compute.v1.VMService.ListVMMachineTypes:output_type -> org.cudo.compute.v1.ListVMMachineTypesResponse
	30,  // 118: org.cudo.compute.v1.VMService.ListVMMachineTypes2:output_type -> org.cudo.compute.v1.ListVMMachineTypesResponse
	34,  // 119: org.cudo.compute.v1.VMService.ListVMDataCenters:output_type -> org.cudo.compute.v1.ListVMDataCentersResponse
	36,  // 120: org.cudo.compute.v1.VMService.ListVMGpuModels:output_type -> org.cudo.compute.v1.ListVMGpuModelsResponse
	38,  // 121: org.cudo.compute.v1.VMService.CreatePrivateVMImage:output_type -> org.cudo.compute.v1.CreatePrivateVMImageResponse
	40,  // 122: org.cudo.compute.v1.VMService.DeletePrivateVMImage:output_type -> org.cudo.compute.v1.DeletePrivateVMImageResponse
	43,  // 123: org.cudo.compute.v1.VMService.GetPrivateVMImage:output_type -> org.cudo.compute.v1.GetPrivateVMImageResponse
	44,  // 124: org.cudo.compute.v1.VMService.ListPrivateVMImages:output_type -> org.cudo.compute.v1.ListPrivateVMImagesResponse
	46,  // 125: org.cudo.compute.v1.VMService.UpdatePrivateVMImage:output_type -> org.cudo.compute.v1.UpdatePrivateVMImageResponse
	52,  // 126: org.cudo.compute.v1.VMService.CreateStorageDisk:output_type -> org.cudo.compute.v1.CreateStorageDiskResponse
	6,   // 127: org.cudo.compute.v1.VMService.ResizeVMDisk:output_type -> org.cudo.compute.v1.ResizeVMDiskResponse
	48,  // 128: org.cudo.compute.v1.VMService.ListDisks:output_type -> org.cudo.compute.v1.ListDisksResponse
	50,  // 129: org.cudo.compute.v1.VMService.GetDisk:output_type -> org.cudo.compute.v1.GetDiskResponse
	54,  // 130: org.cudo.compute.v1.VMService.DeleteStorageDisk:output_type -> org.cudo.compute.v1.DeleteStorageDiskResponse
	10,  // 131: org.cudo.compute.v1.VMService.AttachStorageDisk:output_type -> org.cudo.compute.v1.AttachStorageDiskResponse
	12,  // 132: org.cudo.compute.v1.VMService.DetachStorageDisk:output_type -> org.cudo.compute.v1.DetachStorageDiskResponse
	56,  // 133: org.cudo.compute.v1.VMService.AttachSecurityGroup:output_type -> org.cudo.compute.v1.AttachSecurityGroupResponse
	58,  // 134: org.cudo.compute.v1.VMService.DetachSecurityGroup:output_type -> org.cudo.compute.v1.DetachSecurityGroupResponse
	60,  // 135: org.cudo.compute.v1.VMService.UpdateVMMetadata:output_type -> org.cudo.compute.v1.UpdateVMMetadataResponse
	62,  // 136: org.cudo.compute.v1.VMService.UpdateVMExpireTime:output_type -> org.cudo.compute.v1.UpdateVMExpireTimeResponse
	64,  // 137: org.cudo.compute.v1.VMService.UpdateVMPassword:output_type -> org.cudo.compute.v1.UpdateVMPasswordResponse
	66,  // 138: org.cudo.compute.v1.VMService.UpdateVMAuthorizedSSHKeys:output_type -> org.cudo.compute.v1.UpdateVMAuthorizedSSHKeysResponse
	68,  // 139: org.cudo.compute.v1.VMService.CommitVM:output_type -> org.cudo.compute.v1.CommitVMResponse
	70,  // 140: org.cudo.compute.v1.VMService.GetVMMachineType:output_type -> org.cudo.compute.v1.GetVMMachineTypeResponse
	105, // [105:141] is the sub-list for method output_type
	69,  // [69:105] is the sub-list for method input_type
	69,  // [69:69] is the sub-list for extension type_name
	69,  // [69:69] is the sub-list for extension extendee
	0,   // [0:69] is the sub-list for field type_name
}

func init() { file_svc_compute_vm_vm_svc_proto_init() }
func file_svc_compute_vm_vm_svc_proto_init() {
	if File_svc_compute_vm_vm_svc_proto != nil {
		return
	}
	file_svc_compute_vm_vm_proto_init()
	file_svc_compute_vm_vm_svc_proto_msgTypes[0].OneofWrappers = []any{
		(*CreateVMRequest_ExpireTime)(nil),
		(*CreateVMRequest_Ttl)(nil),
	}
	file_svc_compute_vm_vm_svc_proto_msgTypes[60].OneofWrappers = []any{
		(*UpdateVMExpireTimeRequest_ExpireTime)(nil),
		(*UpdateVMExpireTimeRequest_Ttl)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_compute_vm_vm_svc_proto_rawDesc), len(file_svc_compute_vm_vm_svc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_compute_vm_vm_svc_proto_goTypes,
		DependencyIndexes: file_svc_compute_vm_vm_svc_proto_depIdxs,
		EnumInfos:         file_svc_compute_vm_vm_svc_proto_enumTypes,
		MessageInfos:      file_svc_compute_vm_vm_svc_proto_msgTypes,
	}.Build()
	File_svc_compute_vm_vm_svc_proto = out.File
	file_svc_compute_vm_vm_svc_proto_goTypes = nil
	file_svc_compute_vm_vm_svc_proto_depIdxs = nil
}
